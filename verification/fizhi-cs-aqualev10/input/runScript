#!/bin/csh
#
# Example PBS script to run a job on the myrinet-3 cluster.
# The lines beginning #PBS set various queuing parameters.
#
# o -N Job Name
#PBS -N fizhi-aqua
#
#
# o -l resource lists that control where job goes
#      here we ask for 3 nodes, each with the attribute "p4".
#PBS -l nodes=6:p4
#
#PBS -q four-twelve
#
# o Where to write output
# #PBS -e TTT.err.$$ 
#
# #PBS -o TTT.out.$$
#
#
# o Export all my environment variables to the job
#PBS -V
#

echo 'start'
#----------------------------------------------
set namPBS=fizhi-aqua
set runDir=/SCRATCH/s04/molod/fizhi-cs-aquampi6/input
set executable=/SCRATCH/s04/molod/fizhi-cs-aquampi6/build/mitgcmuv
set nit1mn=17856
set endRun=7
set partmn=1
#-------------------
# echo 'run in dir :' $runDir
cd $runDir

set its=`egrep 'nIter0' data | sed 's/ nIter0=//'| sed 's/,$//'`
set nms=`expr $its / $nit1mn`
#- to change length of 1 segment, change nms here:
#set nms=0
set nMs = `/home/molod/bin/add0upto3c $nms`
set nme=`expr $nms + $partmn`
set nMe = `/home/molod/bin/add0upto3c $nme`
set ite=`expr $nme \* $nit1mn`

set numPBS=`echo $PBS_NODEFILE | sed 's/\/usr\/spool\/PBS\/aux\///g'| sed 's/\.cg01//g'`
touch move_TTT_files
echo mv $namPBS.o$numPBS TTT.out.$nMe >> move_TTT_files
echo mv $namPBS.e$numPBS TTT.err.$nMe >> move_TTT_files

#-- avoid any output before this point !
#----------------------------------------------
echo $PBS_NODEFILE
cat  $PBS_NODEFILE
echo 'The list above shows the nodes this job has exclusive access to.'
echo 'The list can be found in the file named in the variable $PBS_NODEFILE'

rm -f run_here
date > run_here
cat $PBS_NODEFILE >> run_here
echo 'PBS job Number:' $numPBS >> run_here
echo on `hostname` run $executable 'in dir:' $runDir >> run_here

#-------------------
if ( $nms >= $endRun ) then
 echo 'Run already finished : month' $nms
 exit 9
else
 rm -f IamReady
endif

echo on `hostname` run $executable 'in dir:' `pwd`
echo 'start at month=' $nMs '(it=' $its '), run until mn=' $nMe '(it=' $ite ')'
echo 'start at month=' $nms '(it=' $its '), run until mn=' $nme '(it=' $ite ')'>> run_here

#-------------------
cp -p run_here std_outp
echo ' ' >> std_outp

cat $PBS_NODEFILE > mf
set ncpus = ( `wc -l mf | awk '{print $1}'` )
if ( $ncpus == 1 ) then
 $executable >>& std_outp
 set out=$?
 echo 'end with status' $out
else
 /usr/local/pkg/mpi/mpi-1.2.4..8a-gm-1.5/pgi/bin/mpirun.ch_gm -machinefile mf --gm-kill 5 -v -np $ncpus $executable
 set out=$?
 echo 'end with status' $out
 set out=0
endif

set nitPick = `/home/molod/bin/add0upto10c $ite`
if ( -f pickup.$nitPick.001.001.data ) then
 echo 'file:' pickup.$nitPick.001.001.data 'exist'
 if ( $out == 0 ) then
   mv std_outp std_outp.$nMe
  if ( $ncpus > 1 ) then
   cat  STDOUT.0000 >> std_outp.$nMe
   mv -f STDOUT.000? STDERR.000? temp
  endif
#- prepare new submission :
   sed "s/ nIter0=$its/ nIter0=$ite/" data > data.tmp.$numPBS
   mv data.tmp.$numPBS data
   sleep 5
 endif
else
 echo 'file:' pickup.$nitPick.001.001.data 'do not exist !'
 set out=9
endif

if ( $out != 0 ) then
 echo 'bad return status => STOP here'
 exit $out
endif 

if ( $nme >= $endRun ) then
  echo 'Run finished : month' $nme 'done !'
else
 touch IamReady
 qsub runScript
endif

exit
