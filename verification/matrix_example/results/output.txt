(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) //                      MITgcm UV
(PID.TID 0000.0001) //                      =========
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // execution environment starting up...
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // MITgcmUV version:  checkpoint57g_post
(PID.TID 0000.0001) // Build user:        spk
(PID.TID 0000.0001) // Build host:        dyn-128-59-150-49.dyn.columbia.edu
(PID.TID 0000.0001) // Build date:        Mon Apr 18 17:45:31 EDT 2005
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Execution Environment parameter file "eedata"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># Example "eedata" file
(PID.TID 0000.0001) ># Lines beginning "#" are comments
(PID.TID 0000.0001) ># nTx - No. threads per process in X
(PID.TID 0000.0001) ># nTy - No. threads per process in Y
(PID.TID 0000.0001) > &EEPARMS
(PID.TID 0000.0001) > nTx=1,nTy=1
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) ># Note: Some systems use & as the
(PID.TID 0000.0001) ># namelist terminator. Other systems
(PID.TID 0000.0001) ># use a / character (as shown here).
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Computational Grid Specification ( see files "SIZE.h" )
(PID.TID 0000.0001) //                                  ( and "eedata"       )
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001)      nPx =    1 ; /* No. processes in X */
(PID.TID 0000.0001)      nPy =    1 ; /* No. processes in Y */
(PID.TID 0000.0001)      nSx =    1 ; /* No. tiles in X per process */
(PID.TID 0000.0001)      nSy =    1 ; /* No. tiles in Y per process */
(PID.TID 0000.0001)      sNx =   31 ; /* Tile size in X */
(PID.TID 0000.0001)      sNy =   31 ; /* Tile size in Y */
(PID.TID 0000.0001)      OLx =    3 ; /* Tile overlap distance in X */
(PID.TID 0000.0001)      OLy =    3 ; /* Tile overlap distance in Y */
(PID.TID 0000.0001)      nTx =    1 ; /* No. threads in X per process */
(PID.TID 0000.0001)      nTy =    1 ; /* No. threads in Y per process */
(PID.TID 0000.0001)       Nr =    1 ; /* No. levels in the vertical   */
(PID.TID 0000.0001)       nX =   31 ; /* Total domain size in X ( = nPx*nSx*sNx ) */
(PID.TID 0000.0001)       nY =   31 ; /* Total domain size in Y ( = nPy*nSy*sNy ) */
(PID.TID 0000.0001)   nTiles =    1 ; /* Total no. tiles per process ( = nSx*nSy ) */
(PID.TID 0000.0001)   nProcs =    1 ; /* Total no. processes ( = nPx*nPy ) */
(PID.TID 0000.0001) nThreads =    1 ; /* Total no. threads per process ( = nTx*nTy ) */
(PID.TID 0000.0001) usingMPI =    F ; /* Flag used to control whether MPI is in use */
(PID.TID 0000.0001)                   /*  note: To execute a program with MPI calls */
(PID.TID 0000.0001)                   /*  it must be launched appropriately e.g     */
(PID.TID 0000.0001)                   /*  "mpirun -np 64 ......"                    */
(PID.TID 0000.0001) useCoupler=   F ; /* Flag used to control communications with */
(PID.TID 0000.0001)                   /*  other model components, through a coupler */
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Mapping of tiles to threads
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // -o- Thread   1, tiles (   1:   1,   1:   1)
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Tile <-> Tile connectvity table
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Tile number: 000001 (process no. = 000001)
(PID.TID 0000.0001) //        WEST: Tile = 000001, Process = 000001, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) //        EAST: Tile = 000001, Process = 000001, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) //       SOUTH: Tile = 000001, Process = 000001, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) //       NORTH: Tile = 000001, Process = 000001, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model parameter file "data"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># ====================
(PID.TID 0000.0001) ># | Model parameters |
(PID.TID 0000.0001) ># ====================
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) ># Continuous equation parameters
(PID.TID 0000.0001) > &PARM01
(PID.TID 0000.0001) > tRef=20.,
(PID.TID 0000.0001) > sRef=10.,
(PID.TID 0000.0001) > viscAr=1.E-2,
(PID.TID 0000.0001) > viscAh=5.E3,
(PID.TID 0000.0001) > diffKhT=5.E3,
(PID.TID 0000.0001) > diffKrT=1.E-2,
(PID.TID 0000.0001) ># diffKhS=0.E3,
(PID.TID 0000.0001) ># diffKrS=1.E-5,
(PID.TID 0000.0001) > rhonil=1035.,
(PID.TID 0000.0001) > gravity=9.81,
(PID.TID 0000.0001) > eosType='LINEAR',
(PID.TID 0000.0001) ># ivdc_kappa=50.,
(PID.TID 0000.0001) ># implicitViscosity=.TRUE.,
(PID.TID 0000.0001) ># implicitDiffusion=.TRUE.,
(PID.TID 0000.0001) ># useOldFreezing=.TRUE.,
(PID.TID 0000.0001) > useCDscheme=.FALSE.,
(PID.TID 0000.0001) ># useNHMTerms=.TRUE.,
(PID.TID 0000.0001) ># turn on looped cells
(PID.TID 0000.0001) ># hFacMin=.2,
(PID.TID 0000.0001) ># hFacMindr=50.,
(PID.TID 0000.0001) ># set precision of data files
(PID.TID 0000.0001) ># readBinaryPrec=32,
(PID.TID 0000.0001) > globalFiles=.TRUE.,
(PID.TID 0000.0001) > useSingleCpuIO=.TRUE.
(PID.TID 0000.0001) > beta=1.E-11,
(PID.TID 0000.0001) ># f0=1.e-4,
(PID.TID 0000.0001) > tAlpha=2.E-4,
(PID.TID 0000.0001) > sBeta =0.E-4,
(PID.TID 0000.0001) ># gBaro=9.81,
(PID.TID 0000.0001) > rigidLid=.FALSE.,
(PID.TID 0000.0001) > implicitFreeSurface=.TRUE.,
(PID.TID 0000.0001) ># tempAdvScheme       = 2
(PID.TID 0000.0001) ># saltAdvScheme       = 2
(PID.TID 0000.0001) > writeBinaryPrec=64,
(PID.TID 0000.0001) > multiDimAdvection   = .TRUE.
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Elliptic solver parameters
(PID.TID 0000.0001) > &PARM02
(PID.TID 0000.0001) > cg2dMaxIters=1000,
(PID.TID 0000.0001) > cg2dTargetResidual=1.E-7,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Time stepping parameters
(PID.TID 0000.0001) > &PARM03
(PID.TID 0000.0001) >#startTime = 0.,
(PID.TID 0000.0001) > nIter0  = 200000,
(PID.TID 0000.0001) > nTimeSteps = 1,
(PID.TID 0000.0001) > deltaTmom = 20000.0,
(PID.TID 0000.0001) ># tauCD = 172800.,
(PID.TID 0000.0001) > deltaTtracer = 20000.0,
(PID.TID 0000.0001) > deltaTClock = 20000.0,
(PID.TID 0000.0001) > abEps = 0.1,
(PID.TID 0000.0001) >#cAdjFreq = -1,
(PID.TID 0000.0001) > pChkptFreq= 500000000.0,
(PID.TID 0000.0001) > dumpFreq=   200000000.0,
(PID.TID 0000.0001) > taveFreq=   0.,
(PID.TID 0000.0001) ># taveDumpFreq=155520000.,
(PID.TID 0000.0001) > monitorFreq=0.,
(PID.TID 0000.0001) ># tauThetaClimRelax = 864000.0,
(PID.TID 0000.0001) ># tauSaltClimRelax = 0.0,
(PID.TID 0000.0001) ># periodicExternalForcing=.FALSE.,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Gridding parameters
(PID.TID 0000.0001) > &PARM04
(PID.TID 0000.0001) > usingCartesianGrid=.TRUE.,
(PID.TID 0000.0001) > usingSphericalPolarGrid=.FALSE.,
(PID.TID 0000.0001) > delX=31*50E3,
(PID.TID 0000.0001) > delY=31*50E3,
(PID.TID 0000.0001) > delR=5000.,
(PID.TID 0000.0001) ># phiMin=0.,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Input datasets
(PID.TID 0000.0001) > &PARM05
(PID.TID 0000.0001) > bathyFile='topog.box',
(PID.TID 0000.0001) > hydrogThetaFile=,
(PID.TID 0000.0001) > hydrogSaltFile=,
(PID.TID 0000.0001) > zonalWindFile='windx.cos_y',
(PID.TID 0000.0001) > meridWindFile=,
(PID.TID 0000.0001) > thetaClimFile=,
(PID.TID 0000.0001) > saltClimFile=,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001) S/R INI_PARMS ; starts to read PARM01
(PID.TID 0000.0001) S/R INI_PARMS ; read PARM01 : OK
(PID.TID 0000.0001) S/R INI_PARMS ; starts to read PARM02
(PID.TID 0000.0001) S/R INI_PARMS ; read PARM02 : OK
(PID.TID 0000.0001) S/R INI_PARMS ; starts to read PARM03
(PID.TID 0000.0001) S/R INI_PARMS ; read PARM03 : OK
(PID.TID 0000.0001) S/R INI_PARMS ; starts to read PARM04
(PID.TID 0000.0001) S/R INI_PARMS ; read PARM04 : OK
(PID.TID 0000.0001) S/R INI_PARMS ; starts to read PARM05
(PID.TID 0000.0001) S/R INI_PARMS ; read PARM05 : OK
(PID.TID 0000.0001)  PACKAGES_BOOT: opening data.pkg
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.pkg
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.pkg"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># Packages
(PID.TID 0000.0001) > &PACKAGES
(PID.TID 0000.0001) > usePTRACERS=.TRUE.
(PID.TID 0000.0001) > useMATRIX=.TRUE.
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  PACKAGES_BOOT: finished reading data.pkg
(PID.TID 0000.0001)  PTRACERS_READPARMS: opening data.ptracers
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.ptracers
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.ptracers"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) > &PTRACERS_PARM01
(PID.TID 0000.0001) > PTRACERS_numInUse=1,
(PID.TID 0000.0001) ># tracer 1
(PID.TID 0000.0001) > PTRACERS_advScheme(1)=30,
(PID.TID 0000.0001) > PTRACERS_diffKh(1)=5.E3,
(PID.TID 0000.0001) > PTRACERS_diffKr(1)=5.E-5,
(PID.TID 0000.0001) > PTRACERS_initialFile(1)='trinit1',
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  PTRACERS_READPARMS: finished reading data.ptracers
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) // PTRACERS parameters
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) PTRACERS_numInUse = /* number of tracers */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) PTRACERS_dumpFreq = /* Frequency^-1 for snapshot output (s) */
(PID.TID 0000.0001)                 2.000000000000000E+08
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) PTRACERS_taveFreq = /* Frequency^-1 for time-Aver. output (s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) PTRACERS_useRecords = /* all tracers in 1 file */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) PTRACERS_write_mdsio = /* write mdsio files */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) PTRACERS_write_mnc = /* write mnc files */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  -----------------------------------
(PID.TID 0000.0001)  tracer number :    1
(PID.TID 0000.0001) PTRACERS_advScheme = /* Advection Scheme */
(PID.TID 0000.0001)                      30
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) PTRACERS_ImplVertAdv = /* implicit vert. advection flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) PTRACERS_diffKh = /* Laplacian Diffusivity */
(PID.TID 0000.0001)                 5.000000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) PTRACERS_diffK4 = /* Biharmonic Diffusivity */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) PTRACERS_diffKrNr = /* Vertical Diffusivity */
(PID.TID 0000.0001)                 5.000000000000000E-05       /* K =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) PTRACERS_useGMRedi = /* apply GM-Redi */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) PTRACERS_useKPP = /* apply KPP scheme */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  -----------------------------------
(PID.TID 0000.0001)  MATRIX_READPARMS: opening data.matrix
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.matrix
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.matrix"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) > &MATRIX_PARM01
(PID.TID 0000.0001) > expMatrixWriteTime=20000.0,
(PID.TID 0000.0001) > impMatrixWriteTime=20000.0
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  MATRIX_READPARMS: finished reading data.matrix
(PID.TID 0000.0001) %MON XC_max                       =   1.5250000000000E+06
(PID.TID 0000.0001) %MON XC_min                       =   2.5000000000000E+04
(PID.TID 0000.0001) %MON XC_mean                      =   7.7500000000000E+05
(PID.TID 0000.0001) %MON XC_sd                        =   4.4721359549996E+05
(PID.TID 0000.0001) %MON XG_max                       =   1.5000000000000E+06
(PID.TID 0000.0001) %MON XG_min                       =   5.0000000000000E+04
(PID.TID 0000.0001) %MON XG_mean                      =   7.7500000000000E+05
(PID.TID 0000.0001) %MON XG_sd                        =   4.3277207241996E+05
(PID.TID 0000.0001) %MON DXC_max                      =   5.0000000000000E+04
(PID.TID 0000.0001) %MON DXC_min                      =   5.0000000000000E+04
(PID.TID 0000.0001) %MON DXC_mean                     =   5.0000000000000E+04
(PID.TID 0000.0001) %MON DXC_sd                       =   7.2759576141834E-12
(PID.TID 0000.0001) %MON DXF_max                      =   5.0000000000000E+04
(PID.TID 0000.0001) %MON DXF_min                      =   5.0000000000000E+04
(PID.TID 0000.0001) %MON DXF_mean                     =   5.0000000000000E+04
(PID.TID 0000.0001) %MON DXF_sd                       =   7.2759576141834E-12
(PID.TID 0000.0001) %MON DXG_max                      =   5.0000000000000E+04
(PID.TID 0000.0001) %MON DXG_min                      =   5.0000000000000E+04
(PID.TID 0000.0001) %MON DXG_mean                     =   5.0000000000000E+04
(PID.TID 0000.0001) %MON DXG_sd                       =   7.2759576141834E-12
(PID.TID 0000.0001) %MON DXV_max                      =   5.0000000000000E+04
(PID.TID 0000.0001) %MON DXV_min                      =   5.0000000000000E+04
(PID.TID 0000.0001) %MON DXV_mean                     =   5.0000000000000E+04
(PID.TID 0000.0001) %MON DXV_sd                       =   7.2759576141834E-12
(PID.TID 0000.0001) %MON YC_max                       =   1.5250000000000E+06
(PID.TID 0000.0001) %MON YC_min                       =   2.5000000000000E+04
(PID.TID 0000.0001) %MON YC_mean                      =   7.7500000000000E+05
(PID.TID 0000.0001) %MON YC_sd                        =   4.4721359549996E+05
(PID.TID 0000.0001) %MON YG_max                       =   1.5000000000000E+06
(PID.TID 0000.0001) %MON YG_min                       =   5.0000000000000E+04
(PID.TID 0000.0001) %MON YG_mean                      =   7.7500000000000E+05
(PID.TID 0000.0001) %MON YG_sd                        =   4.3277207241996E+05
(PID.TID 0000.0001) %MON DYC_max                      =   5.0000000000000E+04
(PID.TID 0000.0001) %MON DYC_min                      =   5.0000000000000E+04
(PID.TID 0000.0001) %MON DYC_mean                     =   5.0000000000000E+04
(PID.TID 0000.0001) %MON DYC_sd                       =   7.2759576141834E-12
(PID.TID 0000.0001) %MON DYF_max                      =   5.0000000000000E+04
(PID.TID 0000.0001) %MON DYF_min                      =   5.0000000000000E+04
(PID.TID 0000.0001) %MON DYF_mean                     =   5.0000000000000E+04
(PID.TID 0000.0001) %MON DYF_sd                       =   7.2759576141834E-12
(PID.TID 0000.0001) %MON DYG_max                      =   5.0000000000000E+04
(PID.TID 0000.0001) %MON DYG_min                      =   5.0000000000000E+04
(PID.TID 0000.0001) %MON DYG_mean                     =   5.0000000000000E+04
(PID.TID 0000.0001) %MON DYG_sd                       =   7.2759576141834E-12
(PID.TID 0000.0001) %MON DYU_max                      =   5.0000000000000E+04
(PID.TID 0000.0001) %MON DYU_min                      =   5.0000000000000E+04
(PID.TID 0000.0001) %MON DYU_mean                     =   5.0000000000000E+04
(PID.TID 0000.0001) %MON DYU_sd                       =   7.2759576141834E-12
(PID.TID 0000.0001) %MON RA_max                       =   2.5000000000000E+09
(PID.TID 0000.0001) %MON RA_min                       =   2.5000000000000E+09
(PID.TID 0000.0001) %MON RA_mean                      =   2.5000000000000E+09
(PID.TID 0000.0001) %MON RA_sd                        =   0.0000000000000E+00
(PID.TID 0000.0001) %MON RAW_max                      =   2.5000000000000E+09
(PID.TID 0000.0001) %MON RAW_min                      =   2.5000000000000E+09
(PID.TID 0000.0001) %MON RAW_mean                     =   2.5000000000000E+09
(PID.TID 0000.0001) %MON RAW_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON RAS_max                      =   2.5000000000000E+09
(PID.TID 0000.0001) %MON RAS_min                      =   2.5000000000000E+09
(PID.TID 0000.0001) %MON RAS_mean                     =   2.5000000000000E+09
(PID.TID 0000.0001) %MON RAS_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON RAZ_max                      =   2.5000000000000E+09
(PID.TID 0000.0001) %MON RAZ_min                      =   2.5000000000000E+09
(PID.TID 0000.0001) %MON RAZ_mean                     =   2.5000000000000E+09
(PID.TID 0000.0001) %MON RAZ_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Field Model R_low (ini_masks_etc) at iteration          1
(PID.TID 0000.0001) // CMIN =         -5.000000000000000E+03
(PID.TID 0000.0001) // CMAX =         -5.000000000000000E+03
(PID.TID 0000.0001) // CINT =          0.000000000000000E+00
(PID.TID 0000.0001) // SYMBOLS (CMIN->CMAX): -abcdefghijklmnopqrstuvwxyz+
(PID.TID 0000.0001) //                  0.0: .
(PID.TID 0000.0001) // RANGE I (Lo:Hi:Step):(  -2:  34:   1)
(PID.TID 0000.0001) // RANGE J (Lo:Hi:Step):(  34:  -2:  -1)
(PID.TID 0000.0001) // RANGE K (Lo:Hi:Step):(   1:   1:   1)
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // END OF FIELD                                          =
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Field Model Ro_surf (ini_masks_etc) at iteration          1
(PID.TID 0000.0001) // CMIN =          1.000000000000000E+32
(PID.TID 0000.0001) // CMAX =         -1.000000000000000E+32
(PID.TID 0000.0001) // CINT =          0.000000000000000E+00
(PID.TID 0000.0001) // SYMBOLS (CMIN->CMAX): -abcdefghijklmnopqrstuvwxyz+
(PID.TID 0000.0001) //                  0.0: .
(PID.TID 0000.0001) // RANGE I (Lo:Hi:Step):(  -2:  34:   1)
(PID.TID 0000.0001) // RANGE J (Lo:Hi:Step):(  34:  -2:  -1)
(PID.TID 0000.0001) // RANGE K (Lo:Hi:Step):(   1:   1:   1)
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // END OF FIELD                                          =
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Field hFacC at iteration          1
(PID.TID 0000.0001) // CMIN =          1.000000000000000E+00
(PID.TID 0000.0001) // CMAX =          1.000000000000000E+00
(PID.TID 0000.0001) // CINT =          0.000000000000000E+00
(PID.TID 0000.0001) // SYMBOLS (CMIN->CMAX): -abcdefghijklmnopqrstuvwxyz+
(PID.TID 0000.0001) //                  0.0: .
(PID.TID 0000.0001) // RANGE I (Lo:Hi:Step):(  -2:  34:   1)
(PID.TID 0000.0001) // RANGE J (Lo:Hi:Step):(  34:  -2:  -1)
(PID.TID 0000.0001) // RANGE K (Lo:Hi:Step):(   1:   1:   1)
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // END OF FIELD                                          =
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Field hFacW at iteration          1
(PID.TID 0000.0001) // CMIN =          1.000000000000000E+00
(PID.TID 0000.0001) // CMAX =          1.000000000000000E+00
(PID.TID 0000.0001) // CINT =          0.000000000000000E+00
(PID.TID 0000.0001) // SYMBOLS (CMIN->CMAX): -abcdefghijklmnopqrstuvwxyz+
(PID.TID 0000.0001) //                  0.0: .
(PID.TID 0000.0001) // RANGE I (Lo:Hi:Step):(  -2:  34:   1)
(PID.TID 0000.0001) // RANGE J (Lo:Hi:Step):(  34:  -2:  -1)
(PID.TID 0000.0001) // RANGE K (Lo:Hi:Step):(   1:   1:   1)
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // END OF FIELD                                          =
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Field hFacS at iteration          1
(PID.TID 0000.0001) // CMIN =          1.000000000000000E+00
(PID.TID 0000.0001) // CMAX =          1.000000000000000E+00
(PID.TID 0000.0001) // CINT =          0.000000000000000E+00
(PID.TID 0000.0001) // SYMBOLS (CMIN->CMAX): -abcdefghijklmnopqrstuvwxyz+
(PID.TID 0000.0001) //                  0.0: .
(PID.TID 0000.0001) // RANGE I (Lo:Hi:Step):(  -2:  34:   1)
(PID.TID 0000.0001) // RANGE J (Lo:Hi:Step):(  34:  -2:  -1)
(PID.TID 0000.0001) // RANGE K (Lo:Hi:Step):(   1:   1:   1)
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // END OF FIELD                                          =
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) // GAD parameters :
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) tempAdvScheme =   /* Temp. Horiz.Advection scheme selector */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempVertAdvScheme =   /* Temp. Vert. Advection scheme selector */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempMultiDimAdvec =   /* use Muti-Dim Advec method for Temp */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempAdamsBashforth =   /* use Adams-Bashforth time-stepping for Temp */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltAdvScheme =   /* Salt. Horiz.advection scheme selector */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltVertAdvScheme =   /* Salt. Vert. Advection scheme selector */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltMultiDimAdvec =   /* use Muti-Dim Advec method for Salt */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltAdamsBashforth =   /* use Adams-Bashforth time-stepping for Salt */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) %MON fCori_max                    =   1.1525000000000E-04
(PID.TID 0000.0001) %MON fCori_min                    =   1.0025000000000E-04
(PID.TID 0000.0001) %MON fCori_mean                   =   1.0775000000000E-04
(PID.TID 0000.0001) %MON fCori_sd                     =   4.4721359549996E-06
(PID.TID 0000.0001) %MON fCoriG_max                   =   1.1500000000000E-04
(PID.TID 0000.0001) %MON fCoriG_min                   =   1.0000000000000E-04
(PID.TID 0000.0001) %MON fCoriG_mean                  =   1.0750000000000E-04
(PID.TID 0000.0001) %MON fCoriG_sd                    =   4.4721359549996E-06
(PID.TID 0000.0001) %MON fCoriCos_max                 =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriCos_min                 =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriCos_mean                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriCos_sd                  =   0.0000000000000E+00
(PID.TID 0000.0001) // CG2D normalisation factor =           .2000000000000000095843472E-03
(PID.TID 0000.0001) 
(PID.TID 0000.0001) CONFIG_CHECK: OK
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model configuration
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // "Physical" paramters ( PARM01 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) buoyancyRelation = OCEANIC
(PID.TID 0000.0001) fluidIsAir  =  /* fluid major constituent is Air */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) fluidIsWater=  /* fuild major constituent is Water */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingPCoords =  /* use p (or p*) vertical coordinate */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingZCoords =  /* use z (or z*) vertical coordinate */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tRef =   /* Reference temperature profile ( oC or oK ) */
(PID.TID 0000.0001)                 2.000000000000000E+01       /* K =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) sRef =   /* Reference salinity profile ( ppt ) */
(PID.TID 0000.0001)                 1.000000000000000E+01       /* K =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscAh =   /* Lateral eddy viscosity ( m^2/s ) */
(PID.TID 0000.0001)                 5.000000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscAhMax =   /* Maximum lateral eddy viscosity ( m^2/s ) */
(PID.TID 0000.0001)                 1.000000000000000E+21
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscAhGrid =   /* Grid dependent lateral eddy viscosity ( non-dim. ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useFullLeith =   /* Use Full Form of Leith Viscosity on/off flag*/
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscC2leith = /* Leith harmonic viscosity factor (on grad(vort),non-dim.) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscC2leithD = /* Leith harmonic viscosity factor (on grad(div),non-dim.) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscC2smag =   /* Smagorinsky harmonic viscosity factor (non-dim.) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscA4 =   /* Lateral biharmonic viscosity ( m^4/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscA4Max =   /* Maximum biharmonic viscosity ( m^2/s ) */
(PID.TID 0000.0001)                 1.000000000000000E+21
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscA4Grid =   /* Grid dependent biharmonic viscosity ( non-dim. ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscC4leith = /* Leith biharm viscosity factor (on grad(vort), non-dim.) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscC4leithD = /* Leith biharm viscosity factor (on grad(div), non-dim.) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) no_slip_sides =  /* Viscous BCs: No-slip sides */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscAr =   /* Vertical eddy viscosity ( units of r^2/s ) */
(PID.TID 0000.0001)                 1.000000000000000E-02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) no_slip_bottom =  /* Viscous BCs: No-slip bottom */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKhT =   /* Laplacian diffusion of heat laterally ( m^2/s ) */
(PID.TID 0000.0001)                 5.000000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffK4T =   /* Bihaarmonic diffusion of heat laterally ( m^4/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKhS =   /* Laplacian diffusion of salt laterally ( m^2/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffK4S =   /* Bihaarmonic diffusion of salt laterally ( m^4/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrNrT = /* vertical profile of vertical diffusion of Temp ( m^2/s )*/
(PID.TID 0000.0001)                 1.000000000000000E-02       /* K =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrNrS = /* vertical profile of vertical diffusion of Salt ( m^2/s )*/
(PID.TID 0000.0001)                 0.000000000000000E+00       /* K =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79surf =   /* Surface diffusion for Bryan and Lewis 1979 ( m^2/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79deep =   /* Deep diffusion for Bryan and Lewis 1979 ( m^2/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79scl =   /* Depth scale for Bryan and Lewis 1979 ( m ) */
(PID.TID 0000.0001)                 2.000000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79Ho =   /* Turning depth for Bryan and Lewis 1979 ( m ) */
(PID.TID 0000.0001)                -2.000000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  Equation of State : eosType = LINEAR
(PID.TID 0000.0001) tAlpha =   /* Linear EOS thermal expansion coefficient ( 1/degree ) */
(PID.TID 0000.0001)                 2.000000000000000E-04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) sBeta =   /* Linear EOS haline contraction coefficient ( 1/ppt ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhonil =   /* Reference density ( kg/m^3 ) */
(PID.TID 0000.0001)                 1.035000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoConst =   /* Reference density ( kg/m^3 ) */
(PID.TID 0000.0001)                 1.035000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoConstFresh =   /* Reference density ( kg/m^3 ) */
(PID.TID 0000.0001)                 1.035000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gravity =   /* Gravitational acceleration ( m/s^2 ) */
(PID.TID 0000.0001)                 9.810000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gBaro =   /* Barotropic gravity ( m/s^2 ) */
(PID.TID 0000.0001)                 9.810000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rotationPeriod =   /* Rotation Period ( s ) */
(PID.TID 0000.0001)                 8.640000000000000E+04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) omega =   /* Angular velocity ( rad/s ) */
(PID.TID 0000.0001)                 7.272205216643040E-05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) f0 =   /* Reference coriolis parameter ( 1/s ) */
(PID.TID 0000.0001)                 1.000000000000000E-04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) beta =   /* Beta ( 1/(m.s) ) */
(PID.TID 0000.0001)                 9.999999999999999E-12
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) freeSurfFac =   /* Implicit free surface factor */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitFreeSurface =   /* Implicit free surface on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rigidLid =   /* Rigid lid on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicSurfPress =   /* Surface Pressure implicit factor (0-1)*/
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicDiv2Dflow =   /* Barot. Flow Div. implicit factor (0-1)*/
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) exactConserv =   /* Exact Volume Conservation on/off flag*/
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) uniformLin_PhiSurf =   /* use uniform Bo_surf on/off flag*/
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nonlinFreeSurf =   /* Non-linear Free Surf. options (-1,0,1,2,3)*/
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)      -1,0= Off ; 1,2,3= On, 2=+rescale gU,gV, 3=+update cg2d solv.
(PID.TID 0000.0001) hFacInf =   /* lower threshold for hFac (nonlinFreeSurf only)*/
(PID.TID 0000.0001)                 2.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacSup =   /* upper threshold for hFac (nonlinFreeSurf only)*/
(PID.TID 0000.0001)                 2.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) select_rStar =   /* r* Coordinate options (not yet implemented)*/
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useRealFreshWaterFlux =   /* Real Fresh Water Flux on/off flag*/
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) convertFW2Salt = /* convert F.W. Flux to Salt Flux (-1=use local S)(ppt)*/
(PID.TID 0000.0001)                 3.500000000000000E+01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nonHydrostatic =  /* Non-Hydrostatic on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momStepping =  /* Momentum equation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momAdvection =  /* Momentum advection on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momViscosity =  /* Momentum viscosity on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momImplVertAdv =/* Momentum implicit vert. advection on/off*/
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitViscosity = /* Implicit viscosity on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useCoriolis =  /* Coriolis on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useCDscheme =  /* CD scheme on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useJamartWetPoints= /* Coriolis WetPoints method flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useJamartMomAdv= /* V.I. Non-linear terms Jamart flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SadournyCoriolis= /* Sadourny Coriolis discr. flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) upwindVorticity= /* Upwind bias vorticity flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useAbsVorticity= /* Work with f+zeta in Coriolis */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) highOrderVorticity= /* High order interp. of vort. flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momForcing =  /* Momentum forcing on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momPressureForcing =  /* Momentum pressure term on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) staggerTimeStep =   /* Stagger time stepping on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) multiDimAdvection =   /* enable/disable Multi-Dim Advection */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useMultiDimAdvec =   /* Multi-Dim Advection is/is-not used */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitDiffusion =/* Implicit Diffusion on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempStepping =  /* Temperature equation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempAdvection=  /* Temperature advection on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempImplVertAdv =/* Temp. implicit vert. advection on/off */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempForcing  =  /* Temperature forcing on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltStepping =  /* Salinity equation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltAdvection=  /* Salinity advection on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltImplVertAdv =/* Sali. implicit vert. advection on/off */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltForcing  =  /* Salinity forcing on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // Elliptic solver(s) paramters ( PARM02 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) cg2dMaxIters =   /* Upper limit on 2d con. grad iterations  */
(PID.TID 0000.0001)                    1000
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dChkResFreq =   /* 2d con. grad convergence test frequency */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dTargetResidual =   /* 2d con. grad target residual  */
(PID.TID 0000.0001)                 1.000000000000000E-07
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dTargetResWunit =   /* CG2d target residual [W units] */
(PID.TID 0000.0001)                -1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dPreCondFreq =   /* Freq. for updating cg2d preconditioner */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // Time stepping paramters ( PARM03 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) nIter0 =   /* Run starting timestep number  */
(PID.TID 0000.0001)                  200000
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nTimeSteps =   /* Number of timesteps */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deltatTmom =   /* Momentum equation timestep ( s ) */
(PID.TID 0000.0001)                 2.000000000000000E+04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deltaTfreesurf =   /* FreeSurface equation timestep ( s ) */
(PID.TID 0000.0001)                 2.000000000000000E+04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dTtracerLev =   /* Tracer equation timestep ( s ) */
(PID.TID 0000.0001)                 2.000000000000000E+04       /* K =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deltatTClock  =   /* Model clock timestep ( s ) */
(PID.TID 0000.0001)                 2.000000000000000E+04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cAdjFreq =   /* Convective adjustment interval ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) forcing_In_AB =   /* put T,S Forcing in Adams-Bash. stepping */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) abEps =   /* Adams-Bashforth-2 stabilizing weight */
(PID.TID 0000.0001)                 1.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) baseTime =   /* Model base time ( s ). */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) startTime =   /* Run start time ( s ). */
(PID.TID 0000.0001)                 4.000000000000000E+09
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) endTime =   /* Integration ending time ( s ). */
(PID.TID 0000.0001)                 4.000020000000000E+09
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pChkPtFreq =   /* Permanent restart/checkpoint file interval ( s ). */
(PID.TID 0000.0001)                 5.000000000000000E+08
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) chkPtFreq =   /* Rolling restart/checkpoint file interval ( s ). */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pickup_write_mdsio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pickup_read_mdsio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pickup_write_immed =   /* Model IO flag. */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dumpFreq =   /* Model state write out interval ( s ). */
(PID.TID 0000.0001)                 2.000000000000000E+08
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) snapshot_mdsio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) monitorFreq =   /* Monitor output interval ( s ). */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) monitor_stdio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) externForcingPeriod =   /* forcing period (s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) externForcingCycle =   /* period of the cyle (s). */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tauThetaClimRelax =   /* relaxation time scale (s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tauSaltClimRelax =   /* relaxation time scale (s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) latBandClimRelax =   /* max. Lat. where relaxation */
(PID.TID 0000.0001)                 4.805000000000000E+07
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // Gridding paramters ( PARM04 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) usingCartesianGrid =   /* Cartesian coordinates flag ( True / False ) */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingSphericalPolarGrid =   /* Spherical coordinates flag ( True / False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingCylindricalGrid =   /* Spherical coordinates flag ( True / False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) groundAtK1 =   /* Lower Boundary (ground) at the surface(k=1) ( T / F ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) Ro_SeaLevel =   /* r(1) ( units of r ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rkFac =   /* minus Vertical index orientation  */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) horiVertRatio =   /* Ratio on units : Horiz - Vertical */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) drC =   /* C spacing ( units of r ) */
(PID.TID 0000.0001)                 2.500000000000000E+03       /* K =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) drF =   /* W spacing ( units of r ) */
(PID.TID 0000.0001)                 5.000000000000000E+03       /* K =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) delX =   /* U spacing ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    31 @  5.000000000000000E+04              /* I =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) delY =   /* V spacing ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    31 @  5.000000000000000E+04              /* J =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) phiMin =    /* South edge (ignored - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) thetaMin =    /* West edge ( ignored - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rSphere =    /* Radius ( ignored - cartesian, m - spherical ) */
(PID.TID 0000.0001)                 6.370000000000000E+06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) xcoord =   /* P-point X coord ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)                 2.500000000000000E+04,      /* I =  1 */
(PID.TID 0000.0001)                 7.500000000000000E+04,      /* I =  2 */
(PID.TID 0000.0001)                 1.250000000000000E+05,      /* I =  3 */
(PID.TID 0000.0001)                 1.750000000000000E+05,      /* I =  4 */
(PID.TID 0000.0001)                 2.250000000000000E+05,      /* I =  5 */
(PID.TID 0000.0001)                 2.750000000000000E+05,      /* I =  6 */
(PID.TID 0000.0001)                 3.250000000000000E+05,      /* I =  7 */
(PID.TID 0000.0001)                 3.750000000000000E+05,      /* I =  8 */
(PID.TID 0000.0001)                 4.250000000000000E+05,      /* I =  9 */
(PID.TID 0000.0001)                 4.750000000000000E+05,      /* I = 10 */
(PID.TID 0000.0001)                 5.250000000000000E+05,      /* I = 11 */
(PID.TID 0000.0001)                 5.750000000000000E+05,      /* I = 12 */
(PID.TID 0000.0001)                 6.250000000000000E+05,      /* I = 13 */
(PID.TID 0000.0001)                 6.750000000000000E+05,      /* I = 14 */
(PID.TID 0000.0001)                 7.250000000000000E+05,      /* I = 15 */
(PID.TID 0000.0001)                 7.750000000000000E+05,      /* I = 16 */
(PID.TID 0000.0001)                 8.250000000000000E+05,      /* I = 17 */
(PID.TID 0000.0001)                 8.750000000000000E+05,      /* I = 18 */
(PID.TID 0000.0001)                 9.250000000000000E+05,      /* I = 19 */
(PID.TID 0000.0001)                 9.750000000000000E+05,      /* I = 20 */
(PID.TID 0000.0001)                 1.025000000000000E+06,      /* I = 21 */
(PID.TID 0000.0001)                 1.075000000000000E+06,      /* I = 22 */
(PID.TID 0000.0001)                 1.125000000000000E+06,      /* I = 23 */
(PID.TID 0000.0001)                 1.175000000000000E+06,      /* I = 24 */
(PID.TID 0000.0001)                 1.225000000000000E+06,      /* I = 25 */
(PID.TID 0000.0001)                 1.275000000000000E+06,      /* I = 26 */
(PID.TID 0000.0001)                 1.325000000000000E+06,      /* I = 27 */
(PID.TID 0000.0001)                 1.375000000000000E+06,      /* I = 28 */
(PID.TID 0000.0001)                 1.425000000000000E+06,      /* I = 29 */
(PID.TID 0000.0001)                 1.475000000000000E+06,      /* I = 30 */
(PID.TID 0000.0001)                 1.525000000000000E+06       /* I = 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) ycoord =   /* P-point Y coord ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)                 2.500000000000000E+04,      /* J =  1 */
(PID.TID 0000.0001)                 7.500000000000000E+04,      /* J =  2 */
(PID.TID 0000.0001)                 1.250000000000000E+05,      /* J =  3 */
(PID.TID 0000.0001)                 1.750000000000000E+05,      /* J =  4 */
(PID.TID 0000.0001)                 2.250000000000000E+05,      /* J =  5 */
(PID.TID 0000.0001)                 2.750000000000000E+05,      /* J =  6 */
(PID.TID 0000.0001)                 3.250000000000000E+05,      /* J =  7 */
(PID.TID 0000.0001)                 3.750000000000000E+05,      /* J =  8 */
(PID.TID 0000.0001)                 4.250000000000000E+05,      /* J =  9 */
(PID.TID 0000.0001)                 4.750000000000000E+05,      /* J = 10 */
(PID.TID 0000.0001)                 5.250000000000000E+05,      /* J = 11 */
(PID.TID 0000.0001)                 5.750000000000000E+05,      /* J = 12 */
(PID.TID 0000.0001)                 6.250000000000000E+05,      /* J = 13 */
(PID.TID 0000.0001)                 6.750000000000000E+05,      /* J = 14 */
(PID.TID 0000.0001)                 7.250000000000000E+05,      /* J = 15 */
(PID.TID 0000.0001)                 7.750000000000000E+05,      /* J = 16 */
(PID.TID 0000.0001)                 8.250000000000000E+05,      /* J = 17 */
(PID.TID 0000.0001)                 8.750000000000000E+05,      /* J = 18 */
(PID.TID 0000.0001)                 9.250000000000000E+05,      /* J = 19 */
(PID.TID 0000.0001)                 9.750000000000000E+05,      /* J = 20 */
(PID.TID 0000.0001)                 1.025000000000000E+06,      /* J = 21 */
(PID.TID 0000.0001)                 1.075000000000000E+06,      /* J = 22 */
(PID.TID 0000.0001)                 1.125000000000000E+06,      /* J = 23 */
(PID.TID 0000.0001)                 1.175000000000000E+06,      /* J = 24 */
(PID.TID 0000.0001)                 1.225000000000000E+06,      /* J = 25 */
(PID.TID 0000.0001)                 1.275000000000000E+06,      /* J = 26 */
(PID.TID 0000.0001)                 1.325000000000000E+06,      /* J = 27 */
(PID.TID 0000.0001)                 1.375000000000000E+06,      /* J = 28 */
(PID.TID 0000.0001)                 1.425000000000000E+06,      /* J = 29 */
(PID.TID 0000.0001)                 1.475000000000000E+06,      /* J = 30 */
(PID.TID 0000.0001)                 1.525000000000000E+06       /* J = 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rcoord =   /* P-point R coordinate (  units of r ) */
(PID.TID 0000.0001)                -2.500000000000000E+03       /* K =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rF =   /* W-Interf. R coordinate (  units of r ) */
(PID.TID 0000.0001)                 0.000000000000000E+00,      /* K =  1 */
(PID.TID 0000.0001)                -5.000000000000000E+03       /* K =  2 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxF =  /* dxF(:,1,:,1) ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    31 @  5.000000000000000E+04              /* I =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxF =  /* dxF(1,:,1,:) ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    31 @  5.000000000000000E+04              /* J =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyF =  /* dyF(:,1,:,1) ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    31 @  5.000000000000000E+04              /* I =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyF =  /* dyF(1,:,1,:) ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    31 @  5.000000000000000E+04              /* J =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxG =  /* dxG(:,1,:,1) ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    31 @  5.000000000000000E+04              /* I =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxG =  /* dxG(1,:,1,:) ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    31 @  5.000000000000000E+04              /* J =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyG =  /* dyG(:,1,:,1) ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    31 @  5.000000000000000E+04              /* I =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyG =  /* dyG(1,:,1,:) ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    31 @  5.000000000000000E+04              /* J =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxC =  /* dxC(:,1,:,1) ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    31 @  5.000000000000000E+04              /* I =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxC =  /* dxC(1,:,1,:) ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    31 @  5.000000000000000E+04              /* J =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyC =  /* dyC(:,1,:,1) ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    31 @  5.000000000000000E+04              /* I =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyC =  /* dyC(1,:,1,:) ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    31 @  5.000000000000000E+04              /* J =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxV =  /* dxV(:,1,:,1) ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    31 @  5.000000000000000E+04              /* I =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxV =  /* dxV(1,:,1,:) ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    31 @  5.000000000000000E+04              /* J =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyU =  /* dyU(:,1,:,1) ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    31 @  5.000000000000000E+04              /* I =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyU =  /* dyU(1,:,1,:) ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    31 @  5.000000000000000E+04              /* J =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rA =  /* rA(:,1,:,1) ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    31 @  2.500000000000000E+09              /* I =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rA =  /* rA(1,:,1,:) ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    31 @  2.500000000000000E+09              /* J =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAw =  /* rAw(:,1,:,1) ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    31 @  2.500000000000000E+09              /* I =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAw =  /* rAw(1,:,1,:) ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    31 @  2.500000000000000E+09              /* J =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAs =  /* rAs(:,1,:,1) ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    31 @  2.500000000000000E+09              /* I =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAs =  /* rAs(1,:,1,:) ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    31 @  2.500000000000000E+09              /* J =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model current state
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
 cg2d: Sum(rhs),rhsMax =   1.29178857637725E-05  7.14831396830014E-01
 Writing explicit matrix : 1 1 1
 Writing implicit matrix : 1 1 1
(PID.TID 0000.0001) %CHECKPOINT    200001 ckptA
(PID.TID 0000.0001)   Seconds in section "ALL                    [THE_MODEL_MAIN]":
(PID.TID 0000.0001)           User time: 0.299999993294477463E-01
(PID.TID 0000.0001)         System time: 0.699999984353780746E-01
(PID.TID 0000.0001)     Wall clock time: 0.135260105133056641
(PID.TID 0000.0001)          No. starts: 1
(PID.TID 0000.0001)           No. stops: 1
(PID.TID 0000.0001)   Seconds in section "INITIALISE_FIXED       [THE_MODEL_MAIN]":
(PID.TID 0000.0001)           User time: 0.999999977648258209E-02
(PID.TID 0000.0001)         System time: 0.499999988824129105E-01
(PID.TID 0000.0001)     Wall clock time: 0.680887699127197266E-01
(PID.TID 0000.0001)          No. starts: 1
(PID.TID 0000.0001)           No. stops: 1
(PID.TID 0000.0001)   Seconds in section "THE_MAIN_LOOP          [THE_MODEL_MAIN]":
(PID.TID 0000.0001)           User time: 0.999999977648258209E-02
(PID.TID 0000.0001)         System time: 0.199999995529651642E-01
(PID.TID 0000.0001)     Wall clock time: 0.380790233612060547E-01
(PID.TID 0000.0001)          No. starts: 1
(PID.TID 0000.0001)           No. stops: 1
(PID.TID 0000.0001)   Seconds in section "INITIALISE_VARIA    [THE_MAIN_LOOP]":
(PID.TID 0000.0001)           User time: 0.000000000000000000E+00
(PID.TID 0000.0001)         System time: 0.100000016391277313E-01
(PID.TID 0000.0001)     Wall clock time: 0.946712493896484375E-02
(PID.TID 0000.0001)          No. starts: 1
(PID.TID 0000.0001)           No. stops: 1
(PID.TID 0000.0001)   Seconds in section "MONITOR             [THE_MAIN_LOOP]":
(PID.TID 0000.0001)           User time: 0.000000000000000000E+00
(PID.TID 0000.0001)         System time: 0.000000000000000000E+00
(PID.TID 0000.0001)     Wall clock time: 0.169038772583007812E-03
(PID.TID 0000.0001)          No. starts: 1
(PID.TID 0000.0001)           No. stops: 1
(PID.TID 0000.0001)   Seconds in section "DO_THE_MODEL_IO     [THE_MAIN_LOOP]":
(PID.TID 0000.0001)           User time: 0.000000000000000000E+00
(PID.TID 0000.0001)         System time: 0.000000000000000000E+00
(PID.TID 0000.0001)     Wall clock time: 0.297999382019042969E-02
(PID.TID 0000.0001)          No. starts: 1
(PID.TID 0000.0001)           No. stops: 1
(PID.TID 0000.0001)   Seconds in section "MAIN LOOP           [THE_MAIN_LOOP]":
(PID.TID 0000.0001)           User time: 0.999999977648258209E-02
(PID.TID 0000.0001)         System time: 0.999999791383743286E-02
(PID.TID 0000.0001)     Wall clock time: 0.251491069793701172E-01
(PID.TID 0000.0001)          No. starts: 1
(PID.TID 0000.0001)           No. stops: 1
(PID.TID 0000.0001)   Seconds in section "FORWARD_STEP        [THE_MAIN_LOOP]":
(PID.TID 0000.0001)           User time: 0.999999977648258209E-02
(PID.TID 0000.0001)         System time: 0.999999791383743286E-02
(PID.TID 0000.0001)     Wall clock time: 0.249841213226318359E-01
(PID.TID 0000.0001)          No. starts: 1
(PID.TID 0000.0001)           No. stops: 1
(PID.TID 0000.0001)   Seconds in section "EXTERNAL_FIELDS_LOAD[FORWARD_STEP]":
(PID.TID 0000.0001)           User time: 0.000000000000000000E+00
(PID.TID 0000.0001)         System time: 0.000000000000000000E+00
(PID.TID 0000.0001)     Wall clock time: 0.739097595214843750E-04
(PID.TID 0000.0001)          No. starts: 1
(PID.TID 0000.0001)           No. stops: 1
(PID.TID 0000.0001)   Seconds in section "DO_ATMOSPHERIC_PHYS [FORWARD_STEP]":
(PID.TID 0000.0001)           User time: 0.000000000000000000E+00
(PID.TID 0000.0001)         System time: 0.000000000000000000E+00
(PID.TID 0000.0001)     Wall clock time: 0.739097595214843750E-04
(PID.TID 0000.0001)          No. starts: 1
(PID.TID 0000.0001)           No. stops: 1
(PID.TID 0000.0001)   Seconds in section "DO_OCEANIC_PHYS     [FORWARD_STEP]":
(PID.TID 0000.0001)           User time: 0.000000000000000000E+00
(PID.TID 0000.0001)         System time: 0.000000000000000000E+00
(PID.TID 0000.0001)     Wall clock time: 0.699996948242187500E-03
(PID.TID 0000.0001)          No. starts: 1
(PID.TID 0000.0001)           No. stops: 1
(PID.TID 0000.0001)   Seconds in section "THERMODYNAMICS      [FORWARD_STEP]":
(PID.TID 0000.0001)           User time: 0.000000000000000000E+00
(PID.TID 0000.0001)         System time: 0.000000000000000000E+00
(PID.TID 0000.0001)     Wall clock time: 0.823187828063964844E-02
(PID.TID 0000.0001)          No. starts: 1
(PID.TID 0000.0001)           No. stops: 1
(PID.TID 0000.0001)   Seconds in section "DYNAMICS            [FORWARD_STEP]":
(PID.TID 0000.0001)           User time: 0.999999977648258209E-02
(PID.TID 0000.0001)         System time: 0.000000000000000000E+00
(PID.TID 0000.0001)     Wall clock time: 0.526905059814453125E-02
(PID.TID 0000.0001)          No. starts: 1
(PID.TID 0000.0001)           No. stops: 1
(PID.TID 0000.0001)   Seconds in section "SOLVE_FOR_PRESSURE  [FORWARD_STEP]":
(PID.TID 0000.0001)           User time: 0.000000000000000000E+00
(PID.TID 0000.0001)         System time: 0.000000000000000000E+00
(PID.TID 0000.0001)     Wall clock time: 0.229501724243164062E-02
(PID.TID 0000.0001)          No. starts: 1
(PID.TID 0000.0001)           No. stops: 1
(PID.TID 0000.0001)   Seconds in section "UV_CORRECTION_STEP  [FORWARD_STEP]":
(PID.TID 0000.0001)           User time: 0.000000000000000000E+00
(PID.TID 0000.0001)         System time: 0.000000000000000000E+00
(PID.TID 0000.0001)     Wall clock time: 0.553846359252929688E-03
(PID.TID 0000.0001)          No. starts: 1
(PID.TID 0000.0001)           No. stops: 1
(PID.TID 0000.0001)   Seconds in section "TS_CORRECTION_STEP  [FORWARD_STEP]":
(PID.TID 0000.0001)           User time: 0.000000000000000000E+00
(PID.TID 0000.0001)         System time: 0.000000000000000000E+00
(PID.TID 0000.0001)     Wall clock time: 0.268936157226562500E-03
(PID.TID 0000.0001)          No. starts: 1
(PID.TID 0000.0001)           No. stops: 1
(PID.TID 0000.0001)   Seconds in section "BLOCKING_EXCHANGES  [FORWARD_STEP]":
(PID.TID 0000.0001)           User time: 0.000000000000000000E+00
(PID.TID 0000.0001)         System time: 0.000000000000000000E+00
(PID.TID 0000.0001)     Wall clock time: 0.128984451293945312E-03
(PID.TID 0000.0001)          No. starts: 1
(PID.TID 0000.0001)           No. stops: 1
(PID.TID 0000.0001)   Seconds in section "DO_STATEVARS_TAVE   [FORWARD_STEP]":
(PID.TID 0000.0001)           User time: 0.000000000000000000E+00
(PID.TID 0000.0001)         System time: 0.000000000000000000E+00
(PID.TID 0000.0001)     Wall clock time: 0.572204589843750000E-04
(PID.TID 0000.0001)          No. starts: 1
(PID.TID 0000.0001)           No. stops: 1
(PID.TID 0000.0001)   Seconds in section "MONITOR             [FORWARD_STEP]":
(PID.TID 0000.0001)           User time: 0.000000000000000000E+00
(PID.TID 0000.0001)         System time: 0.000000000000000000E+00
(PID.TID 0000.0001)     Wall clock time: 0.901222229003906250E-04
(PID.TID 0000.0001)          No. starts: 1
(PID.TID 0000.0001)           No. stops: 1
(PID.TID 0000.0001)   Seconds in section "DO_THE_MODEL_IO     [FORWARD_STEP]":
(PID.TID 0000.0001)           User time: 0.000000000000000000E+00
(PID.TID 0000.0001)         System time: 0.999999791383743286E-02
(PID.TID 0000.0001)     Wall clock time: 0.629305839538574219E-02
(PID.TID 0000.0001)          No. starts: 1
(PID.TID 0000.0001)           No. stops: 1
(PID.TID 0000.0001)   Seconds in section "WRITE_CHECKPOINT    [FORWARD_STEP]":
(PID.TID 0000.0001)           User time: 0.000000000000000000E+00
(PID.TID 0000.0001)         System time: 0.000000000000000000E+00
(PID.TID 0000.0001)     Wall clock time: 0.607967376708984375E-04
(PID.TID 0000.0001)          No. starts: 1
(PID.TID 0000.0001)           No. stops: 1
(PID.TID 0000.0001)   Seconds in section "WRITE_CHECKPOINT       [THE_MODEL_MAIN]":
(PID.TID 0000.0001)           User time: 0.999999977648258209E-02
(PID.TID 0000.0001)         System time: 0.000000000000000000E+00
(PID.TID 0000.0001)     Wall clock time: 0.287570953369140625E-01
(PID.TID 0000.0001)          No. starts: 1
(PID.TID 0000.0001)           No. stops: 1
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Tile <-> Tile communication statistics
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // o Tile number: 000001
(PID.TID 0000.0001) //         No. X exchanges =              0
(PID.TID 0000.0001) //            Max. X spins =              0
(PID.TID 0000.0001) //            Min. X spins =     1000000000
(PID.TID 0000.0001) //          Total. X spins =              0
(PID.TID 0000.0001) //            Avg. X spins =       0.00E+00
(PID.TID 0000.0001) //         No. Y exchanges =              0
(PID.TID 0000.0001) //            Max. Y spins =              0
(PID.TID 0000.0001) //            Min. Y spins =     1000000000
(PID.TID 0000.0001) //          Total. Y spins =              0
(PID.TID 0000.0001) //            Avg. Y spins =       0.00E+00
(PID.TID 0000.0001) // o Thread number: 000001
(PID.TID 0000.0001) //            No. barriers =            608
(PID.TID 0000.0001) //      Max. barrier spins =              1
(PID.TID 0000.0001) //      Min. barrier spins =              1
(PID.TID 0000.0001) //     Total barrier spins =            608
(PID.TID 0000.0001) //      Avg. barrier spins =       1.00E+00
