#!/bin/bash
#
#PBS -q long
#PBS -N tst_mp2
#PBS -l nodes=3:ppn=2
#PBS -e /home/jmc/test_ACES/output/tst_mp2.stderr
#PBS -o /home/jmc/test_ACES/output/tst_mp2.stdout

# $Header: /home/jahn/src/cvs2git/MITgcm/20170915-2/gcmpack-all-patch/MITgcm/tools/example_scripts/ACESgrid/Attic/aces_test_mp2_mth,v 1.11 2011/09/08 13:39:59 jmc Exp $
# $Name:  $

# ACES-grid PBS-batch script for MPI+Multi-Threaded test using ifort (v9) & mpich2

if test -f /etc/profile.d/modules.sh ; then
    . /etc/profile.d/modules.sh
fi
# Note: added "ulimit -s unlimited" in file "~/.bashrc"
# to pass big test (the 2 fizhi-cs-* test & adjoint tests) with MPI

umask 0022
#- to get case insensitive "ls" (and order of tested experiments)
export LC_ALL="en_US.UTF-8"

TST_DIR="/home/jmc/test_ACES"
HERE=$TST_DIR/output
#cd $HERE

sfx='mp2'
#- to build:
 module add ifc/9.0.021 icc/9.0.021 intel/9.0
 module add mpich2/1.0.3/intel
 module add netcdf/3.6.1/icc
 export MPI_INC_DIR='/usr/local/pkg/mpich2/mpich2-1.0.3/intel/include'
#- to run:
 module add mpiexec
 OPTFILE="../tools/build_options/linux_ia32_ifort"
#OPTFILE="$HERE/linux_ia32_ifort+mpi_aces"
 options="-j 2 -MPI 3 -mth -mf $PBS_NODEFILE -devel"
 export OMP_NUM_THREADS=2
 EXE="mpiexec -pernode -comm pmi -np TR_NPROC ./mitgcmuv"
#export KMP_STACKSIZE=400m  <-- added in file "~/.bashrc"

#- keep a copy of MPI_MFILE:
cp -p $PBS_NODEFILE $HERE"/mf_"$sfx

checkOut=1
#options="$options -nc" ; checkOut=0
#options="$options -q"  ; checkOut=0

gcmDIR="MITgcm_$sfx"
cd $TST_DIR
#- check for disk space:
dsp=`df -P . | tail -1 | awk '{print $5}' | sed 's/%$//'`
if [ $dsp -gt 99 ] ; then
  echo 'Not enough space on this disk => do not run testreport.'
  df .
  exit
fi
if [ $checkOut -eq 1 ] ; then
  if test -d $gcmDIR/CVS ; then
    /bin/rm -rf $gcmDIR/verification/??_aces-${sfx}_????????_?
#   ( cd $gcmDIR/verification ; ../tools/do_tst_2+2 -clean )
    echo "cvs update of dir $gcmDIR :"
    ( cd $gcmDIR ; cvs -q -d :pserver:cvsanon@mitgcm.org:/u/gcmpack update -P -d ) 2>&1
    RETVAL=$?
    if test "x$RETVAL" != x0 ; then
       echo "cvs update on '"`hostname`"' fail (return val=$RETVAL) => exit"
       exit
    fi
  else
    echo "no dir: $gcmDIR/CVS => try a fresh check-out"
    checkOut=2
  fi
fi
if [ $checkOut -eq 2 ] ; then
  if test -e $gcmDIR ; then
     rm -rf $gcmDIR
  fi
  cvs -d :pserver:cvsanon@mitgcm.org:/u/gcmpack co -P -d $gcmDIR MITgcm > /dev/null 2>&1
  /usr/bin/find $gcmDIR -type d | xargs chmod g+rxs
  /usr/bin/find $gcmDIR -type f | xargs chmod g+r
fi

#- change dir to $gcmDIR/verification dir:
if test -e $gcmDIR/verification ; then
  if [ $checkOut -lt 2 ] ; then
    echo " dir $gcmDIR/verification exist" ; fi
  cd $gcmDIR/verification
else
  echo "no dir: $gcmDIR/verification => exit"
  exit
fi

#-- in case mpiexec get stuck, run this script in background to check
if test -x $HERE/check_$sfx ; then
   echo "start check_$sfx in background"
   mv -f $HERE/check_${sfx}.log $HERE/check_${sfx}.log_bak
   ( cd $HERE ; ./check_$sfx > check_${sfx}.log 2>&1 ) &
fi

echo ./testreport $options -of $OPTFILE -command \"$EXE\" -odir aces-$sfx
./testreport $options -of $OPTFILE -command "$EXE" -odir aces-$sfx

#echo ''
#echo ../tools/do_tst_2+2 -mpi -mf $PBS_NODEFILE -exe \"$EXE\" -o aces-$sfx -a NONE
#../tools/do_tst_2+2 -mpi -mf $PBS_NODEFILE -exe "$EXE" -o aces-$sfx -a NONE

