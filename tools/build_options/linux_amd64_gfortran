#!/bin/bash

#  $Header: /home/jahn/src/cvs2git/MITgcm/20170915-2/gcmpack-all-patch/MITgcm/tools/build_options/linux_amd64_gfortran,v 1.13 2011/07/07 22:46:44 jmc Exp $
#  $Name:  $

#  Tested with gcc-gfortran v4.1.x as shipped with Fedora Core 6,7,8
#         with gcc-gfortran v4.3.x as shipped with Fedora Core 9,10

# OpenMP : Tested on dickens with gcc-gfortran v4.3.2 as shipped with FC 10
#          and on baudelaire with gcc-gfortran v4.4.5 as shipped with FC 13
#          also on danton    with gcc-gfortran v4.5.1 as shipped with FC 14
#-------
# run with OpenMP: needs to set environment var. OMP_NUM_THREADS
#    and generally, needs to increase the thread stack-size:
#   -  sh,bash:
#     > export OMP_NUM_THREADS=2
#     > export GOMP_STACKSIZE=400m
#   - csh,tcsh:
#     > setenv OMP_NUM_THREADS 2
#     > setenv GOMP_STACKSIZE 400m
#-------

FC=gfortran
F90C=gfortran
CC=gcc
DEFINES='-DWORDLENGTH=4 -DNML_TERMINATOR'
CPP='cpp  -traditional -P'
NOOPTFLAGS='-O0'
EXTENDED_SRC_FLAG='-ffixed-line-length-132'
GET_FC_VERSION="--version"
OMPFLAG='-fopenmp'

if test "x$DEVEL" != x ; then
    FFLAGS='-g -Wall -W -ffpe-trap=invalid,zero,overflow -fbounds-check'
else
    FFLAGS=''
fi

# Requires gfortran from 2006 onwards for -fconvert=big-endian
FFLAGS="$FFLAGS -fconvert=big-endian -fimplicit-none"
# for big objects:
FFLAGS="$FFLAGS -fPIC"

if test "x$IEEE" = x ; then
    #  No need for IEEE-754
    FOPTIM='-O3 -funroll-loops'
else
    #  Try to follow IEEE-754
    # these may also be useful, but require specific gfortran versions:
    # -Wnonstd-intrinsics  for gfortran <= 4.3
    # -Wintrinsics-std     for gfortran >= 4.4
    # -Wno-tabs            for gfortran >= 4.3
    FFLAGS="$FFLAGS -Waliasing -Wampersand -Wsurprising -Wline-truncation"
#   to get plenty of warnings :
#   FFLAGS="$FFLAGS -Wconversion -Wimplicit-interface -Wunused-labels"
    FOPTIM='-O0'
#   for automatic testing with testreport (but no relation with IEEE arithmetic):
    FOPTIM="$FOPTIM -g -ffpe-trap=invalid,zero,overflow -fbounds-check"
fi
F90FLAGS=$FFLAGS
F90OPTIM=$FOPTIM
CFLAGS='-O0 -fPIC'

if [ "x$NETCDF_ROOT" != x ] ; then
    INCLUDEDIR="${NETCDF_ROOT}/include"
    INCLUDES="-I${NETCDF_ROOT}/include"
    LIBDIR="${NETCDF_ROOT}/lib"
    LIBS="-L${NETCDF_ROOT}/lib"
elif [ "x$NETCDF_HOME" != x ]; then
    INCLUDEDIR="${NETCDF_HOME}/include"
    INCLUDES="-I${NETCDF_HOME}/include"
    LIBDIR="${NETCDF_HOME}/lib"
    LIBS="-L${NETCDF_HOME}/lib"
elif [ "x$NETCDF_INC" != x -a "x$NETCDF_LIB" != x ]; then
    NETCDF_INC=`echo $NETCDF_INC | sed 's/-I//g'`
    NETCDF_LIB=`echo $NETCDF_LIB | sed 's/-L//g'`
    INCLUDEDIR="${NETCDF_INC}"
    INCLUDES="-I${NETCDF_INC}"
    LIBDIR="${NETCDF_LIB}"
    LIBS="-L${NETCDF_LIB}"
elif [ "x$NETCDF_INCDIR" != x -a "x$NETCDF_LIBDIR" != x ]; then
    INCLUDEDIR="${NETCDF_INCDIR}"
    INCLUDES="-I${NETCDF_INCDIR}"
    LIBDIR="${NETCDF_LIBDIR}"
    LIBS="-L${NETCDF_LIBDIR}"
elif test -d /usr/include/netcdf-3 ; then
    INCLUDES='-I/usr/include/netcdf-3'
    LIBS='-L/usr/lib/netcdf-3 -L/usr/lib64/netcdf-3'
elif test -d /usr/include/netcdf ; then
    INCLUDES='-I/usr/include/netcdf'
elif test -d /usr/local/netcdf ; then
    INCLUDES='-I/usr/local/netcdf/include'
    LIBS='-L/usr/local/netcdf/lib'
elif test -d /usr/local/include/netcdf.inc ; then
    INCLUDES='-I/usr/local/include'
    LIBS='-L/usr/local/lib64'
fi
