C $Header: /home/jahn/src/cvs2git/MITgcm/20170915-2/gcmpack-all-patch/MITgcm/pkg/cost/Attic/cost_init_fixed.F,v 1.1.2.1 2003/06/23 23:35:56 heimbach Exp $

#include "COST_CPPOPTIONS.h"


      subroutine cost_init_fixed( mythid )

c     ==================================================================
c     SUBROUTINE cost_init_fixed
c     ==================================================================
c
c     o Set contributions to the cost function and the cost function
c       itself to zero. The cost function and the individual contribu-
c       tions are defined in the header file "cost.h".
c
c     started: Christian Eckert eckert@mit.edu 30-Jun-1999
c
c     changed: Christian Eckert eckert@mit.edu 25-Feb-2000
c
c              - Restructured the code in order to create a package
c                for the MITgcmUV.
c
c     changed: Ralf Giering 18-Jan-2001
c
c              - move namelist reading to cost_readparms.F
c
c     ==================================================================
c     SUBROUTINE cost_init_fixed
c     ==================================================================

      implicit none

c     == global variables ==

#include "EEPARAMS.h"
#include "SIZE.h"
#include "GRID.h"
#include "PARAMS.h"

#include "cal.h"
#include "cost.h"

c     == routine arguments ==

      integer mythid

c     == local variables ==

      integer tempDate1(4)
      integer tempDate2(4)

      logical exst

c     == external functions ==

      integer  cal_IntMonths
      external cal_IntMonths
      integer  cal_IntDays
      external cal_IntDays

c     == end of interface ==

#ifdef ALLOW_CALENDAR

c--   The number of monthly and daily averages generated by the
c--   current model integration.
      nmonsrec = cal_IntMonths( mythid )
      ndaysrec = cal_IntDays( mythid )

      _BEGIN_MASTER( myThid )

c--     Get the complete dates of the ...
c--     ... TMI data.
        call cal_FullDate( tmistartdate1,   tmistartdate2,
     &                     tmistartdate,    mythid )
c--     ... SST data.
        call cal_FullDate( sststartdate1,   sststartdate2,
     &                     sststartdate,    mythid )
c--     ... SSS data.
        call cal_FullDate( sssstartdate1,   sssstartdate2,
     &                     sssstartdate,    mythid )     
c--     ... T/P data.
        call cal_FullDate( topexstartdate1, topexstartdate2,
     &                     topexstartdate,  mythid )
c--     ... ERS data.
        call cal_FullDate( ersstartdate1,   ersstartdate2,
     &                     ersstartdate,    mythid )
c--     ... SCAT data.
        call cal_FullDate( scatstartdate1,  scatstartdate2,
     &                     scatxstartdate,  mythid )
        call cal_FullDate( scatstartdate1,  scatstartdate2,   
     &                     scatystartdate,  mythid )
c--     ... ARGO data.
        call cal_FullDate( argotstartdate1,   argotstartdate2,
     &                     argotstartdate,    mythid )
        call cal_FullDate( argosstartdate1,   argotstartdate2,
     &                     argosstartdate,    mythid )

c--   Sea-ice cost function start and stop times in model seconds.

        call cal_FullDate  ( costIceStart1 , costIceStart2,
     &                       tempDate1     , mythid )
        call cal_TimePassed( modelstartdate, tempDate1    ,
     &                       tempDate2     , mythid )
        call cal_ToSeconds ( tempDate2 , costIceStart , mythid )
        costIceStart = costIceStart + startTime

        call cal_FullDate  ( costIceEnd1   , costIceEnd2  ,
     &                       tempDate1     , mythid )
        call cal_TimePassed( modelstartdate, tempDate1    ,
     &                       tempDate2     , mythid )
        call cal_ToSeconds ( tempDate2 , costIceEnd , mythid )
        costIceEnd = costIceEnd + startTime

      _END_MASTER( mythid )

#endif /* ALLOW_CALENDAR */

c--   Get the weights that are to be used for the individual cost
c--   function contributions.
      call cost_weights( mythid )

c--   Initialise adjoint of monthly mean files calculated
c--   in cost_averagesfields (and their ad...).
cph(
cph   The following init. shoud not be applied if in the middle
cph   of a divided adjoint run
cph)
#ifndef ALLOW_TANGENTLINEAR_RUN
cph!!! and I think it needs to be seen by TAF
cph!!! for repeated TLM runs
cph!!!
      inquire( file='costfinal', exist=exst )
      if ( .NOT. exst) then
         call cost_init_barfiles( mythid )
      endif
#endif

c--   Summarize the cost function's setup.
      _BEGIN_MASTER( mythid )
      call cost_summary( mythid )
      _END_MASTER( mythid )

      _BARRIER

      end
