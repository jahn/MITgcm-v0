C $Header: /home/jahn/src/cvs2git/MITgcm/20170915-2/gcmpack-all-patch/MITgcm/pkg/ctrl/ctrl_map_ini_ecco.F,v 1.1 2004/10/12 15:14:16 heimbach Exp $

#include "CTRL_CPPOPTIONS.h"


      subroutine ctrl_map_ini_ecco( mythid )

c     ==================================================================
c     SUBROUTINE ctrl_map_ini_ecco
c     ==================================================================
c
c     o Add the temperature and salinity parts of the control vector to
c       the model state and update the tile edges. The control vector is
c       defined in the header file "ctrl.h".
c
c     started: Christian Eckert eckert@mit.edu 30-Jun-1999
c
c     changed: Christian Eckert eckert@mit.edu 23-Feb-2000
c
c              - Restructured the code in order to create a package
c                for the MITgcmUV.
c
c     ==================================================================
c     SUBROUTINE ctrl_map_ini_ecco
c     ==================================================================

      implicit none

c     == global variables ==

#include "EEPARAMS.h"
#include "SIZE.h"
#include "PARAMS.h"
#include "GRID.h"
#include "DYNVARS.h"

#include "ctrl.h"
#include "ctrl_dummy.h"
#include "optim.h"
#ifdef ALLOW_ECCO
#include "ecco_cost.h"
#endif

#ifdef ALLOW_AUTODIFF_TAMC
#include "tamc.h"
#include "tamc_keys.h"
#endif /* ALLOW_AUTODIFF_TAMC */

c     == routine arguments ==

      integer mythid

#ifdef ALLOW_ECCO
c     == local variables ==

      _RL     fac
      integer bi,bj
      integer i,j,k
      integer itlo,ithi
      integer jtlo,jthi
      integer jmin,jmax
      integer imin,imax
      integer il

      logical doglobalread
      logical ladinit

      character*( 80)   fnametheta
      character*( 80)   fnamesalt

c     == external ==

      integer  ilnblnk
      external ilnblnk

c     == end of interface ==

#ifdef ALLOW_AUTODIFF_TAMC
          act3 = myThid - 1
          max3 = nTx*nTy
          act4 = 0
          ikey = (act3 + 1) + act4*max3
#endif /* ALLOW_AUTODIFF_TAMC */

      jtlo = mybylo(mythid)
      jthi = mybyhi(mythid)
      itlo = mybxlo(mythid)
      ithi = mybxhi(mythid)
      jmin = 1-oly
      jmax = sny+oly
      imin = 1-olx
      imax = snx+olx

      doglobalread = .false.
      ladinit      = .false.

      fac = 1. _d 0

#ifdef ALLOW_THETA0_CONTROL
c--   Temperature field.
      il=ilnblnk( xx_theta_file )
      write(fnametheta(1:80),'(2a,i10.10)')
     &     xx_theta_file(1:il),'.',optimcycle
      call active_read_xyz_loc( fnametheta, tmpfld3d, 1,
     &                      doglobalread, ladinit, optimcycle,
     &                      mythid, xx_theta_dummy )
cph(
       print *, 'ph-ctrl theta0 a ',
     &    tmpfld3d(15,15,1,1,1)
cph)

      do bj = jtlo,jthi
        do bi = itlo,ithi
          do k = 1,nr
            do j = jmin,jmax
              do i = imin,imax
                 IF (abs(tmpfld3d(i,j,k,bi,bj)).gt.
     &                2.0/sqrt(wtheta(k,bi,bj))) 
     &                tmpfld3d(i,j,k,bi,bj)=
     &                sign(2.0/sqrt(wtheta(k,bi,bj)),
     &                tmpfld3d(i,j,k,bi,bj))
              enddo
            enddo
          enddo
       enddo
      enddo

#ifdef ALLOW_AUTODIFF_TAMC
CADJ STORE theta = tapelev_init, key = ikey
#endif

c                 if(abs(xc(i,j,bi,bj)-123) .gt. 2 .or. 
c     $                abs(yc(i,j,bi,bj)-84) .gt. 2 )
c                if((abs(xc(i,j,bi,bj)-125) .gt. 8 .or. 
c     $                abs(yc(i,j,bi,bj)-5.5) .gt. 9 )
c     $                .and. (k.le.10.or.
c     $                (abs(xc(i,j,bi,bj)-164) .gt. 16 .or. 
c     $                abs(yc(i,j,bi,bj)+60.5) .gt. 6)  .and.
c     $                (abs(xc(i,j,bi,bj)-359).gt.2 .or. 
c     $                abs(yc(i,j,bi,bj)-35.5).gt.2) ) .and.
c     $                (k.le.17.or.
c     $                (abs(xc(i,j,bi,bj)-203) .gt. 26 .or. 
c     $                abs(yc(i,j,bi,bj)+58.5) .gt. 6)
c     $                ))

      do bj = jtlo,jthi
        do bi = itlo,ithi
          do k = 1,nr
            do j = jmin,jmax
              do i = imin,imax
                 theta(i,j,k,bi,bj) = theta(i,j,k,bi,bj) +
     &                               fac*tmpfld3d(i,j,k,bi,bj)
                if(theta(i,j,k,bi,bj).lt.-2.0) 
     &               theta(i,j,k,bi,bj)= -2.0  
              enddo
            enddo
          enddo
       enddo
      enddo
cph(
       print *, 'ph-ctrl theta0 b ',
     &    tmpfld3d(15,15,1,1,1)
cph)

#endif

#ifdef ALLOW_SALT0_CONTROL
c--   Temperature field.
      il=ilnblnk( xx_salt_file )
      write(fnamesalt(1:80),'(2a,i10.10)')
     &     xx_salt_file(1:il),'.',optimcycle
      call active_read_xyz_loc( fnamesalt, tmpfld3d, 1,
     &                      doglobalread, ladinit, optimcycle,
     &                      mythid, xx_salt_dummy )

      do bj = jtlo,jthi
        do bi = itlo,ithi
          do k = 1,nr
            do j = jmin,jmax
              do i = imin,imax
                 IF (abs(tmpfld3d(i,j,k,bi,bj)).gt.
     &                2.0/sqrt(wsalt(k,bi,bj))) 
     &                tmpfld3d(i,j,k,bi,bj)=
     &                sign(2.0/sqrt(wsalt(k,bi,bj)),
     &                tmpfld3d(i,j,k,bi,bj))
c                 if(abs(xc(i,j,bi,bj)-123) .gt. 2 .or. 
c     $                abs(yc(i,j,bi,bj)-84) .gt. 2 )
c                if((abs(xc(i,j,bi,bj)-125) .gt. 8 .or. 
c     $                abs(yc(i,j,bi,bj)-5.5) .gt. 9)
c     $                .and. (k.le.10.or.
c     $                (abs(xc(i,j,bi,bj)-164) .gt. 16 .or. 
c     $                abs(yc(i,j,bi,bj)+60.5) .gt. 6)  )
c     $                 .and. (k.le.17.or.
c     $                (abs(xc(i,j,bi,bj)-203) .gt. 26 .or. 
c     $                abs(yc(i,j,bi,bj)+58.5) .gt. 6)
c     $                ) )

              enddo
            enddo
          enddo
       enddo
      enddo

#ifdef ALLOW_AUTODIFF_TAMC
CADJ STORE salt = tapelev_init, key = ikey
#endif

      do bj = jtlo,jthi
        do bi = itlo,ithi
          do k = 1,nr
            do j = jmin,jmax
              do i = imin,imax
                 salt(i,j,k,bi,bj) = salt(i,j,k,bi,bj) +
     &                               fac*tmpfld3d(i,j,k,bi,bj)
              enddo
            enddo
          enddo
       enddo
      enddo

#endif


c--   Update the tile edges.

#ifdef ALLOW_THETA0_CONTROL
      _EXCH_XYZ_R8( theta, mythid )
#endif
#ifdef ALLOW_SALT0_CONTROL
      _EXCH_XYZ_R8(  salt, mythid )
#endif

#endif

      return
      end

