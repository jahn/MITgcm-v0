$Header: /home/jahn/src/cvs2git/MITgcm/20170915-2/gcmpack-all-patch/MITgcm/doc/tag-index,v 1.1562 2011/12/25 22:29:37 jmc Exp $
$Name:  $

    Notes on tags used in MITgcmUV
    ==============================

o pkg/exf (vertor interpolation):
  - rotate vector component toward local grid-axis orientation using grid-angles
    (stored in GRID.h) instead of locally computed rotation angle; keep old code
    available with exf option EXF_USE_OLD_VEC_ROTATION (undef by default).
o pkg/seaice:
  - allow to compile with exf options ALLOW_ATM_TEMP or ALLOW_DOWNWARD_RADIATION
    undefined. Fix and remove the stop when ALLOW_RUNOFF is undefined.
o pkg/PKG_OPTIONS.h files:
  - move #include "CPP_OPTIONS.h" just after #include "PACKAGES_CONFIG.h",
    outside of the #ifdef ALLOW_THISPKG / #endif block.
  - update verification/*/code/PKG_OPTIONS.h files.
o add a verification experiment (offline_exf_seaice/input.seaice) that test
  the B-grid LSOR solver
o pkg/seaice: sort out emissivity and long wave radiation step 2:
  - add emissivity for snow and ice as new run-time parameters
    (unfortunately) that default to the corresponding exf values; this
    changes results in most verification experiments so that for backward
    compatibility these parameter have to be set explicitly to inconsistent
    values (ugly);
  - the exf-flag EXF_LWDOWN_WITH_EMISSIVITY then gets rid off the hard-wired
    emissivities of 0.97 associated with lwdownloc in S/R seaice_solve4temp
    until we agree how to handle this bug properly
o pkg/exf (interpolation):
  - add a set of run-time param ({inputfield}_interpMethod), one for
    each interpolated input field, to select the interpolation method
    with a value of zero switching off the interpolation;
  - print interpolation parameters to standard output;
  - refine exf_check.F accordingly ; stop if USE_NO_INTERP_RUNOFF is defined
    (to use instead runoff_interpMethod=0 in data.exf).
  - simplify default setting of interpolation parameters (for all fields,
    set position to match model grid cell-center position, leading to trivial
    interpolation in case of regular Lat-Lon grid) and fix for the case of
    non-uniform delY.
o pkg/exf/exf_radiation.F: add the factor ocean_emissivity to lwdown, for
   within #ifdef EXF_LWDOWN_WITH_EMISSIVITY/#endif. Unless ocean_emissivity=1.
   this factor is absolutely required, because the lw exitance (= out-going
   long wave radiation) is emissivity*stefanBoltzmann*T^4 + rho*lwdown,
   where the reflectivity rho = 1-emissivity for conservation reasons. Once
   this is established, we can remove the CPP-Flag (if we want to).
o pkg/seaice:
  - qualify a stop statement in S/R seaice_check: EXF_READ_EVAP and
    ALLOW_BULKFORMULAE are only required if SEAICE_EXTERNAL_FLUXES is defined
  - sort out emissivity and long wave radiation, step 1: make SEAICE_emissivity
    what the name implies (and not emissivity*BoltzmannConstant), this means
    the old default value of 5.5e-8 now means
    5.5e-8/5.670e-8 = 0.97001763668430343479 as ocean_emissivity in
    S/R exf_readparms
  - FV-discretization of the B-grid LSOR solver, turn on with
    SEAICE_LSRBNEW. This new solver also involves a slight re-organization
    of the calling routine dynsolver, so that B and C-grid code look a
    little more alike.
  - fix index bugs in ostres.F (B-grid code)
o pkg/seaice/seaice_ocean_budget.F: change (unused) code to make it look better
o pkg/seaice/seaice_readparms.F: make ocean_emissivity*stefanBoltzmann the
  default for SEAICE_emissivity, if useEXF; requires setting a wrong
  parameter value in global_ocean.cs32x15/input.seaice/data.seaice for
  backward compatiblity
o model/src: use sigmaR in calc_ivdc

checkpoint63g (2011/12/16)
o pkg/seaice/seaice_growth.F:
  fix heat conservation of the coupled ocean-seaice system.
  when SEAICE_HEAT_CONSERV_FIX is defined, the mismatch of
  solid vs liquid water treatment is resolved via QNET.
o pkg/seaice/seaice_growth.F:
  add missing term for sublimation in saltFlux, which was breaking conservation.
o pkg/seaice/seaice_model.F:
  Remove this patholigical case treatment in evolution branch,
  where it is un-necessary and breaks conservation.
  Update global_ocean.cs32x15/results accordingly for
  output.seaice.txt output_adm.seaice.txt and output_adm.seaice_dynmix.txt
o model/src:
  useRealFreshWaterFlux: remove masking of EmPmP (using maskInC) in
  external_forcing_surf.F and apply mask directly in S/R SOLVE_FOR_PRESSURE.
o pkg/obcs:
  modify Stevens boundary conditions so that S/R obcs_calc_stevens computes
  tendency for temperature and salinity that is then applied to update
  theta and salt in S/R obcs_apply_ts; this requires proper masking of all
  horizontal advection and diffusion contributions on the boundary (in
  S/Rs gad_advection, gad_calc_rhs, gmredi_rtransport, gmredi_calc_diff), and
  removing the mask in S/R timestep_tracer. The advantage of this approach is
  that the updated tracer values include contributions from the surface
  forcing and vertical diffusion.
  This modification changes exp4.stevens because of vertical diffusion.
o model/src:
  change non-curvilinear grid setting to also work with exch2 + blank tiles:
  - move delX,delY to new header file (SET_GRID.h) and adjust length to 1rst
    face dimensions.
  - new S/R INI_LOCAL_GRID to define model tile-local grid (using same units
    as delX,delY) and called from S/R INI_CARTESIAN_GRID, INI_CYLINDER_GRID
    and INI_SPHERICAL_POLAR_GRID.
  change test-experiment global_ocean.90x40x15:
  - split the domain in many more tiles (9x4 tiles of 10x10 each);
  - switch to exch2 and remove 1 blank-tile (but only for MPI test).
  - update results of both test (std & dwnslp).
o pkg/diagnostics/diagstat_calc.F: fix problem with non-initialised halos in
   tmp-fields for TARGET_NEC_SX at the cost of extra loops and less vectorisation
o model/src:
  - take sigma-coords related code out of update_etah.F into new S/R UPDATE_ETAWS
    and fix initialisation when using sigma-coords.
o model/src:
 - improve Gael's changes from Jan 14, 2011 "addition of an 'update' of hfacc etc.
   to their current value at the beginning of forward_step.F": add a new run-time
   switch "doResetHFactors" (default=false) and use it to do (or not) the resetting.
 - set doResetHFactors=T in the following test exp:
    global_ocean.90x40x15/input (rStar) & input.dwnslp (linFS),
    global_ocean.cs32x15/input.seaice (rStar), hs94.cs-32x32x5/input.impIGW (linFS)
    and tutorial_global_oce_in_p (nonLinFS in p)
o pkg/ecco
  - added IES cost term
o verification/advect_xz
  - scale down the depth by 1/100 (from 200 km to just 2.km)
  - add secondary test using divergent flow, r-star and implicit vertical advection.
  - add note (check_conserve_TS.txt) and matlab script to check global
    conservation of T & S with NonLin-FreeSurf and Adams-Bashforth.
o pkg/rbcs:
  - add missing relaxUFile & relaxVFile in namelist (in rbcs_readparms.F).
o pkg/obcs (Stevens BCs):
  - fix various problems in the phase speed computations of the Stevens
    boundary conditions:
    - sign error for western and southern boundaries,
    - time tendencies were underestimated by factor of dTracerLev and some just
      zero (for multidim advection schemes) -> now estimate time tendencies
      from difference between previous (n) time level and the one before (n-1);
      this requires storing a field per tracer per boundary, also in the pickup
      files.
    - replace deltaTmom in cflMer/Zon computation with dTracerLev
    - set default phase velocity to cflMer/Zon
  - update verification experiment exp4.stevens
o pkg/generic_advdiff (implicit_r):
  - fix implicit vertical advection conservation with AB and/or NonLin-FreeSurf
    (remove Tr*d/dz(w) in gad_implicit_r.F and add it in gad_calc_rhs.F);
  - fix implicit vertical diffusion or advection with NonLin FreeSurf
    (was using current recip_hFacC instead of future recip_hFacC): set future
    recip_hFac in thermodynamics.F and pass & use it in all vertical implicit
    solver S/R ;
  - fill diagnostics of vertical advective fluxes (computed from tendency)
    when using implicit vert. advection;
  - update output of exp that uses NonLin-FreeSurf & implicit vertical diffusion:
     global_ocean.90x40x15 (fwd+AD), global_ocean.cs32x15 (4 fwd +4 AD),
     tutorial_global_oce_in_p (fwd), tutorial_tracer_adjsens (AD)
     and cpl_aim+ocn (used in ocean); to be fixed: bottom_ctrl_5x5.
o pkg/diagnostics:
  - add diags for T & S tendency which goes through Adams-Bashforth.

checkpoint63f (2011/11/30)
o pkg/obcs/obcs_calc_stevens.F:
  - join some loops to reduce number of if-statements
  - fix a bug in code for northern and southern boundaries.
o pkg/seaice/seaice_init_varia.F
  - undo resetting UVM=0 that has slipped in unnoticed in r1.49 and
    caused zero ice-velocities for the B-grid code
o pkg/seaice/seaice_init_fixed.F
  - fix a bug in the initialisation of the second metric terms
    k2AtC and k2AtZ: k2AtC was set to the value of k2AtZ and k2AtZ was 0.
  - this affects all seaice configurations with useCurviLinearGrid = .true.
    and SEAICEuseDynamics = .true. (default) and SEAICEuseMetricTerms
    = .true. (default)
  - the only verification experiment affected is global_ocean.cs32x15:
    icedyn, seaice, and seaice_dynmix (AD)
o pkg/thsice/thsice_diagnostics_state.F
  - only for TARGET_NEC_SX: initialise all of tmpFld, so that overlap does
    not contain garbage that can lead to surprises in diagstats_calc.F
o model/src:
  - move bi,bj loops inside INTEGR_CONTINUITY ;
  - call INTEGR_CONTINUITY directly from forward_step.F
    (previously called from momentum_correction_step.F)
  - call UPDATE_ETAH from integr_continuity.F and update initialise_varia.F,
    forward_step.F and pkg/ecco/the_main_loop.F
o model/src/do_oceanic_phys.F:
  - reset addMass to zero only if useICEFRONT ;
  - separated k-loop for rhoInSitu calculation ;
  - add 2 diagnostics for wVel*delta^k(Rho) at constant pressure (= WdRHO_P)
    and at constant T,S (= WdRHOdP);
  NOTE: change diagnostics WRHOMASS : this is now simply the Vertical transport
    of In-Situ Density (Anomaly) (=wVel*rho^bar-k) (previously was Vertical
    transport of locally-referenced potential density);
    to recover old diag: (WRHOMASS)_old = (WRHOMASS)_new -1/2 * (WdRHOdP)
o gluemnc:
  - replace ncrcat with ncks when adding variables to *.glob.nc
  - change the way variables without record dimensions are handled so that
    files that have variables with and without record variables can be glued:
    add a record dimension with a new unique name to be able to differentiate
    between variable with and without a-prior record dimensions. Remove
    this record dimension before adding the variable to the *.glob.nc file.
    This procedure automatically works also for grid.*.nc files that do not
    have any record dimension.
o verification/cpl_aim+ocn:
  - generate new reference output on baudelaire (gfortran, mpich2) (previously
    from old aces-grid cluster, ao + ifort) and update 'run_cpl_test' script.
o pkg/obcs/obcs_calc_stevens.F:
  - add code for northern and southern boundaries.
  - reorder some loops to save some operations and so that drFBar can be scalar
o model/src:
  - re-arrange extrapolation calculation in Adams-Bashforth S/R (affects machine
    truncation) and add diagnostics for Adams-Bashforth tendency increment.
  - update test-exp. AD output:
    1D_ocean_ice_column, bottom_ctrl_5x5, lab_sea.noseaicedyn, obcs_ctrl;
  and FWD output: exp4 (x3), fizhi-cs-32x32x40, fizhi-cs-aqualev20,
    front_relax (x3), global_ocean.90x40x15 (x2), global_ocean.cs32x15 (x5),
    global_ocean_ebm, ideal_2D_oce, internal_wave, isomip (x3), lab_sea (x4),
    matrix_example, MLAdjust (x5), natl_box (x2), tutorial_advection_in_gyre,
    tutorial_global_oce_in_p, tutorial_global_oce_latlon and
    tutorial_plume_on_slope.
o pkg/diagnostics/diagstats_calc.F: add special code for TARGET_NEC_SX
  that vectorises. This code uses 3 extra 2D fields, F90 array assignments
  and F90 intrinsic routines SUM, MINVAL, MAXVAL, but since TARGET_NEC_SX
  does not even come with an F77 compiler anymore, this should not be
  a limitation

checkpoint63e (2011/11/06)
o pkg/seaice adjoint of LSR:
  - substantially rework STORE dirs.
  - add new flag SEAICE_LSR_ADJOINT_ITER and parameter SOLV_MAX_FIXED
    this flag will do SOLV_MAX_ITERS but only store SOLV_MAX_FIXED fields
    and only perform SOLV_MAX_FIXED adjoint iters.
    If flag SEAICE_LSR_ADJOINT_ITER is undef-ined, the store in the iteration
    always goes to same record, meaning that the last forward field will be
    the one used in the adjoint - an approximation.
  - now produces non-zero LSR-related gradients, and acceptable gradients for
    An's zonal (x-z) test case (to be checked in)
  - lab_sea: produces acceptable gradients for lab_sea with forward/backward LSR
    (but these are screwed up by the thermodynamics in the first place);
    reduce from 4 to 3 timesteps to avoid t.d. issue as temporary solution;
    output_adm.txt also reflects changes to seaice_lsr
  - global_ocean.cs32x15:
    * the "default" input_ad.seaice has been re-defined to always exclude dynamics
      (output_adm.seaice.txt was updated)
    * new input_ad.seaice_dynmix tests a forward LSR / backward free-drift
      (output_adm.seaice_dynmix.txt)
o test-exp. exp4+stevens:
  - switch off pTracers and nonHydrostatic (restart problems with NH); update output
o pkg/seaice (lsr solver):
  - put coriolis term into FORCEX,Y (as in seaice_evp.F; previously in rhsU,V only);
    update output (change truncation) of FWD test exp lab_sea & global_ocean.cs32x15
  - fix SEAICEuseFREEDRIFT for new OBCS version (ndef OBCS_UVICE_OLD)
  - new parameter "LSR_mixIniGuess" allows (if=2,4) to mix free-drift solution
    into initial guess for linearised solver; use weight ~ (1/err)^2,4.
  - compute (with new S/R) and print initial (+ free-driff sol. if available)
    and final residual of linearised system.
o pkg/pp81: add diagnostics for vertical eddy viscosity and diffusivity
  (requires new subroutines pp81_init_fixed.F/pp81_diagnostics_init.F)
o pkg/obcs: Stevens BCs (still only for east and west)
  - fix Stevens BCs by using intermediate velocities of previous
    time step as "baroclinic" contribution rather velocity of one grid cell
    inside the boundaries; more consistent but makes the entire treatment
    more complicated, requires new pickup files and two new S/Rs:
    obcs_copy_uv_n and obcs_save_uv_n
    keep old version with flag OBCS_STEVENS_USE_INTERIOR_VELOCITY
    (undefined by default)
  - silently move computation of some grid factors into separate loops to
    save some recomputations
  - add a hack for non-linear free surface
  - add a verification experiment to exp4 that tests this code
o make gluemnc/xplodemnc work with (moron) non-GNU shell tools

checkpoint63d (2011/10/25)
o pkg/obcs + seaice-dynamics:
  - new implementation calls OBCS_APPLY_UVICE (in seaice_dynsolver.F) before
    solving for uIce,vIce and prevent SEAICE_LSR or SEAICE_EVP to modify OB
    values (consistent with an implicit method).
  - add option OBCS_UVICE_OLD (in OBCS_OPTIONS.h, defined by default) to
    return to older implementation (same results as before); note that none of
    the "experimental" OBCS_SEAICE options are implemented in the new version.
  - switch test exp. seaice_obcs to use new version (update output).
o pkg/seaice:
  - add few stop (B-grid & CS-exch, B-grid & obcs, AUTODIFF & SEAICE_maskRHS)
  - add parenthesis in Water-Ice drag calculations (evp & lsr);
  - in seaice_lsr.F, simplify and fix AA3 setting in case sNx or sNy=1;
    and fix case SEAICE_waterDrag=0 (but unstable if no or little seaice)
  - update output of test exp lab_sea that uses evp or lsr (fwd+ad)
    and global_ocean.cs32x15 (icedyn & seaice fwd+ad).
o pkg/layers:
  - Include potential density as new coordinate (Thanks to David Munday)
o pkg/dic:
  - Remove subroutine CALC_PCO2_APPROX_CO3 from carbon_chem.F and add
    carbonate computation/output to CALC_PCO2_APPROX
o pkg/generic_advdiff
  - make TAF generate code that vectorizes:
    gad_dst3fl_adv_*.F, gad_u3c4_impl_r.F
o model/src:
  - improve vectorization also for adjoint code of
    solve_tridiagonal and solve_pentadiagonal. As this requires up to
    5 new 3D-fields, this code is only turned on for the combination of
    ALLOW_AUTODIFF_TAMC and TARGET_NEC_SX. Also remove error message
    for singular matrix check (only for TARGET_NEC_SX).
  - remove hard-wiring of CPP-flag ALLOW_SOLVERS_KLOOPINSIDE to
    ALLOW_AUTODIFF. This flag now needs to be set outside of
    solve_tri/pentadiagonal.F
o pkg/exf:
  - fix previous modif in exf_readparms.F (revision 1.66: treatment of
    optional namelist EXF_NML_OBCS).
  - add many debug-print (to trace down where pkg/cal error msg comes from)
o pkg/mom_vecinv/mom_vi_hdissip.F
  - rearrange loops so that vectorization is improved and in particular
    the adjoint routine vectorizes. The code is a little longer now, but I
    think easier to read.
    Note: CPP-flag MOM_VI_ORIGINAL_VISCA4 is not tested.
o pkg/seaice:
  - allow to specify initial seaice velocity from files (uIceFile,vIceFile)
o pkg/exch2:
  - alternative code (without tile x tile matrix) for cumulated (global) sum;
    used as default; keep using matrix version in adjustment.cs-32x32x1.
o tools/build_options:
  - after merging some MPI and/or multi-threads specific optfiles so that
    the modified default optfile support both built (using genmake2 -mpi
    for the MPI built, using genmake2 -omp for OpenMP built),
    move now obsolete optfiles to tools/build_options/unsupported/
   (add copy of email sent to support list in doc/optfiles_changes.txt)

checkpoint63c (2011/09/28)
o pkg/ebm:
  - fix ebm_zonalmean.F for several procs in Ydir (nPy > 1); update output of
    test exp. global_ocean_ebm (affects machine truncation, 12 digits for cg2d)
o pkg/seaice (SItracer pickup)
* Simple code for pickup of SItracer fields (#define ALLOW_SITRACER)
  To be done:
  - thorough testing of missing fields in S/R seaice_read_pickup
  - thorough matching between generic tracers and specific fields used
    (e.g. volume-weighted age, area-weighted age, salinity, ...)
o pkg/grdchk:
  - all procs calculate and print finite-difference gradient (for testreport)
  - change description output used by testreport;
  - AD testing: also compare and report Finite-difference gradient;
    => update all output_adm*.txt
o test exp. global_ocean_ebm:
  - switch back useRealFreshWaterFlux (no problem anymore with run-off);
    and turn on exactConserve; update (fwd) output.
o pkg/seaice (LSR):
  - print to STDOUT number of solver iterations at SEAICE_monFreq interval.
  - modify solver to deal cleanly with u/v switch at face edges (CS-grid):
    * identical results with non-CS topology (but save up to half of EXCH calls)
    * no much changes in cs-32 verification tests since no ice at face edges
     (differences due to convergence criteria, since nb of iterations changed)
    * expect some differences on lat-lon-cap grid.
    update FWD results of global_ocean.cs32x15 test exp. (icedyn & seaice)
o pkg/exch2:
  - add new CPP option to disable Cumul-Sum matrix (to save storage when using
    many tiles); until alternative coding is added, just add a stop.
o pkg/kpp:
  - move ptracer/salt correction to KPP diffusivity from calc_3d_diffusivity.F
    to S/R KPP_CALC_DIFF_PTR (+ add tracer-index to argument list).
o optfiles:
  - merged few MPI specific (*+mpi*) and multi-threads specific (*+mth) optfiles
    into corresponding standard one, which now support different build:
    (when using "genmake2 -mpi" for MPI built, "genmake2 -omp" for OpenMP built)
  - add "darwin_amd64_gfortran" optfile (initially from Constantinos, tested by Gael)
o pkg/obcs (seaice):
  - add missing EXCH for uIce,vIce after applying OBCS;
  - remove S/R EXF_SWAPFFIELDS_X/Y , disable S/R EXF_SET_OBCS_X/Y by adding
    argument = number of levels to S/R EXF_SWAPFFIELDS_XZ/YZ and S/R
    EXF_SET_OBCS_XZ/YZ ; update obcs_exf_load.F;
  - fix EXF_SET_OBCS_XZ/YZ for multi-threaded (assuming loaded arrays are shared)
  - verification exp. seaice_obcs: split domain in 2 tiles ; add SIZE.h_mpi
    and eedata.mth for MPI and mutlti-threaded testing.
o pkg/flt:
  - make FLT EXCH working with multi-threads (and MPI + multi-threads);
  - use buffer for floats IO (trajectories & profiles); size set in FLT_SIZE.h;
  - fix pickup and trajectories + profiles output with multi-threads;
  - add parameter to select group of fields to write along trajectory and
    profile (default unchanged);
  - only call PORT_RAND* function when flt_noise <> 0;
  - add multi-threaded test for verification exp. flt_example.
o eesupp/src:
  - fix S/R ALL_PROC_DIE for MPI+multi-threads.
  - USE_OMP_THREADING: check that number of threads (from eedata) matches
    actual number (from env.var. setting).
o pkg/ebm:
  - fix multi-threading in ebm_area_t.F ; clean-up EBM.h header file.
  - add multi-threaded test for verification exp. global_ocean_ebm

checkpoint63b (2011/08/29)
o pkg/ebm:
  - fix sign of runoff;
  - update directly forcing fields (Qnet,EmPmR) to use standard
    external_forcing_surf.F (remove ebm_forcing_surf.F);
  - avoid loading forcing fields a 2nd time (1rst time from ini_forcing.F);
  - set either tauThetaClimRelax (in data) or tauThetaZonRelax (in data.ebm)
    and apply relaxation towards corresponding SST field (2-D map or ZonAver).
  - update global_ocean_ebm parameters file data and update output (fwd+ad).
o verification/matrix_example:
  - split domain in 8 tiles (2x4); add SIZE.h_mpi and eedata.mth for
    MPI and mutlti-threaded testing.
o pkg/matrix:
  - change name of S/R MATRIX_INIT to S/R MATRIX_INIT_VARIA ;
  - fix for multi-tiles (add bi,bj indices to exp/impMatrixCounter);
  - fix for multi-threaded (remove DATA statement);
  - use standard DIFFERENT_MULTIPLE function;
  - add MATRIX_OPTIONS.h
o verification/matrix_example:
   To allow to split the domain in several tiles, change the domain size
    from 31x31 to 32x32 by adding 1 row (on Southern side) + 1 column (on
    Western side) of land points.
o (*_)write_pickup:
  - fix few bugs in mypackage_read/write_pickup.F
  - in MDS_WR_METAFILES calls, replace "myTime" by a local copy into
    array of length 1 (was caught by compiler syntax-check).
o pkg/diagnostics (velocity potential solver):
  - fix initialisation of main diagonal matrix (for overlap values)
o tools/build_options:
  - towards single optfile for MPI and non-MPI built: merge few +mpi optfile
    into previously non MPI one (linux_am64 pgf77,open64,pathf90,ifort11)
  - linux_amd64_gfortran: merge +mpi_generic version into standard optfile:
    * move IEEE flags to DEVEL section; take IEEE flags from +mpi_generic ;
    * FAST case: for now, keep -O3 with ini_masks_etc.F in NOOPTFILES list;
    and use "-devel" testreport option for standard testing on baudelaire.
o pkg/grdchk:
  - Assume that all gradient-check position are within the same tile
    corresponding to global indices (iGloTile,jGloTile) and that
    positions (i,j indices or nbeg) are local to this tile;
  - set tile local-indices and proc. number according to tile global-indices;
  - remove grdchkwhichproc from namelist (retired param);
  - send adjoint gradient to all procs so that all procs print it to STDOUT;
  - switch on MPI test for global_ocean.90x40x15 AD test experiment.
o adding package bbl (Bottom Boundary Layer)
  description in MITgcm/pkg/bbl/bbl_description.tex
  example/test experiment in MITgcm_contrib/bbl
o adjoint verifications
  - changed 5 experiments to multi-tiles
    * global_ocean.90x40x15
    * obcs_ctrl
    * offline_exf_seaice
    * tutorial_dic_adjoffline
    * tutorial_tracer_adjsens
    changed reference output for those that crossed tile boundaries
    (changed choices of gradient check positions)
  - with same tiling, switch on MPI test for the last 4 (add SIZE.h_mpi)
  - temporary bug fix in grdchk_loc.F for obcs
o genmake2 & testreport
  - add target "obj" (just for OBJFILES files) to Makefile;
  - add option to specify FEXTRAFLAGS on command line.
o pkg/mypackage:
  - remove bi,bj arguments from argument list of S/R MYPACKAGE_CALC_RHS

checkpoint63a (2011/08/02)
o pkg/diagnostics (velocity potential):
  - fix velocity-potential calculation when using OBCS: balance net inflow
    at each level (new S/R OBCS_DIAG_BALANCE).
  - fix some of the problems with OBCS in stream-function calculation.
o pkg/exf/exf_readparms.F
  - make treatment of optional namelists (EXF_NML_04, EXF_NML_SGRUNOFF,
    EXF_NML_OBCS) more consistent, so that you need not have these lists
    in data.exf when they are not used.
o optim/optim_readdata.F:
  - add some output about obcs variables that might help debugging
  - add a check about nvarlength
o pkg/ctrl: once again, fix computation of endrec in s/r ctrl_init_rec
o pkg/diagnostics (velocity potential):
  - fix mask for OBCS (still problems in stream-function with OBCS);
  - add specific parameter (default = main code CG2D params) for solver;
  - in case of poor convergence, use solution corresponding to lowest residual.
o pkg/seaice/seaice_growth.F: small changes that permit vectorizable
  adjoint code. In general statements like tmpscal=fld(i,j) are problematic
  and should be avoided where possible.
o model/src (rStar):
  - include r* effect on reference-state (PhiRef) in totPhiHyd
    (so that it's really the potential anomaly at the cell center);
    affect solution only if z* with full pressure in EOS.
  - test-exp global_ocean.90x40x15: reduce viscA4 (was not stable) and
    update output (because of z* in totPhiHyd and viscA4 changes);
  - keep the previous diagnostics as "PHIHYDcR" (closer to potential anomaly
    @ constant r) until interpolation at constant r is implemented.
o pkg/diagnostics
  - fix RCENTER diagnostics in case cell center is not at interface middle
o add code for TEOS-10 (www.teos-10.org, McDougall et al. 2011). Use
  this eos with eosType = 'TEOS10', in data (PARM01). This eos implies
  that THETA and SALT are "conservative temperature" and "absolute
  salinity"
o pkg/ctrl
  - fix computation of endrec in s/r ctrl_init_rec
  - ctrl_pack/unpack_*: remove unused variables and some obsolete code
o pkg/seaice/seaice_growth.F
  - fix recomputation with FENTY_AREA_EXPANSION_CONTRACTION code,
    remove then obsolete STORE directives
  - fix STORE directives for tice and tices, so that only the
    appropriate part of the fields are stored (and not the entire
    field); update global_ocean.cs32x15.seaice AD output.
  - cosmetic changes: adjust CPP flags and indentation for better
    legibilty
o pkg/autodiff: add mnc-output of adBottomDragFld (code contributed by
  Chris Wilson)
o pkg/gmredi:
   Add Sub-Meso Eddies parameterisation from Baylor (for now, disabled with TAF),
   and test it in verification exp. "front_relax.bvp" (update output.bvp.txt)

checkpoint63  (2011/07/11)
o pkg/exch2:
 - rename+move: nTiles in W2_EXCH2_PARAMS.h --> exch2_nTiles in W2_EXCH2_TOPOLOGY.h
 - exch2 version of Cumul-Sum routine: S/R W2_SET_MAP_CUMSUM set up the
   (2*nTiles)x(nTiles) Cumul-Sum matrix and Master Proc collects all tiles X,Y
   increments, calculates Cumul-Sum @ tile origin and sends results to each tile.
o pkg/diagnostics:
 - deal with pairs of post-processed diags which are computed together; in
   particular, re-order list of diags within 1 file to save 2nd computation.
 - add S/R to compute velocity stream-function (called after velocity-potential
   calculation) from divergence free transport -> new diagnostics "PsiVEL".
 - add parameter to select grid-point location where PsiVEL == 0.
o eesupp/src:
   new S/R to calculate cumulated sum on tiled array, corner grid-cell location
   (specific S/R needed with exch2 topology - for now, just print an error msg)
o pkg/shelfice
 - Implement friction velocity-dependent transfer coefficients following
   Holland and Jenkins, JPO, 1999
   Original code by M. Losch with small modifs.
   Enable with CPP option SHI_ALLOW_GAMMAFRICT
   and runtime flag SHELFICEuseGammaFrict
o verification lab_sea & global_ocean.cs32x15:
 - use tools/xmakedepend (instead of cyrus_makedepend, in genmake_local):
   does not miss some dependencies (but is slower) and also works with many files
   (default makedepend limitation for AD built).
 - use cyrus_makedepend in adjustment.128x64x1 (so that it still tested).
o pkg/diagnostics:
 - add run-time parameter "useMissingValue" (def=False) to fill land-point
    (i.e., where mask=0) with MissingValue ; used only in MNC output file.
   This replaces CPP-option DIAGNOSTICS_MISSING_VALUE.
 - Extend the use of "missing_value" setting from data.diagnostics for the case
   of counter-diagnostics (where fraction-weight is zero). This applies both to
   MNC and MDS output files.
o pkg/seaice/seaice_growth.F:
  - add 'a priori' cap of latent heat flux based on actual mass considerations
    when SEAICE_ADD_SUBLIMATION_TO_FWBUDGET is used in conjunction with the
    non-legacy seaice_solve4temp.
  - add diagnostic of the residual sublimation freshwater flux (the freshwater
    flux taken from the ocean if the total actual latent heat fluxes exceed
    the maximum)
  - remove the CPP switch around the *_FWbySublim unit change and move diagnostic
   fill for SIatmQnt, SIfwSubl, SIatmFW to the end of seaice_growth.F.
  - add diagnostic of the actual sublimation freshwater flux (that is 0. ifndef
   SEAICE_ADD_SUBLIMATION_TO_FWBUDGET) and of the latent heat flux (evap+sublim).
  - bug fix : frWtrAtm needs a_FWbySublim ifdef SEAICE_ADD_SUBLIMATION_TO_FWBUDGET.
  - bug fix : missing part to Martin's r_FWbySublim pathological case fix.
o verification 1D_ocean_ice_column:
   made model domain truly 1x1x23 instead of 5x5x23 with only center cell (3,3,:) wet
   update results
o pkg/diagnostics:
 - Implement setting of "Post-Processed" diagnostics (corresponding to gdiag(5)='P')
   which are not filled-up but computed from other diags ; In this case, the mate
   diag points to the primary (filled-up) diag to used for post processing.
 - Update Velocity-potential computation using post-processed diag framework.
 ==> Change the ordering of fields and time-periods in MDS output file
   when using periodic averaging: now writes one time record with the full set
   of fields for this time period, then the next time reccord (it used to be
   one field with the full set of time records then the next field).
     Note: this is now similar to NetCDF (MNC) output file. <==

checkpoint62z (2011/06/21)
o adjoint monitor:
 - Add adjoint monitor output for packages exf, seaice
   and update relevant testreport output
o pkg/seaice:
 - re-order diags inits so that they appear in order in available_diagnostics.log
 - added diags: hsnow thermo. rates of change, area preceeding ridiging process,
   area/heff/hsnow preceeding thermodynamic growth/melt.
 - modified diag: SIdA; output actual effect, as the description states.
 - modified description: SIqneti, SIqneto, SIuheff, SIvheff, SIdAb*, HSNOW.
 - retired redundant diags: SIyneg, SIfice, SIsnwice, SIthdgrh.
   (SIyneg->SIdHbOCN; SIfice->SIdHbATC; SIsnwice->SIdHbFLO;
    and SIthdgrh->SIdHbOCN+SIdHbATC+SIdHbATO)
 - modified diags (2) : switch all SIdA*, SIdH*, SIdS* from delta to rates.
 - added diagnostics for seaice generic tracers (SItr*).
 - added SItrUnit and SItrNameLong run time param (for SItr* diags).
 - in diag names, replaced 'PrTh' abbrev. of 'preceeding thermo' with 'PT'.
 I. Fenty: 18-Jun-2011:
 Minor changes to seaice package:
 1) Retired old variables (A22, SEAICE_lhsublim, areaMax, areaMin, hiceMin) and
    added some new ones (SEAICE_area_reg, SEAICE_hice_reg, SEAICE_area_floor)
   - Differentiated "regularization variables" from "floor variables"
    * areaMin became SEAICE_area_reg (old A22) and SEAICE_area_floor
    * hiceMin became SEAICE_hice_reg (old hiceMin)
      (with _reg meaning regularization variable)
   - SEAICE_lhSublim becomes lhSublim, the sum of SEAICE_lhEvap and SEAICE_lhFusion
    so as to ensure energy conservation when going between phases
  - A22 was not used anywhere
 2) Changed regularization procedure for heffActual and hsnowActual to ensure
    well-boundedness and smooth adjoint in seaice_growth.F
 3) Fixed a bug where seaice_solve4temp would not recognize ice-free grid cells
    because the old regularization always set heffActual >= 0.05 cm
 4) Changed the model so that the default behavior is to put a small (10^-5) "floor"
    on AREA when HEFF > 0.
  - went from requiring ALLOW_PRECLUDE_INFINITESIMAL_AREA to be defined to
    requiring that DISABLE_AREA_FLOOR *not* be defined
 Affected verifications:
  - 1D_ocean_ice_column (output.txt output_adm.txt)
  - global_ocean.cs32x15 (output.seaice.txt output_adm.seaice.txt)
o pkg/diagnostics:
  - move MNC code from diagnostics_out.F into new diagnostics_mnc_out.F (2 S/R).
  - rename S/R GETDIAG to DIAGNOSTICS_GET_DIAG and change type of 1rst argument
    (was _RL, now integer) with option = 0 to retrieve all levels.
  - add pieces of code to compute velocity potential at each level (new diagnostics
    PhiVEL, works only when UVELMASS & VVELMASS are also turned on);
    for now, using same params as CG2D (target-resisual, max Nb of iter ...).
  - fix few issues with counter diagnostics in diagnostics_setdiag.F &
    diagstats_setdiag.F (if diagnostic counter is itself a counter diag)
    and in diagnostics_fract_fill.F (do not need a valid pointer for the
    diagnostics counter-mate); check that definition of counter-diagnostic
    includes a valid counter-mate (in diagnostics_set_levels.F).
o model/src (rStar):
  - add rStar scaling factor in diags_phi_hyd.F (similar to calc_grad_phi_hyd.F);
    affect solution only if z* with full pressure in EOS;
    update output of test-exp global_ocean.90x40x15.
o pkg/seaice:
  - introduce siEps=1e-5 parameter
  - use areaMax in AREA update (part 4), consistent with ridging step (part 2.5).
  - re-organize SEAICE_ADD_SUBLIMATION_TO_FWBUDGET code.
  - introduce ALLOW_SITRACER and seaice_tracer_phys.F to handle generic seaice tracer.
    For now it covers, and was tested for, ice salinity and age (attached to HEFF),
    as well as ice cover age and ridging index (attached to AREA).
    For now the run time parameters (in data.seaice/SEAICE_PARM03) are
    SItrName (e.g. 'age') and SItrMate ('HEFF', which is the default, or 'AREA').
    Up to SItrMaxNum=3 tracers can be used simultaneously.
o pkg/salt_plume:
  -introduce SPsalFRAC run time parameter that sets the fraction of the
   salt by-product of ice growth (SPsalFRAC*(1-SIsalFRAC)*salt typically)
   that gets vertically redistributed (fluxed down) by pkg/salt_plume.
o model debug options:
  - Switch reading of debugMode from S/R INI_PARMS (parameter file "data", stored
    in PARAMS.h) to S/R EESET_PARMS (parameter file "eedata", stored in EEPARAMS.h).
  - Refine debug-msg printing selection (3 new levels):
    debugMode  : controls printing of debug messages (sequence of S/R calls).
    debugLevel : controls printing of algorithm-relevant auxiliary/debug messages
     debLevZero =  0 ; /* level of disabled aux. msg printing */
     debLevA =  1 ; /* level of minimum  aux. msg printing */
     debLevB =  2 ; /* level of low aux. print (report read-file opening)*/
     debLevC =  3 ; /* level of moderate debug prt (most pkgs debug msg) */
     debLevD =  4 ; /* level of enhanced debug prt (add DEBUG_STATS prt) */
     debLevE =  5 ; /* level of extensive debug printing */
    New debugLevel default: with default debugMode value (=F),
      = 2 (debLevB) or = 1 (debLevA) in case ALLOW_AUTODIFF is defined.;
      and if debugMode=T, default debugLevel = 4 (debLevD).
    Relation with previous settings:
     debLevB (=2) corresponds to former debLevA (=1)
     debLevD (=4) corresponds to former debLevB (=2)
    Note:
     a) if debugLevel=0, skip WRITE_GRID call when nIter0 > 0 (same as before);
     b) default debugLevel=1 is convenient in AD runs (avoid many file opening msgs);
        to recover previous default, set debugLevel=2 (e.g. AD-test hs94.1x64x5)
  - Add new parameter (printResidualFreq, read from PARM02 namelist) to print
    detailed CG solvers convergence; off (=0) by default, except if debugLevel=5.
o pkg/obcs:
  - change OBCSfixTopo default from True to False (should not change the results);
    keep OBCSfixTopo=T in verification-exp. seaice_obcs.
o pkg/thsice:
  - fix bug in thsice_calc_thickn.F (was introduced in version 1.18) in
    2nd layer seaice sublimation (unlikely to happen)
  - use Interior mask for OBCS in thsice_advection.F (similar to what is
    done in gad_advection & seaice_advection).
o adjoint:
  bug fix spotted by Gael Forget:
  seaice_advection and thsice_advection still had
  legacy CPP options to avoid CS corner updates for adjoint
o pkg/seaice:
  => Change some of the defaults (2011/05/29):
     - change SEAICEuseFluxForm default (from False to True)
     - change DIFF1 default (from 0.004 m/s to 0. m/s)
     And print warnings if DIFF1 is not set in data.seaice and centered
      avection scheme is used without any diffusion.
  also:
  - fix seaice_diffusion calls in default AdvScheme part of seaice_advdiff.F;
  - set SEAICEdiffKh[] default in the same way as SEAICEadvSch[]
  - stop if DIFF1<>0 with SEAICEadvScheme <> 2, if DIFF1<>0 with any
    other non-zero SEAICEdiffKh[] diffusivity, if SEAICEadvSalt=T with
    #undef SEAICE_VARIABLE_SALINITY, if SEAICEadvAge=T with #undef SEAICE_AGE.
  update results of test exp.:
     lab_sea: output.fd (switch to AdvScheme=33 with diffKh=20)
         output.hb87, output_adm.evp (SEAICEuseFluxForm=T and diffKh=200)
         output_adm.noseaicedyn (SEAICEuseFluxForm=T)
     offline_exf_seaice: output.seaicetd, output_adm (SEAICEuseFluxForm=T)
     seaice_obcs: output (SEAICEuseFluxForm=T)
  and prescribe old default for SEAICEuseFluxForm (=F) and DIFF1 (=0.004)
      for standard fwd & AD lab_sea tests (to keep the same output).
o pkg/seaice/seaice_growth.F:
  - use Ian Fenty's capping formulas for actual ice
  thickness thoughout EVOLUTION branch.
  - put treatment pathological case #2) in CPP brackets
  (ALLOW_AVOID_INFINITESIMAL_AREA, undef by default).
  - update global_ocean.cs32x15 and 1D_ocean_ice_colum results accordingly.
o pkg/seaice:
  - seaice_diffusion.F : remove the min(DX,DY) factor permanently;
  pass the Laplacian diffusivity (in m^2/s) diffKh as a parameter;
  also pass fac as a param, which can be 1. (to update the tendency
  field) or the time step (to update the field itself).
  - seaice_advdiff.F: for multidim, call seaice_diffusion with
  e.g. SEAICEdiffKhHeff and with fac=1; for single-dim, call
  seaice_diffusion with e.g. SEAICEdiffKhHeff and with fac=time step.
  - SEAICE_PARAMS.h, seaice_readparms.F, seaice_check.F :
  hooks to handle SEAICEdiffKhHeff, SEAICEdiffKhArea, etc.
o pkg/seaice:
  diffusion with centered advection scheme (diffus.F & advect.F):
  - simplify S/R DIFFUS (put deltaT & DIFF1 factor outside, move EXCH outside)
    to just compute the laplacian of input-field.
  - unroll k loop (harmonic,biharmonic diff) in advect.F to save 1 exch call.
  - fix flux-form version in diffus.F to conserve tracer.
  update output of lab_sea.fd & lab_sea.hb87 (1rst set of modif affects
   machine truncation) and lab_sea.salt_plume (conservative flux-form modif)

checkpoint62y (2011/05/26)
o pkg/seaice:
 - seaice_growth.F : in EVOLUTION branch, always include
   a_QSWbyATM_cover in qnet (as it should be).
 - verification/global_ocean.cs32x15 : update results accordingly
   (output.seaice.txt output_adm.seaice.txt).
o pkg/seaice + obcs:
 - use maskInW & maskInS in multi-dim advection and biharmonic diffusion:
   equivalent of assuming no tracer gradient outside the OB region.
   update output of seaice_obcs (uses DIFF1 <>0 => biharmonic diffusion)
 - remove calls to OBCS_COPY_TRACER after EXCH calls (no longer needed
   after changes above);
 - obcs+seaice cleaning: apply seaice-tracer OB values to tracer field
   only at OB location (instead of over a band of OLx width).
o pkg/seaice:
 - fix wrong indices in old (non Flux-Form) diffusion default S/R diffus.F
   (dxG(I+1, ...) changed to dxG(I, ...), no impact on Lat-Lon grid)
o pkg/obcs:
  - split header file "OBCS.h" into 4 separated files:
    OBCS_PARAMS.h, OBCS_GRID.h, OBCS_FIELDS.h & OBCS_SEAICE.h
   Note: OBCS_PARAMS.h & OBCS_GRID.h can be included without OBCS_OPTIONS.h
     (contain no conditional statement which depends on OBCS options).
  - move "useOBCSYearlyFields" from "data.obcs" (hold in OBCS_PARAMS.h)
    to parameter file "data.exf", namelist EXF_NML_OBCS (in EXF_PARAM.h).
o ctrl, cost, grdchk & autodiff pkgs:
  - make options file more standard (like other {PKG}_OPTIONS.h file but
    with AD_CONFIG.h); clean-up some of the included header files.
o pkg/obcs:
  - do not mask tracer when applying OB (tracer == 0 could generate problems)
  - apply tracer OB values to tracer field only at OB location (instead of
    over a band of OLx width)
  - clean-up obcs_apply_w.F & obcs_apply_eta.F (since less calls to these S/R)
  - remove OBCS_MULTIDIM_OLD_VERSION code in gad_advection.F and remove
    obcs_apply_tloc.F & obcs_apply_sloc.F
o obcs in model/src:
  - call OBCS_APPLY_W only if NonHydrostatic.
  - call OBCS_APPLY_ETA only if NonLinFreeSurf.
  - reset dEtaHdt and wVel to zero outside OB interior region ;
  - leave tracer unchanged outside OB interior region: This has no effect
    on the solution but just to prevent unrealistic tracer value outside OB.
  - zero out velocity outside OB interior region: This has no effect on
    the solution but just to prevent unrealistic velocity outside OB.
o obcs and non-lin free-surf:
   move call to OBCS_APPLY_R_STAR from update_r_star.F to calc_r_star.F
   and call to OBCS_APPLY_SURF_DR from update_surf_dr.F to calc_surf_dr.F
   + add argument "etaFld" to OBCS_APPLY_R_STAR & OBCS_APPLY_SURF_DR:
   this fixes missing EXCH + get consistent eta OB value (+ fix restart).
   update results of test-exp. exp4(nlfs).
o exp4 (nlfs) test-exp:
   use OBC for Eta at Western & Eastern OB (to test prescribing Eta
   with NonLin-FreeSurf); update output.nlfs.txt
o obcs and 2d/3d solver norm:
   use interior masks (maskInC) to cancel out cg2d & cg3d matrix coeff at OB
   and outside OB interior region (will allow to place OB further inside the
   domain). Depending on the domain, can affects cg2d-Norm (previous
   cancellation outside OB was only partial), e.g. in exp4 & obcs_ctrl,
   and cg3d-Norm (previous Norm was computed before canceling OB terms),
   e.g. in tutorial_plume_on_slope.
  - update output of exp.: exp4 (x2), obcs_ctrl and tutorial_plume_on_slope.
o pkg rbcs:
  - split RBCS.h into 3 files: RBCS_SIZE.h, RBCS_PARAMS.h & RBCS_FIELDS.h
  - add capability to apply relaxation to horizontal velocity uVel & vVel.
o pkg/grdchk: add gradient check for control variable xx_shifwflx
o pkg/shelfice/shelfice_init_fixed.F
  fix CPP-flag combinations
o pkg/seaice: Merge iceage code of Pierre Rampal
  * update/change/correct ice age calculations
  * add age updates for pathological cases
  Probably needs more testing...

checkpoint62x (2011/05/13)
o pkg/mom_vecinv:
   high-order vorticity scheme: use interior masks (maskInW & S)
   to zero-out (outside OB) gradient of vorticity.
o verification exp.:
   turn on "useEnergyConservingCoriolis" (better discretisation) in exp.
   hs94.128x64x5 and seaice_obcs ; update results.
o pkg/obcs:
  fix bug in OBeta for YZ sections in obcs_exf_load.F
o pkg/ctrl, pkg/shelfice, and optim:
  - add new control variable xx_shifwflx (fresh water flux underneath ice
    shelves). This is almost as tedious as obcs-ctrl, because the
    variables needs its own mask.
  - add a cost function term that penalizes the deviation of xx_shifwflx
    from the first guess (zero) in analogy to other control variables
o pkg/shelfice:
  - start basic adjoint
o pkg/ctrl:
  - remove extra 2D field "for good measure" when initializing in
    ctrl_set_globfld_[xy/xz/yz].F
  - replace hard coded precision 32 (a bug) in ctrl_map_ini_gen by ctrlprec
  - improve error messages in ctrl_set_unpack_*
o OBC implementation in momentum:
   use interior masks (maskInC,W & S) in momentum S/R:
   - multiply divergence, tension and some del^i.u or del^j.v by maskInC
   - multiply del2u,del2v by maskInW/S (biharmonic viscosity)
   - multiply horiz. grad of vorticity by maskInW/S (in Leith scheme)
   - multiply gradient of wVel by maskInW/S in del2w calculation (NonHyd)
   Motivation: fix/clean implementation of OBC with biharmonic-viscosity
    (and also with Leith/Smagorinsky harmonic-viscosity).
   Update output of experiment dome and exp4 (+nlfs).
o exp4 test-exp:
  - turn on: nonHydrostatic, exactConserv, viscA4 (with momDissip_In_AB=F)
    and prescribe time-varying OB (without pkg/exf) for zonal-velocity
    at Western & Eastern Boundaries (+/- 1 per-cent); Also prescribe
    time-varying OB at Western-side for wVel (NonHyd); update output.
  - add secondary set-up (.nlfs) using NonLin FreeSurf (z*) + mom_vecinv
    and biharmonic-viscosity ; also use prescribed time varying OB.
o pkg/obcs:
  fix bug in OBWeta,OBWeta indices in obcs_apply_r_star.F
o model/src:
  - fix startTime setting when baseTime<>0 & nIter0=0 are specified ;
  - initialise startTime & nIter0 with unlikely values: allows to set one
    from the other without ambiguity.
o seaice_obcs test-exp.:
  add small diffK4T,S to test biharmonic diffusivity with OBCS ; update output.
o pkg/obcs:
  - remove calls to OBCS_COPY_TRACER after EXCH for T,S & pTracer:
    no longer needed with maskInC,W,S in pkg/generic_advdiff.
o pkg/seaice:
  - retired SEAICE_SALINITY and SEAICE_salinity in favor of
    SEAICE_VARIABLE_SALINITY and SIsalFRAC, respectively.
  - fixed bug in the initialization of sea ice salinity variable HSALT
    in seaice_init_varia.F  (removed dependence on ICE2WATR)
o fizhi-cs test exp.:
   switch reference output convention for these 2 non-standard test-exp,
    from: pgi  6.1-5 on faulks (FC.6, -of linux_ia32_pgf77+authors_fc5)
      to: ifort 11.1 on baudelaire (FC.13, -of linux_amd64_ifort11)
   reason: faulks might get retired soon and pkg/fizhi has still Pb with gfortran
o model/inc:
  - change type of PmEpR array (from _RS to _RL) to fix restart (with "-use_r4")
    of exp. global_ocean.90x40x15 (Suncronous time-stepping + Real-FW + NonLin-FS)
o pkg/seaice:
  - fix calculation of saltFlux and saltPlumeFlux when using SEAICE_SALINITY
o verification/lab_sea, 1D_ocean_ice_column, seaice_obcs, global_ocean.cs32x15
  - updated output*.txt files due to bug fixes in salt, saltPlumeFlux,
    and initial HSALT

checkpoint62w (2011/04/26)
o pkg/mom_fluxform:
  - fix calculation of del2u & del2v (no-slip BC) when using Non-Lin Free-Surf.
  - use parameter "sideDragFactor" in no-slip BC side-drag part.
  - update output of exp. global_ocean.90x40x15
o pkg/mom_vecinv:
  mask del2u & del2v (no effect on results, but cleaner & closer to mom_fluxform)
o update seaice exp.:
  use more consistent parameter values (remove "backward compatability only":
   ICE2WATR, SEAICE_lhSublim, SEAICE_cpAir, SEAICE_rhoAir + set rhoConstFresh)
  related to thermodynamics seaice. Update output (fwd+AD) of exp.:
   1D_ocean_ice_column (x2), lab_sea (x8), ioffline_exf_seaice (x2) & seaice_obcs
o update test-exp global_ocean.90x40x15:
  o use default CD_CODE_OPTIONS file (Adams-Bashforth on CD Mom & Coriolis).
  o increase Overlap size from 2 to 3 (to allow to test bi-harmonic Visc.)
  o new pickup-files from a 100.yr run with pkg/down_slope (input.dwnslp params)
  o turn on zStar & viscA4 in standard set-up (dir input/)
    and update output files: output.txt & output.dwnslp.txt
o new AD-test experiment: obcs_ctrl
  (From Matt MITgcm_Contrib/SOSE/BoxAdj) to test OBCS as control vector.
o pkg/dic:
  fix two bugs in handling water vapour pressure in carbonate chemistry
  and air-sea fluxes. Found by Val Bennington and Galen McKinley
  (add DIC Option = WATERVAP_BUG to recover old results)
  update output of tutorial_global_oce_biogeo (fwd+AD) & tutorial_dic_adjoffline
o adding allowInteriorFreezing option to check for water below freezing point
  at depth and bring the negative heat anomaly to the surface level
o pkgs _fields_load:
  - extend GET_PERIODIC_INTERVAL to deal with non-periodic case (from pkg/rbcs)
  - use new S/R GET_PERIODIC_INTERVAL in pkgs:
    bulk_force, cheapaml, cfc, dic, obcs (+ ctrl/ctrl_get_gen_rec), offline and
    rbcs to get interpolation weights and time reccord number.
  - fix multi-threading in aim_fields_load.F
  - apply EXCH to temp arrays [0,1] after reading in dic_fields_load.F
o external_fields_load:
  new S/R GET_PERIODIC_INTERVAL to calculate which time-record (and linear
   interpolation weights) to use in a periodic time-series ; do not divide by
   time-step to convert to integer:
   - this fixes case where externForcingPeriod is not multiple of time-step
      (Thanks to Christopher L. Wolfe)
   - this fixes case where externForcingPeriod is an odd multiple of time-step
     (was wrong by half of time-step); update results of tutorial_global_oce_in_p.
  store index of time-record which is currently loaded:
   - works without any assumption on sequence of calls to EXTERNAL_FIELDS_LOAD ;
   - needed for the adjoint but not yet used because of extensive recomputations;
     (to be fixed soon)

checkpoint62v (2011/04/02)
o verification/1D_ocean_ice_column added to test Ian Fenty's
  pkg/seaice_growth.F modifications for improving sea ice code differentiability
o update output of exp4, internal_wave, seaice_obcs, tutorial_plume_on_slope
  (new velocity statistics after changing maskInW & maskInS definition)
o pkg/generic_advdiff with OBCS:
  use maksInW & maskInS in advective flux and in biharmonic diffusion calculation:
  equivalent to assumption of no tracer gradient outside the OB region.
  This will affect the results if using obcs+biharmonic diffusion.
  update output_adm.txt of experiment bottom_ctrl_5x5 (not expected since no obc)
o pkg/obcs:
  change definition of maskInW & maskInS: leave OB edges inside (maskIn=1)
  (e.g., maskInW(OB_Ie)=1 ) so that velocity normal-component at OB is still
  in Interior region. No impact on solution but affects Velocity monitor stats.
o pkg/ptracers (adjoint)
  New option AUTODIFF_PTRACERS_SPLIT_FILES for writing separate
  tape file for each tracer
o model/inc/src and pkg/autodiff: add parameters that allow to turn
  of parts of the adjoint code at run time. For now, there are only
  useKPPinAdMode, useGMrediInAdMode, and useSEAICEinAdMode. These
  parameters are set in data.pkg.
  This is the lazy coward's version of doing this, but still useful for
  debugging. In order to do it right, everything needs to be moved to
  pkg/autodiff.
o pkg/autodiff: fix global_sum_tile_ad.F by resetting adsumPhi at
  the end; this fixes the adjoint balancing code for open boundaries.
o pkg/ctrl:
  - change behavior of xx_${varname}period to be analogous to exf-conventions:
    xx_${varname}period =   0.,  means time-independent control part
    xx_${varname}period = -12., means one-year-periodic monthly control part
  - introduce helper routine ctrl_init_rec (part of ctrl_init.F) to
    clean up ctrl_init a little, remove unused variables
  - ctrl_init: fixed the handling of the start/endrec for obcs-variables
  - move "call cal_GetMonthsRec" from s/r ctrl_get_gen to s/r ctrl_get_gen_rec

checkpoint62u (2011/03/15)
o model/src:
  - for the adjoint, change NonLin-FreeSurf initialisation sequence: fill-in
    h0Fac from INITIALISE_FIXED and reset hFac to h0Fac in INITIALISE_VARIA ;
  - in initialise_varia.F (except for ALLOW_DEPTH_CONTROL) remove 2nd call to
    INI_DEPTHS, INI_MASKS_ETC & INI_LINEAR_PHISURF.
o pkg/ctrl/obcs/ecco:
  - remove obsolete, unused, and partially broken code:
    ctrl_obcsvol/ctrl_obcsbal/ctrl_volflux and code within
    ALLOW_CTRL_OBCS_BALANCE
  - put a stop statement into ecco/cost_obcsvol.F, but also add
    cost_obcsvol to ecco_ad_diff.list
o pkg/ecco: fix counting cost function contributions for obcs (code
  by Matt M.) and diffkr for diagnostics
o pkg/ecco, pkg/ctrl, pkg/grdchk:
  add cost penalty terms for initial uvel, vvel, eta controls
  and I/O for prior error files
o pkg/mdsio:
   move mds_check4file.F from eesupp/src to mdsio_check4file.F ; add option
   (new argument) to check for tiled file in mdsioLocalDir : this fix the
   restart from pickup_som , pickup_dic (& dic_co2atm) with mdsioLocalDir.
o pkg/ctrl:
 - ctrl_obcsbal.F, ctrl_obcsvol.F: replace last calls of ctrl_getrec by
   ctrl_get_gen_rec, put a stop statement into ctrl_getrec. Remove
   unused and superfluous variables
 - ctrl_get_gen_rec.F: catch the case of xx_genperiod=0.
o pkg/ecco
 - enable adjoint of Stevens OB
o pkg/ctrl/ecco/grdchk:
  - remove global declaration of tmpfldx/yz and tmpfldx/yz2.
    Fortunately, we do not have any tests for the numerous cpp-flagged
    option of "obcs as control parameters" so we will never know
    if this is an improvement (but at least now things compile).
  - remove an obsolete initialization from ecco_cost_init_barfiles.F
  - fix some problems within never used ifdefs to make the code compile
o pkg/obcs:
 - Refine Interior mask definition to work with more complex OB (e.g.
   if OB_Ie < OB_Iw); In case default setting is not sufficient, allows to
   read in Interior mask from file. Check if Interior mask is consistent
   with OB list of indices.
o pkg/seaice
 - beginning code for a seaice tracer package,
   but currently only used for seaice age: SEAICE_AGE
   SEAICE_num = 4
   iTracer = 1: area-weighted ice age
           = 2: volume-weighted ice age
           = 3, 4: template for one-year vs. multi-year ice
   data.seaice has new namelist SEAICE_PARM03 for arrays related to
   SEAICE_num

checkpoint62t (2011/03/05)
o pkg/obcs:
 - obcs_apply_uv.F: change to a 2 steps method, first tangential component;
   then normal component. This ensures that the normal component is set
   correctly even when it conficts with tangential setting from an other OB.
   Affects results of test-experiment seaice_obcs: update the output.txt
o pkg/obcs:
 - add code to monitor statistics of dynamical fields at OB.
 - take OBCS_BALANCE code out of obcs_calc.F into new S/R OBCS_BALANCE_FLOW :
   - fix to OBCS_BALANCE code (right hFac ; deal with simple OB intersection).
   - change default: balance the Net inflow through all OB (instead of balancing
     each OB separately); keep the old method if setting OBC_balanceFacX < 0.
 - switch on useOBCSbalance in dome experiment: only correct Western OB outflow
   to match Nortern OB inflow (OBCS_balanceFacN=0).
o pkg/seaice:
 - redefined actual sea ice age to be ICEAGE/HEFF ifdef SEAICE_AGE_VOL
o pkg/seaice (seaice_growth v 1.113):
 - reverting seaice_growth to v 1.111 in order to have code with exact bit
   compatibility with MITgcm_contrib/ifenty/Fenty_seaice_thermo_code_merge
   CPP option SEAICE_OCN_MELT_ACT_ON_AREA removed in v 1.112 is reintroduced
   runtime flag SEAICEareaFormula is kept but is inactive
o model/src:
 - add new param to scale curvilinear grid distance and area when using
   a different sphere radius from the grid-files.
 - test/check multi-threads EXCH applied to local variable (cg2d_x)
o adjoint:
 - enable adjoint of Stevens OB
 - add dummy_in_dynamics to enable extraction of ADJrhoinsitu
   (a bit delicate because of potentially modified adj. common block structure;
   current switch is ALLOW_AUTODIFF_MONITOR_DIAG, could be changed later)

checkpoint62s (2011/02/15)
o pkg/seaice (seaice_growth v 1.112):
 - introduce SEAICEareaFormula run time parameter, which selects the recipe for
   computing the ice cover tendency from effective thickness tendencies. Include
   Ian Fenty's formula.
 - remove 'undef SEAICE_OCN_MELT_ACT_ON_AREA' which may now be achieved using
   SEAICEareaFormula.
 - simplify notations for the various d_HEFF/d_AREA terms.
o pkg/gmredi:
 - add Boundary-Value-Problem bolus transport (Ferrari etal, OM 2010) code
   from Christopher Wolfe (UCSD); add partial cell factor in vertical derivative;
   add a verification test-run (front_relax.bvp) to test GM_useBVP.
o pkg/seaice (seaice_growth v 1.111):
 - for SEAICE_DO_OPEN_WATER_GROWTH, replace Gael's implementation with Ian's.
 - the new SEAICE_DO_OPEN_WATER_MELT allows open-water air-sea heat fluxes to
   also melt ice.
o pkg/seaice:
 - McPhee formula for Ice-Ocean fluxes (provided by Ian Fenty).
 - can be used by #define MCPHEE_OCEAN_ICE_HEAT_FLUX in SEAICE_OPTIONS.h
o pkg/cheapaml:
 - from Nico Wienders: New version of this package.
o pkg/flt:
 - add CPP options to prevent floats to re-enter the opposite side of
   a periodic domain (default: keep periodicity)
o pkg/gmredi:
 - apply exchange to GM_PsiX,GM_PsiY to get valid values near CS-corners
   (needed for multi-dim advection).
 - switch on GM Advective form in global_ocean.cs32x15 and update output.txt
o model/src:
 - fix wrong re-setting of addMass array (ALLOW_ADDFLUID) for atmospheric run.
o tutorial_tracer_adjsens
 - extend to NLFS and replace maskC by hFacC
   (change reference output accordingly)

checkpoint62r (2011/01/24)
o testreport:
 - add option -deloutp (-do) to remove output file after successful run
 - add option -mfile (-mf) for MPI machile-file and for each test-exp,
   extract exact list of procs from this file ; adjust COMMAND by
   replacing TR_MFILE & TR_NPROC with local machile-file & Nb of MPI procs.
o pkg/ecco: replace old ineffective way of penalizing deviations from
  first guess (of obcs) with code by Matt Mazloff
o pkg/ctrl: add code that allows the use of ALLOW_OBCS?_CONTROL without
  exf/cal
  - ctrl_init: fix initialisation (computation of diffrec) for obcs-ctrl
    and handle case of obcs?period == 0
    Not affected by these changes: There is still an inconsistency in
    the computation of start/endrec for the obcs variables for ALLOW_CAL
    defined (see comment by Menemenlis, 7-Mar-2003)
  - make S/R ctrl_get_gen_rec return something meaningful even if
    ALLOW_CAL is not defined
  - ctrl_getobcs?: simplify code so that it does not need to use
                   S/R exf_swapfields
o testreport:
   allow to test MPI with different number of processors for each experiment:
   create file "SIZE.h.mpi" in each build dir.
   Note: update of "-command" argument not yet implemented.
o model/src, pkg/autodiff, pkg/ecco, pkg/seaice:
  alleviate the need for additional 3D tapes when using
  the non-inear free surface in the adjoint. This is done
  by adding an 'update' of hfacc etc. to their current
  value at the beginning of forward_step.F.
o pkg/seaice
  seaice_lsr: move stress-divergence computations out of outer pseudo-
  timestepping loop
o pkg/obcs/obcs_prescribe_read.F: move 'CALL OBCS_EXTERNAL_FIELDS_LOAD'
  up, so that the calls of the ctrl_* subroutines are really at the end
  of the routine.
o pkg/gmredi:
  allow to specify a 2-D horizontal map and a 1-D vertical profil
  as scaling factor for Isopycnal diffusivity (Redi) and GM diffusivity.
o pkg/seaice:
  move lsr iterations from seaice_dynsolver to seaice_lsr.
o pkg/seaice:
  reduce memory footprint of seaice mutldim advection tapes,
  by using a 2D tape independent of the generic_advdiff ones,
  and setting GAD_AREA=1 etc. rather than GAD_AREA=101 etc.

checkpoint62q (2010/12/29)
o model/src:
  - check horizontal grid-spacing for unset or zero/negative values.
  - change AD test hs94.1x64x5 to be truly a 2-D set-up.
o pkg/flt:
  - use (recent) mdsio S/R MDS_READVEC_LOC instead of local FLT_MDSREADVECTOR
  - precision of input and output files set according to readBinaryPrec
    and writeBinaryPrec (previously always 64.b), pickup remains at 64 bits.
  - initial float position from tiled file was not converted to index space
    (looks like a bug): fixed to make it similar to initial pos. global file.
o global_ocean.cs32x15:
   change SIZE.h of AD set-up to get same tiling as with MPI.
   Update output_adm, output_adm.thsice (pass@14) & output_adm.seaice (fail@11)
o model/src:
   add flag to control printing of domain fields (bathymetry, hFac ...) in
   ini_mask_etc (call to plot_fieds_xy*).
o pkg/thsice:
   if useEXF, some forcing fields are not valid in overlap: fixed by computing
   over the interior only + apply EXCH at the end (like with SEAICE advection).
o pkg/mdsio:
  - add 2 arguments to S/R MDS_PASS_R4/8toRL/S for overlap size of buffer
    to copy to/from, so that it can be used to replace MDS_PASS_WH_R8toRL/RS.
  - change barrier call for safe multi-threads access to 3-D shared buffer.
  - MDS_READ/WRITEVEC_LOC use buffers from MDSIO_BUFF_3D.h (instead of local ones)
  - replace call to MDS_PASS_WH_R4/8toRL with call to MDS_PASS_R4/8toRL and
    remove the 4 S/R MDS_PASS_WH_R4/8toRL/S.
o pkg/flt:
  - add fourth-order Runge-Kutta integration
  - add basic exch2 support (only 1 facet supported so far!)
o pkg/mdsio+rw:
  new S/R to read local (or tile independent) vector (read counterpart of
   mds_writevec_loc, and front-end write_glvec_rl/rs).
o global_ocean.cs32x15: additional input_ad.seaice experiment
    that uses pkg/seaice rather than pkg/thsice.
    (using multidim advection for seaice)
o towards more F95 syntax for array specification in namelist:
  - change "data.diagnostics" (data.ptracers was changed before checkpoint62p)
    of all verification experiments.
       e.g.:    line: fields(1,3)='ETAN    ','ETANSQ  ',
      was changed to: fields(1:2,3)='ETAN    ','ETANSQ  ',
  - finish adding "-DNML_EXTENDED_F77" to DEFINES list in pgf77 and g77 optfiles
o global_ocean.cs32x15: additional input.seaice experiment
    that uses pkg/seaice rather than pkg/thsice.

checkpoint62p (2010/12/17)
o pkg/thsice: rename (ad tape index) iicekey as ticekey, and move it
    to THSICE_SIZE.h to avoid conflict with pkg/seaice.
o pkg/seaice: add seaice_diffusion.f seaice_map_thsice.f to adjoint.
    allow for use of multim. advection in seaice adjoint.
o pkg/seaice: add diagnostics for snow precipitation and sublimation flux
  - first attempt to close budgets by taking into account the freshwater
    flux implied by the sublimation of snow and ice. So far only the
    volume budget is closed, turn on with soon-to-be-retired-again CPP-Flag
    SEAICE_ADD_SUBLIMATION_TO_FWBUDGET
o eesupp/src:
  new S/R with new option (NML_EXTENDED_F77) to change array specification
  from F95 standard to commonly accepted extended F77 form.
  This would allow to use F95 syntax in namelist (needed with gfortran 4.4.5)
  and to revert back to the original syntax (with -DNML_EXTENDED_F77)
  for less tolerant f77 compiler (e.g., pgf77, g77).
o globalFiles:
  commented out in parameter file "data" since it's not safe with MPI
  (e.g., wrong on aces); keep it if useSingleCpuIO=T (but not doing much
  in this case); no longer commented out in restart test (tst_2+2).
o add adTapeDir to specify a special directory where adjoint tapes are
  written/read (adread_adwrite.F). adTapeDir is specified in data/PARM05
  and cannot be used together with mdsioLocalDir.
o nesting pkgs:
  - packages_init_variables : put call to OBCS_INIT_VARIABLES in last position
  - update Gianmaria's Nesting pkgs (from Contrib/nesting_sannino)
  - add parameter files + utils dir + output from short run on beagle.
o pkg/seaice:
    fix seaice_growth.F store directives; update results of exp. lab_sea.ad
o pkg/seaice: explicitly store tsurfloc in seaice_solve4temp.F to avoid
  unnecessary copying in adjoint code, requires new parameter NMAX_ITER

checkpoint62o (2010/11/25)
o pkg/exf:
  - change CPP option EXF_VERBOSE to run-time logical param exf_verbose.
o pkg/seaice:
  - seaice_ocean_stress: split a loop for better vectorization of the
    adjoint code
  - seaice_growth.F: fix bug in conservation of freshwater connected to
    capping of heff, put contribution into d_HEFFbyNEG
  - replace irritating parameters SEAICE_latentWater/Ice and SEAICE_sensHeat
    by something more sensible (parameters that are what their name implies)
  - change some defaults, so that by default exf-parameters are used for
    things like rhoAir, cpAir,latent/sensible heat parameters, in order
    to reproduce the old results, many data.seaice now contain funny values
    for cpAir and latent heat of sublimation
o packages_readparms.F: move exf_readparms up in line so that
    exf-parameters are visible for other packages (e.g. seaice)
o debugMode & debugLevel=2:
  - differentiate between debugMode & debugLevel=2:
    debugMode: controls printing of debug messages (sequence of S/R calls).
    debugLevel: controls printing of algorithm intermediate results and stats.
  - remove "if debugLevel=2 => debugMode" but keep "debugMode =>  debugLevel=2";
    => allows to print debug-stats without all sequence of call messages.
  - switch control of debug print from debugLevel to debugMode in many S/R.
o pkg/obcs (obcs-sponge):
    fix bug that was introduced on Oct 25 (in dynamics.F v1.151): put back the
    call to OBCS_PRESCRIBE_EXCHANGES (need to exch gU,gV when using obcs-sponge)
o pkg/generic_advdiff:
  - record overlap minimum size for each advection scheme;
  - refine criteria on overlap minimum size;
  - check and stop (in gad_check) if overlap size is too small.
o pkg/obcs:
  - with ptracers: remove multiple calls to obcs_apply_ptracer (only done
    once, in ptracers_implicit.F)
  - with seaice: remove test on empty file name in obcs_apply_seaice (always
    apply OB values when tile has OB)
o model/src, coriolis setting:
  - integer parameter "selectCoriMap" (=0,1,2) replaces 3 logical
    useConstantF, useBetaPlaneF, useSphereF ; can now read coriolis from
    files (selectCoriMap=3) with any grid.
  - add parameter "fPrime" for constant second Coriolis coeff (default=0).
o pkg/seaice/seaice_growth.F:
    a few cosmetic changes that reduce the number of lines of code
o pkg/obcs: add boundary conditions following Stevens (1990)
  - the code follows old MOM/NAOSIM code
  - so far it is only implemented for the eastern and western boundaries
    and NOT for pTracers
o pkg/rbcs:
  - replace rbcsInIter by rbcsForcingOffset, the time in seconds at the
    beginning of the first rbcs forcing period.
  - add option rbcsSingleTimeFiles that makes rbcs read forcing data like the
    offline package, i.e., one file per time, labeled by iteration number;
    deltaTrbcs sets the timestep with which the data was generated;
    rbcsIter0 is the forcing iteration corresponding to rbcsForcingOffset.
  - rbcsForcingCycle=0 makes forcing non-cyclic.
  - make arithmetic safe for negative times and odd forcing periods.

checkpoint62n (2010/11/09)
o pkg/seaice:
    fix masking in free-drift S/R ; update results of exp. lab_sea.fd
o pkg/obcs:
   New S/R to copy tracer value from the OB location to narrow band region
    (width = same as overlap) beyond the OB: preserve OB value (needed for
    high-order scheme) which were overwritten by EXCH call if in overlap
    region. Applied to theta, salt, ptracer and advected seaice variables.
   With seaice: use maskInC in similar way as in gad_advection.F,
    in seaice_advection.F and advect.F.
   Update output of experiment seaice_obcs and change exp4 to test OBCS with
    4th order Adv.Scheme. for pasive salt and ptracer.
o tools/genmake2:
  - when looking for an optfile (not specified), only search for Fortran compiler
    (remove sym-link test + setting of CPP + makedepend check + C-compiler check)
  - in get_fortran_c_namemangling: use "$CC $CFLAG" to compile C test programm
    (instead of "$MAKE genmake_test.o" since an existing Makefile can be wrong)
  - set default for CPP to "cpp -traditional -P" (was the case without specifying
    an optfile, but otherwise default was just "cpp".
  - comment out PLATFORM=$p_PLATFORM (no idea where p_PLATFORM comes from)
  - when "CC" is not set in the optfile, look for possible C compiler
    (instead of just setting CC=cc)
  - put back version v.169 modif (from 2008/02/15), was dropped in v.173 changes:
    => add a ".F" to ".o" rule for source files with no "#include" (such as
       port_rand.F); otherwise, default ignores FOPTIM and just uses FFLAGS.
  - move gfortran before g77 in list of possible Fortran compiler (consistent
    with reference compiler switch from g77 to gfortran)
o pkg/seaice:
  o remove SEAICE_OLD_AND_BAD_DISCRETIZATION-code, add a test to
    seaice_check that stops the model, when the CPP flag is used.
  o seaice_growth.F: make capping of ice volume conserving by returning the
    capped ice as freshwater to EmPmR. This does not change the verification
    experiments but will change runs where the capping is acutally active
o change reference platform+compiler from faulks+g77 to baudelaire+gfortran
  (except the 2 fizhi test exp.); update output of exp.: bottom_ctrl_5x5,
     global_ocean.cs32x15 (icedyn, thsice, AD thsice), global_ocean_ebm (AD),
     lab_sea (fd, hb87, salt_plume), MLAdjust (3/5) and vermix (dd)
o tools/genmake2:
  - merge genmake_warnings & genmake_errors into 1 log file: "genmake.log")
  - change DUMPSTATE default to false (can use "-ds" option to switch it to T)
  - clean previous genmake log files before anything else.
  - change Makefile to remove testreport log files (*.tr_log) and genmake log
    files only with "CLEAN" target (instead of "Clean");
o pkg/generic_advdiff:
  Change OBCS in multiDim advection (gad_advection.F):
   Use maskInC to prevent intermediate update of tracer-field in OB regions,
   thus keeping current-time-step OB values; and remove the call to OBCS_APPLY
   which were applying future time-step OB values.
  This way, all explicit calculations use current-time-step OB values
   (simpler and more consistent).
  Affects results when set-up uses time-varying OBC and multi-dim advection;
   update output of experiment seaice_obcs.
o pkg/seaice:
  move OPTIONS (formerly locally defined) to SEAICE_OPTIONS.h:
   this includes SEAICE_GROWTH_LEGACY (+ SEAICE_DO_OPEN_WATER_GROWTH &
     SEAICE_OCN_MELT_ACT_ON_AREA ) and SEAICE_SOLVE4TEMP_LEGACY.
  Default (pkg/seaice/SEAICE_OPTIONS.h) is to define SEAICE_SOLVE4TEMP_LEGACY
   but leave SEAICE_GROWTH_LEGACY undef ; For now, keep verification exp
   unchanged (SEAICE_GROWTH_LEGACY defined in */code*/SEAICE_OPTIONS.h)
o pkg aim (2010/10/26):
  - Introduce ALLOW_INSOLATION, moving toward a more general incoming solar radiation
    formulation with obliquity, eccentricity, ... as run-time parameters,
  - Introduce diagnostics for top-of-the-atmaophere incoming solar radiation and
    upward shortwave radition at the surface (all-sky and clear-sky).
o pkg/obcs:
  - writing sections with globalFiles=T does not work: switch to tiled-files
    when writing sections for OBCS (change pkg/rw/write_rec.F accordingly).
  - fix index bug (OB_Ie -> OB_Iw_) in obcs_apply_uvice.F
  - apply OBCS_SEAICE_COMPUTE_UVICE to both uice and vice at all obcs

checkpoint62m (2010/10/21)
o pkg/seaice: vectorize seaice_solve4temp.F
  - move iterations loops outside of i/j-loops
  - requires 2D arrays for TB and effConduct
  - add 2D iceOrNot to replace HICE_ACTUAL.GT.0, as HICE_ACTUAL is
    modified in this routine
  - a little bit of clean up, adjusting indentation, etc.
  - replaced a few TEN**a by exp(a*log(10.)) in new code for better
    performance and '**TWO' by '**2' (because TWO is a float),
    replaced ONE, ZERO
o eesupp/src:
   fix flow dir for exch1_z_RX_cube, exch1_uv_RX_cube & exch1_bg_RX_cube
o pkg/seaice/seaice_growth.F
  Revision 1.89 of seaice_growth.F completes the overall october 2010 revision and
  merging process. The merged routine has two branches, and one activates the 'evolution'
  branch by setting SEAICE_GROWTH_LEGACY to undef (at the top of the routine for now).
  In summary, here is what the '10/10 revision' did consist of
    part 1: seaice_growth.F revisions 1.71 to 1.75
      - Preliminary seaice_growth.F clean-up, keeping test results strictly unchanged.
        The emphasis here was on improving readability (e.g. by trying to use meaningful
        variable names) and modularity (e.g. by adding arrays to store heff etc. updates).
    part 1.5:
      - revising the lab_sea experiment to make it a more useful (i.e. stable
        and representative of an actual model run). This was done by generating a
        (winter) pickup to start from, switching back the main experiment dynamic
        solver from evp to lsr, having one of the experiments use the free drift solution.
    part 2: seaice_growth.F revisions 1.76 to 1.85
      - Sorting out hard-coded constants that prevented heat and fresh water conservation.
      - Sorting out the various fields units and sign (set early on and reset at the end)
        to avoid numerous scalings/re-scalings. By v1.85 the basic unit for ice, heat and
        fresh water stock is 'effective ice meters', and >0 implies more ice/snow.
      - Using tendency terms arrays (d_HEFF* etc.) to alleviate remaining code locks,
        and simplifying logical expressions to further improve readibility.
    part 3: seaice_growth.F revisions 1.86 to 1.89
      - Re-organize the blocks of code more logically.
      - Merging the '_if.F' pieces that add something new.
o pkg/thsice:
  - vectorize thsice_solve4temp and thsice_get_exf.
    Problem: thsice_solve4temp has an unvectorizable statement that
    might also be problematic for TAF
  - thsice_get_exf: add the ALLOW_BULK_LARGEYEAGER04 CPP-flag. This
    does not change the verifcation experiment, but will change all
    experiments that have this flag undefined (not tested in verification);
    a little reorganization to save a few 2D fields and recomputations
  - 1st step of revisiting thsice adjoint (major recomp. sorted out)
  - 2nd step:  fix some store dirs
    o seems to work somewhat, i.e. using ifort but not g77
    o likely cause are incomplete init. or recomputation
    o start verification/global_ocean.cs32x15/input_ad.thsice
o pkg/obcs: add support for exch2
  - the position of the boundary and prescribed values are specified using
    a global domain with exch2 facets stacked
    - in x for N,S boundaries (like W2_mapIO=-1)
    - in y for E,W boundaries (so E,W boundaries do not overlap)
o pkg/mdsio: add support for writing global sections with exch2
    file layout is as for obcs described above:
    - for x-z sections, facets are stacked in x (like W2_mapIO=-1)
    - for y-z sections, facets are stacked in y
o pkg/thsice:
   - change a few routines for better vectorization: thsice_albedo.F,
     thsice_step_temp.F, and in thsice_calc_thickn.F. Results are
     not affected, but in particular the latter routine has changed
     dramatically (not necessarily easier to read now).
   - re-arrange calculation in THSICE_SOLVE4TEMP: move outside of i,j loops
   iteration loop and call to S/R THSICE_GET_BULKF & THSICE_GET_EXF.
o verification/lab_sea:
  - overhaul of the forward model experiments. The main motivation
    for this revision is that lab_sea has proven quite fragile (when
    changing the sea-ice code, and switching platforms) to a point
    when failures were very hard to attribute to specific code problems.
  - the suspected reason for this fragility is noise amplification by evp so,
    to start with, we decided to replace evp with lsr in the main experiment.
  - the input.lsr experiment thus became obsolete and was removed.
  - it was replaced with the input.fd experiment that uses an
    analytical "free drift" solution as the ice velocity field.
  - Taken together, input (lsr), input.fd (free drift) and input.hb87 (evp)
    will hopefully allow us to discriminate problems due to dynamic solvers
    from problems due to the thermodynamic code. input.salt_plume (lsr) allows
    us to test additional options, along with the salt plume package.
  - Finally a pickup was generated (at the end of a one year run) to
    make the tests more representative of an actual model run. Previously
    the tests starting point was a 1m thickness of ice everywhere.
o pkg/seaice:
  - introducing S\R seaice_freedrift.F that compute the
    analytical solution to an approximate ice momentum
    equation (i.e. the simple stress/coriolis balance).
  - define SEAICE_ALLOW_FREEDRIFT to trigger the computation
    of the free drift velocity field, and enable its use.
    To actually use the free drift solution as the model ice
    velocity field set SEAICEuseFREEDRIFT to .TRUE. in data.seaice.
o move "useOASIS" from PARAMS.h to EEPARAMS.h and read it from "eedata"

checkpoint62l (2010/10/04)
o pkg/seaice:
  -fix the USE_ORIGINAL_SBI version (for variable freezing point);
  -use "celsius2K" in SEAICE_VARIABLE_FREEZING_POINT and in new
   version (with USE_ORIGINAL_SBI undef);
o add hooks for new packages OASIS, the package will follow
  (hooks exclude the seaice pkg for now)
o pkg/autodiff: ALLOW_AUTODIFF_WHTAPEIO
  Option to use mdsio_read_whalos.F/mdsio_write_whalos.F,
  rather than mdsio_readvector.F/mdsio_writevector.F, within
  adread_adwrite.F to read/write adjoint-related tapes to disk.
o eesupp and pkg/mdsio: ALLOW_WHIO
  Option to write/read 2D fields to files including tiles halos.
  The main purpose is for adjoint related "tape I/O".
  The secondary purpose is for debugging phases.
  A word on those rather specifically intended purposes.
  The code was meant to be stripped down to the bare minimum.
  Typically, there is a unique and basic mapping to the global
  buffer (tile by tile, then proc by proc, then level by level), and
  byteswaps and meta-files are omitted. Indeed the (*_WH*) code is not
  meant to generate user friendly outputs of various shapes and forms.
  Rather it is intended, for the knowledgeabale developers,
  to be largely independent of the many mdsio options, to allow
  outputs of tiles+halos in debugging phases and in adjoint runs,
  and to allow some flexibility in tuning (adoint) I/O depending on each
  file system behavior. With regard to tuning, most of the potential knobs
  (to leave files open, to allocate the I/O indep. of usesinglecpuio,
  to specify directories, to specify the typical size of I/O calls, etc.)
  are not yet included, and will be added if they prove useful.
o pkg/seaice:
   fix uninitialised arrays in USE_ORIGINAL_SBI version of seaice_solve4temp.F
o pkg/seaice:
   new S/R seaice_solve4temp.F: this is the merged version of Ian Fenty
   code (seaice_budget_ice_if.F) which enable to recover old standard
   code (seaice_budget_ice.F) when option USE_ORIGINAL_SBI is defined.
   temporary: add "#define USE_ORIGINAL_SBI" at the top of seaice_solve4temp.F.
o model/src (rStar):
   use simple average (not area weighted) of rStarFac at U,V point when using
   vectorInvariant and selectKEscheme=1,3 (consistent with mom. vertical advection)
   update output of exp. fizhi-cs-32x32x40 and fizhi-cs-aqualev20.

checkpoint62k (2010/09/17)
o adjoint
   * changed verification/global_ocean.cs32x15 ; adjoint now tests
     Adams-Bashforth 3 + NLFS + RSTAR
   * some more modifs required for ECCO-GODAE v4
o pkg/seaice
   add SEAICE_AGE_VOL option to use volume instead of area for
   integrating SEAICE_AGE
o model/src:
   first check-in of sigma & hybrid-sigma coordinate code ; also includes
   non-linear free-surface parts ; but pressure-gradient not yet coded.
o pkg/ptracers:
   option for ptracer to convert Salt Relax into additional EmP.
    tested in exp. global_ocean.90x40x15.dwnslp (update output)

checkpoint62j (2010/08/25)
o pkg/ggl90:
   other minor changes: remove 3-D temp array gTKE (+ add argument myIter)
o pkg/dic: car_flux.F, phos_flux.F
  - reduce number of exp-calls in order to improve performance
  - clean up a little (replace fields by their macros, etc., fix
    typo in CPP-flag)
o pkg/ggl90: minor changes
  - GGL90diffKrS was removed --> always use GGL90diffKr
  - GGL90viscAr was removed --> replaced with GGL90viscArU, GGL90viscArV
  - hack of mxlMaxFlag=2 --> ensure mixing between first and second level
    (commented out for now)
  - change in max/min operations to ensure that smoothing is ok
  - smoothing of GGL90viscAr was moved to ggl90_calc.F (as done for GGL90diffKr)
  - always use diffKrNrT as background profile (i.e. never use diffKr field)
o pkg/cfc: bug fix, AREA(i,j,1,bi,bj) -> AREA(i,j,bi,bj)
o pkg/dic:
  - model/src/impldiff.F: if TARGET_NEC_SX, extend loop ranges for better
    vectorization
  - small bug fix in insol for the unlikely case of a cartesian grid
  - towards vectorizing the dic package: bio_export.F, car_flux.F, phos_flux.F
    + now vectorize, which also removes adjoint recomputations;
    + replace integer maksp1 by _RL maskp1
    + replace a**x by exp(x*log(a)) in phos_flux.F for speed

checkpoint62i (2010/07/21)
o pkg/flt:
  - with OBCS: stop floats which enter the OB region
o model/src:
  - use tempVertAdvScheme & saltVertAdvScheme (instead of horizontal ones)
    for implicit vertical advection.
o pkg/seaice:
 - account for melting in seaice age evolution.
 - remove double counting of seaice ridging effect on seaice age.

checkpoint62h (2010/06/18)
o pkg/exch2:
 - remove exch2_*xy_rx files: call was replaced with exch2_*3d_rx(myNz=1).
o tools/genmake2
  - remove "-pdefault" option: redundant with the use of "packages.conf";
  - remove file pkg/pkg_default : set the default as a pkg group
    ("default_pkg_list") defined in pkg/pkg_groups;
  - fix for case pkg/pkg_depend is missing (was hanging before);
  - add option "-pgroups" to specify a different pkg_groups than the default.
o verification/adjustment.cs-32x32x1:
   add a "minimal" set-up test (code_min & input_min) which only compiles
   eesupp/src and the 2 pkgs (exch2 & debug) which don't need model/src & inc.
o tools/genmake2
  - extend pkg_depend rules to model & eesupp (e.g., if model depend on [pkg]))
  - fix details of checking for mnc & profile pkg when NetCDF is unavailable.
o pkg/exf: merge exf_bulk_largeyeager04 into exf_bulkformulae because these
  files are nearly the same anyway.
  Step 1: make exf_bulkformulae look like exf_bulk_largeyeager04:
   - redefinition of tau(i,i) (by a factor of ustar)
   - 1./exf(Const/T) -> exf(-Const/T) (big change in the results)
   - replace rhonil by rhoConstFresh in computation of evap (bug fix)
   - replace u/vstress=tau*rd*ws*cw by tau*rd*u/vwind (changes results)
   - replace
     rd(i,j)= rdn(i,j)/(exf_one - rdn(i,j)/karman*psimh )
     shn    = sh(i,j,bi,bj)*rd(i,j)/rdn(i,j)
     by
     shn    = sh(i,j,bi,bj)/(exf_one - rdn(i,j)/karman*psimh )
     (changes results)
   -> exf_bulkformulae v1.22,
      update verification experiments lab_sea, offline_exf_seaice, seaice_obcs
      (lab_sea: output.hb87.txt 1.11, output.lsr.txt 1.25, output.salt_plume.txt 1.13,
                output.txt 1.63
       offline_exf_seaice: output.seaicetd.txt 1.7
       seaice_obcs: output.txt 1.10)
  Step 2: do the actual merge and remove exf_bulk_largeyeager04.F
   -> exf_bulkformulae v1.23,
      unfortunately requires updating lab_sea.salt_plume (6 matching digits),
      and global_ocean.cs32x15.icedyn (only 11 matching digits)
  Also update output_adm of exp. lab_sea (all 4) and offline_exf_seaice.
o adjoint of exch-1:
 - pass high-level EXCH S/R through TAF (eesupp/src/exch_ad_diff.list)
   (note: was already like this when using EXCH-2) and remove flow dir
   and hand-written AD version of high-level EXCH S/R (pkg/autodiff);
 - provide flow-dir for low-level exch1 S/R (eesupp/src/exch1_ad.flow);
 - update pkg/exch2 diff list.

checkpoint62g (2010/05/19)
o eesupp/src (exch-1):
 - split exch_rx.F into Forward S/R (exch1_rx.F) and Adjoint S/R (exch1_rx_ad.F)
   and remove argument "simulationMode"; same thing for all exch_*rx_cube.F
   (renamed to exch1_*rx_cube.F).
 - change accordingly exch_*_rx.template and AD version in pkg/autodiff
   to call new exch1 S/R ; update Makefile and .cvsignore.
 - replace call to exch2_xy_rx S/R with exch2_*3d_rx(myNz=1) (will remove
   exch2_xy_rx later)
  Note: after updating your code, need to run "make clean" in eesupp/src
o test experiment bottom_ctrl_5x5:
   new output_adm.txt with fewer grdchk & less monitor output.
o model/src:
  remove the call to ini_cori in initialise_varia.F (just keep the usual one
   in initialise_fixed.F). More consistent with coriolis & horizontal grid
   beeing treated in the same way (ini_grid is not called a 2nd time).
o pkg/exf:
  - rewrite exf_bulk_largeyeager04.F for better vectorization, changes
  global_ocean.cs32x15/input.icedyn (11 digits of agreement), updated
  - fix adjoint (used worked for ALLOW_ATM_WIND defined, works for this now)
  - cosmetic changes to exf_bulkformulae.F to make it look more like 
    exf_bulk_largeyeager04.F 
o eesupp/src (exch-1):
  - Fix AD EXCH code for 2-D domain special cases (Nx=1 or Ny=1).
  - Separate buffer filling and MPI sending: allow EXCH-1 to work for local
    array (non-shared) when using MPI+MTH. Also reduces number of BARRIER
    (even without using MPI).
  - Message mode: move RecvAck setting (indicator of buffer being ready)
    from send_put to recv_get S/R (was useless before, but not sure if
    it's much more useful now);
  - Switch the order of sync: MPI-proc 1rst and then threads;
  - take out spin-waiting code (#undef EXCH_USE_SPINNING), use BARRIER instead.
  - fix AD code for communication mode ='get' (but not used).
o model/src:
  initialise dPhiHydX,dPhiHydY inside calc_grad_phi_hyd.F (so that TAF does
  not drop it in S/R mddynamics, producing NaN in hs94.1x64x5 AD-test exp).
o utils/matlab/rdmnc.m: adapt to be able to use the generic matlab netcdf API
o pkg/ctrl: require a specific set of control variables and exf-flags for
  adjoint of seaice (stop in ctrl_check.F if conditions are not satisfied)
o model/src:
 a) 1rst version of a new driver S/R to turn-off output freq and flags after the
   1rst forward sweep, to avoid over-writing output files during recomputations
   recomputations (& grdchk); called from cost_final.F (& ctrl_init_ctrlvar.F ?)
 b) 2nd version:
  - add specific pkg S/R for seaice & ptracers (called from S/R TURNOFF_MODEL_IO);
  - switch-off more output flags (exf_monFreq, chkPtFreq, dumpInitAndLast,
     writePickupAtEnd) + seaice & ptracers output;
  - do not switch off MNC flags (otherwise, won't get admonitor netcdf file)
o model/src:
  - new S/R rotate_uv2en_rl (..._rs) that rotates vector fields.
o pkg/exch2:
  - remove "simulationMode" from arg. list of S/R EXCH2_RX1,2_CUBE ;
  - add argument "signOption" to EXCH2_RX1_CUBE (will be needed for SM exch).
o pkg/autodiff & exch2:
  process exch_uv_agrid_3d_rx.f & exch2_uv_agrid_3d_rx.f through TAF
  (for now, only if ALLOW_EXCH2 is defined).
o pkg/autodiff:
  - include PACKAGES_CONFIG.h in exch*ad.flow & exch*ad.F
    (not supposed to be in CPP_OPTIONS.h) to get ALLOW_EXCH2 defined correctly.
   + clean-up comments (_RS is not always real*4)
  - fix bug in ADEXCH_UV_3D_RX (without EXCH2, was calling the forward exch S/R)
  - add a stop in ADEXCH_UV_AGRID_3D_RX if trying to use it with EXCH2:
    was calling a forward exch2, which is wrong ; used in SEAICE & EXF pkgs.
o testreport (AD-tests):
  no longer link files from dir "../input" (1rst link files from
  "../input_ad.[xx]" if secondary test "xx" and then from "../input_ad")

checkpoint62f (2010/04/29)
o model/src/the_main_loop.F:
  adjust store directives for seaice evp and multicategory according to
  pkg/ecco/the_main_loop.F
o adjoint:
  global_sum_ad was incomplete (noted many times by many people ;)
  nice description by Jean U. as follows:
  * allreduce(var) in global_sum.F can be interpreted as
    reduce(sum) followed by broadcast of sum.
  * The adjoint of that is
    sum(adjoint) followed by broadcast(summed adjoint value)
    or in other words, allreduce(sum, adjoint vars)
  We were missing the sum(adjoint)!
  Benign, except(!) for "global" scalars appearing in tile loops (bi,bj)
  (noted by J.M. Campin, e.g., in cost_ssh_mean, variable offset).
  The fix should produce 16-digit accuracy between
  single-CPU multi-tile (e.g. nSx=2, nPx=1) and
  multi-CPU single-tile (e.g. nSx=1, nPx-2)
  We'll probably change this yet again shortly
o eesupp/src:
  - fix global_sum_r4 (wrong from previous modif in Jun 2009; ever used ?)
o pkg/icefront
  - ALLOW_SUBGLACIAL_RUNOFF option adds capability for time-evolving
    specification of addmass array based on a 2D field, which is added
    at bottommost wet level at each horizontal location.
o model/src:
 horizontal grid initialisation (other than curvilinear): add code for Exch2 IO
 layout; (not always compatible with delX,delY setting; commented out for now).
o pkg/exch2:
 change tile to processor setting (case nSy*nPy > 1): allows default model mapping
 (myX and myYGlobalLow) to be used for simple (1 facet, no blank tile) config.

checkpoint62e (2010/04/15)
o pkg/obcs:
  - fix wrong index in OBCS_SPONGE_V for Eastern-OB (reported by David Hebert).
o pkg/dic:
  -fix bug in fe_chem.F for multi-tile (nSx*nSy > 1) set-up;
    (note: not presently tested in any forward verification exp.)
   update tutorial_global_oce_biogeo AD output file.
o pkg/exf:
  - account for the variation of albedo as a function of zenith angle
    by defining ALLOW_ZENITHANGLE in EXF_OPTIONS.h
o build_options:
 - rename "linux_ia64_ifort+mpi_ice_nas" to "linux_amd64_ifort+mpi_ice_nas"
o pkg/dic:
  change DIC atmos-CO2 box (method 3, dic_int1=3) initialisation & restart:
  - use binary pickup file for restart;
  - initialise atmos-CO2 box from dic_pCO2 parameter;
  - fix multi-threaded.
o pkg/rbcs:
 - clean-up RBCS code: add RBCS_OPTIONS.h file ; fix multi-threaded ;
   change (+ fix IO calls) type of array RBC_mask from _RL to _RS.
 - add RBCS to exp4 passive tracer 01 (rbcs was previously untested)
   and update output.txt
o pkg/kpp:
 - add diagnostics for KPP non-local flux of Temp, Salinity and pTracers;
 - change diagnostic of KPP non-local term: output average of KPPghat*KPPdiffKzS
   (= ratio of KPP non-local (salt) flux relative to surface-flux) when
   using pkg/timeave & pkg/diagnostics (diag 'KPPghatK' replaces 'KPPghat ');
 - change pkg/offline to read-in average KPPghat*KPPdiffKzS from file
   KPP_ghatKFile (instead of the average of KPPghat from file KPP_ghatFile).
o pkg/offline:
  fix bug in S/R OFFLINE_FIELDS_LOAD regarding surfaceForcing conversion factor
  (bug was added in version 1.10 on 2007-08-23).
o pkg/offline:
  - no need to specify periodicExternalForcing, etc ... to use offline pack
  - offline input files no longer just single prec --> parameter offlineLoadPrec
o verification/lab_sea:
  change AD test to multi-tile setup and update all 4 AD output.
  NOTE: while cost function values remain very similar,
  gradients are very different, although gradient checks are self-consistent
  Should try to get to the bottom of this (cost function summation order?)
o pkg/dic:
  in carbon_chem.F, replace log10 (AUTODIFF) with explicit form to avoid
  a weakness of TAF that drops part of double precision in log10 derivative.
  <= changes removed since problem has been fixed in current TAF version 1.9.71
  update AD output of exp. tutorial_dic_adjoffline & tutorial_global_oce_biogeo.
o pkg/ecco:
  add missing "_d 0" in cost_readers.F, cost_readtopex.F & cost_readtopexmean.F
  update all 4 lab_sea AD output.

checkpoint62d (2010/03/22)
o build_options:
  remove '-r8' (and '-i4') from linux_*pgf and linux_*ifort optfiles.
o remove unbalanced quote (single or double) in commented line of source code
  (may cause some warning with some preprocessor/makedepend versions).
o pkg/seaice:
  fix seaice_model.F for adjoint (gael) and update AD results of experiments
   lab_sea (std + evp + noseaicedyn) and offline_exf_seaice.
o testreport:
  add option '-runonly' (short: '-ro') to just do the run part (without make).
o eesupp: remove JAM communication code (obsolete).
o add option to genmake2 & testreport to switch "_RS" type to "real*4"
  (if allowed in CPP_EEOPTIONS.h); update default CPP_EEOPTIONS.h and return 
  to default CPP_EEOPTIONS.h for exp. inverted_barometer & solid-body.cs-32x32x1
  (update also the output).

checkpoint62c (2010/03/02)
o tools/build_options :
   move (some) old optfiles from build_options/ to build_options/unsupported/
o model/src and pkg/exf
   surface relaxation -- separating data and data.exf options
   The point is to ensure that we specify the surface relaxation
   either in data or in data.exf (but not half and half) and to 
   avoid an accidental relaxation to 0 (which happened if a time 
   scale was specified but the file name was left empty)
o model/src model/inc and pkg/mom_common
   ALLOW_3D_VISCAH/ALLOW_3D_VISCA4 => 3D specification of Viscosity
   => addition to the viscosity field as computed by others schemes
o tools/build_options: 
  - rename "_generic_mpi" -> "+mpi_generic" (like other "+mpi" optfile)
    but keep the former optfile for few weeks for smooth transition
o pkg/ecco
  - allow user defined cost function contributions
     CPP: ALLOW_USERCOST_CONTRIBUTION
     USAGE: compute contributions in cost_usercost_all.F
  - note: this is identical to what ALLOW_GENCOST_CONTRIBUTION once was.
      the two options are complementary.
o pkg/smooth
  - migration from contrib to the main repository

checkpoint62b (2010/01/26)
o pkg/monitor:
  - change back mon_printstats_rl.F & mon_stats_rl.F and add a stop 
    (in case someone forgot to update customized pieces of code)
o nonHydrostatic:
  - add Non-hydrostatic free-surface form (selectNHfreeSurf=1)(not fully tested);
  - add a simple 2-D experiment (short_surf_wave) to test it.
o pkg/icefront:
   adding the shell of, and the hooks to, a new package that
   will model melting and freezing of vertical glacier ice fronts
o momentum:
  add diagnostics of momentum tendency from Hydrostatic pressure gradient
   (without surf.pressure term: would need a 2nd filling since implicit term).
o add 3 "_d 0"s so that fizhi compiles with xlf on iblade, and replace
  two " &end" by " &" (in fizhi-cs-*) because S/R NML_SET_TERMINATOR
  cannot deal with the former
o cleaning:
  - remove all (except OpenAD) old TLM output from results_ad dirs.
  - remove unused S/R (MDSWRITEMETA, DIAGNOSTICS_ADD2LIST, old DFILE IO S/R)
  - comment out maskH definition (replaced by maskInC)
o pkg/monitor:
  - change mon_printstats_rl.F & mon_stats_rl.F (were similar to mon_writestats_rl
    & mon_calc_stats_rl) to be the RL equivalent of mon_printstats_rs & mon_stats_rs.

checkpoint62a (2010/01/15)
o model/src:
  - bottom pressure diagnostic: correct for r* (when nonlinFreeSurf >= 4)
o pkg/diagnostics:
  - add optional level number diagnostics (i.e., level number to be define
    explictly with S/R DIAGNOSTICS_SETKLEV) with parser-code(10)="X".
  - strictly check for valid parser-code(10) ;
  - check if adding diag to the list from the right place.
o pkg/longstep:
  - change parameters and fix tracer conservation with rstar/nonlinear free surface
o diagnostics:
 - in all pkgs, replace remaining calls to old S/R DIAGNOSTICS_ADD2LIST with newer
   S/R DIAGNOSTICS_ADDTOLIST ; fix seaice VICE diagnostics.
o pkg/diagnostics:
 - Add option for writing vertical integral (sum of selected levels) of an output
    field instead of writing output field levels. Activate this option on a per
    output-file basis, by setting the 2nd character of fileflag to 'I'.
 - Add field-specific information relative to level integral in 3rd postion
    of parser diagnostics code (gdiag): " "=cumulate levels, "R"=integrate
    vertically (x level-thickness x hFac), "r"=same but without hFac.
o do_the_model_io:
  - pass end-of-model-run flag as argument, from forward_step to diagnostics_write:
    in case useSIGREG, will write (averaged) diagnostics (if dumpAtLast) before
    writing pickups and stopping.
o pkg/diagnostics (for now, only with mdsio):
  - write time information to meta file (and modify accordingly rdmds.m) :
    time-averaged diagnostics output: write starting and ending time of the
    time-averaging interval ; snap-shot diagnostics output remains unchanged;
o pkg/timeave:
  - S/R TIMEAVE_NORMALIZ: change size of cumulated-time array (was previously
    always Nr), now assumed to be equal to number of levels of averaged field;
    only used for DIC_COST monthly mean arrays: this fixes dic_aver_final.F
o pkg/sbo:
  - fix ocean bottom pressure global-average & 2-D time-ave output (was
    neither initialised nor filled).
  - add starting iteration in suffix of global-average output file
    (to avoid over-writing the file after a restart)
  - use standard MDSIO pkg S/R instead of SBO_WRITEVECTOR (fix byte-swap Pb).
o time-average:
  - use simple cumulative-time array (no k index) in all pkgs: {PKG}_timeAve(bi,bj)
    (pkgs: aim_v23, bulk_force, dic, gmredi, kpp, land, ocn_compon_interf,
     ggl90, my82, opps, pp81, ptracers, sbo, seaice, shelfice, thsice)
    this fix DIC_COST cumulative-time array (previously: bi,bj,k)
  - fix 1rst call (nIter0) snap-shot output and accumulation (pkg/shelfice)
  - fix missing accumulation for pkg/opps.
  - cumulate fields only if doing time-ave output ({PKG}_taveFreq > 0)
     (pkgs: ptracers, kpp, ocn_compon_interf, ggl90, my82, pp81);
  - fix initialisation of time-ave vars and do only full time-step increment
    (i.e.: no first & last "half time-step") (pkgs: ggl90, my82, opps, pp81);
o pkg/layers:
  - use standard RW pkg S/R to write the output
    and remove local write_fld version (which had a problem).
  - use simple cumulative-time array (no level index) to fix time-ave S/R calls.
  - fix LAYERS_CALC argument list.
o pkg/timeave:
  - store cumulative-time in a simple tiled array (drop the level index)
  - add new S/R (TIMEAVE_NORMALIZE) which uses simple cumulative-time array.
o pkg/ocn,aim_compon_interf
  - changes for multi-threaded coupled run. (tested with ifort-11 on danton)

checkpoint62  (2009/12/23)
o switch on useOBCSbalance in tutorial_plume_on_slope exp. and update output.
    (was not previously tested in any other exp.)
o pkg/monitor:
  - clean-up _RL/_RS version: add specific S/R for statistics with mask & volume:
    mon_writestats_rl/s,F mon_calc_stats_rl/s.F ; will keep the old one
    (mon_printstats_rl/s,F mon_stats_rl/s.F) just for bare statistics.
  - use hFac & 2-D mask (instead of 3-D mask + hFac in previous mon_stats_rl.F).
  - change del2 calculation.
  - use interior masks (instead of maskH, <- to be remove).
  - shorter monitor suffix for forcing stats ("forcing" instead of "extforcing").
o mask & obcs:
  - define 2-D "interior" masks (i.e., zero beyond OB) at 3 locations (C, W & S).
  - move global area computation from ini_masks_etc.F to ini_linear_phisurf.F
    (called after packages_init_fixed)
o pkg/obcs:
  - move bi,bj loops into obcs_calc, so obcs_prescribe_read is called only once.
    Fixes bug in obcs+exf with nSx*nSy.GT.1
  - fix multi-tile handling in obcs balance code
o nonHydrostatic:
  - Implement AB-3 for non-hydrostatic vertical momentum ;
    (change ordering of var. stored in pickup file when using NH)
  - move NH code from solve_for_pressure.F to 2 new S/R: PRE_CG3D & POST_CG3D.
  - add 2-D field to store Hydrostatic Surface Pressure adjusment from cg3d_x
    (in prep. for new NH free surface form).
o pkg/obcs:
  add files & OB-variables for wVel (Non-Hydrostatic) with useOBCSprescribe
o model/src:
  fix 2-D solver initialisation for deep-atmosphere (p-coord) with topography

checkpoint61z (2009/12/01)
o nonHydrostatic:
  Fix missing vertical flux of vert. momentum near surface (k=1). This fixes
    a spurious source of energy in simple baroclinic adjusment test case.
  Update all non-hydrostatic exp output.
o model/src (3-d solver):
  Change again 3-D solver free-surface RHS term when exactConserv=T:
    simpler, consistent with exactConserv, and works with implicDiv2Dflow < 1
    (which was not the case with previous formulation).
  To recover previous version, just reset "oldFreeSurfTerm" to previous value.
  Affects results of exp. global_ocean.cs32x15.viscA4 & hs94.cs-32x32x5.impIGW.
o nonHydrostatic:
  - compatible with implicDiv2Dflow < 1 ; + implement implicit factor
    for Non-Hydrostatic pressure gradient (similar to implicSurfPress).
  - change 3-D solver to work with r* (for now, only with linear free-surf.)
  - add few debug diagnostics (cg3d_x, residual)
o model/src:
  fix missing EmPmR in 3-D solver RHS (was in cg2d_b but missing in cg3d_b).
    update output of exp. global_ocean.cs32x15.viscA4
o update output of exp. global_ocean.cs32x15.icedyn after removing
  #define SEAICE_OLD_AND_BAD_DISCRETIZATION from SEAICE_OPTIONS.h
o add entry points for Gianmaria's Nesting pkgs (from Contrib/nesting_sannino)
o mnc: add horizontal grid coordinates (XC,YC) and (XG,YG) to netcdf output 
  for complex grids, for now only to "state", "adstate", "adexf", "adseaice"
o model: add Christopher Wolfe's implemetation of the single reduction cg2d
  (d'Azevedo, Eijkhout, and Romine, 1999) with CPP-flag ALLOW_SRCG and
  runtime flag useSRCGSolver. Modify verification experiment global_with_exf 
  to test this code
o pkg/cd_code:
  Change defaut D-grid time-stepping to get the same for D-grid momentum as for
   C-grid momentum. D-grid velocity used to be stepped forward in time with
   Adams-Bashforth only on surface pressure term. Tests show that using AB on
   D-grid coriolis term improves stability (as expected from CD-scheme paper).
  To reproduce old results, add 2 options (in CD_CODE_OPTIONS.h).
  Update results of exp: global_with_exf (x2), ideal_2D_oce, isomip (x2),
   lab_sea (3 Fwd +3 AD), natl_box (x2), tutorial_global_oce_biogeo (Fwd+AD),
   tutorial_global_oce_latlon, tutorial_global_oce_optim & tutorial_tracer_adjsens.
  Keep old results by adding CD_CODE_OPTIONS.h in exp: cfc_example, exp2,
       global_ocean.90x40x15(+AD), global_ocean_ebm(+AD) and OpenAD.
o pkg/obcs:
 - fix bug in initialisation (broken since Oct 1rst modification)
   for useOBCSprescribe without useEXF.

checkpoint61y (2009/11/15)
o pkg/seaice
 - change (once again) the discretization for the evp solver: rather than
   squaring the averages of strain rates, average the squares to give
   a better approximation to VP behavior (in simple test); this breaks
   verification experiments that use EVP (lab_sea and lab_sea.hb87)
    --> update outputs
o add CPP-flag (in mom_calc_visc.F) and TAF directive (in gmredi_slope_limit)
  to improve vectorization of adjoint code on TARGET_NEC_SX
o verification/vermix:
  - change vermix to a more "classical" 1d column with high vertical 
    resolution, seasonal heat flux forcing and constant wind forcing 
    --> update outputs
o pkg/seaice
 - fix diagnostics of principal stress components for EVP
 - add optional diagnostics of non-linear convergence for LSOR solver
 - make maximum zeta a runtime parameter
o model/src (3-d solver):
  Undo modif from Dec 12, 2005 (solve_for_pressure.F cvs version v.49),
   which consisted in removing the Surf. Non-Hydrostatic pressure from the
   whole column and adding it to Eta (inspired from Casualli, 1999):
   Only affects 3-D solver initial guess and only if using ExactConserv,
   but tests did show a degradation of solver convergence. For this reason,
   decide to disable this piece of code.
   to recover previous version, just set zeroPsNH = exactConserv (line 78).
  Update output of exp. global_ocean.cs32x15.viscA4 & hs94.cs-32x32x5.impIGW
o pkg/ggl90: 
 - fix previous modif (unfortunatly has not been documented here).
o pkg/seaice/autodiff:
 - add CPP flag to include clipping of zeta in EVP code;
   although clipping of zeta is not necessary for EVP and not recommended
   it was done by default, now clipping is disabled by default
 - modify computation and store zetaC/Z in seaice_evp for TAF
 - add CPP-flag SEAICE_ALLOW_CLIPVELS (undefined by default)
 - change seaice_calc_viscosities/strainrates for better
   vectorization after AD by TAF
 - rearrange common blocks in SEAICE.h once again for easier dumps of
   adjoint output, adjust adcommon.h and g_common.h
 - change flux form of default advection scheme for better vectorization
   of adjoint code
 - modify lab_sea/input.lsr to test the flux form of default advection 
   scheme
o autodiff: fix seaice fields in g_common.h (left over from 3 to 1 level
  transition in checkpoint61r)

checkpoint61x (2009/10/19)
o adjoint: adding two new verification experiments
  * tutorial_global_biogeo: an online dic sensitivity experiment 
    (work with G. Forget)
  * tutorial_dic_adjoffline: an offline dic sensitivity experiment
    (an update of the Dutkiewicz et al., 2006 paper)
  Both use the same CO2FLUX cost function, but different controls
  Gradient checks look good, but some recomp. could still be traightened out
  Should add xx_dic control variable to test at some point
o model/src:
  add run-time parameters to check and/or mask initial Temp & Salt
o pkg/ptracers:
  apply zonal filter (if used) to all passive tracers

checkpoint61w (2009/10/12)
o adjoint:
  * update and finish work on adjoint of dic package (G. Forget)
  * start adjoint of offline package
  * bug fix for cube-sphere TLM code (active_file_g.F)
o tutorial_global_oce_optim:
  now tested with 4 tiles (change data.grdchk and update output_adm.txt)
  and add SIZE.h_mpi for MPI testing
o pkg autodiff
 - fix bug in autodiff_restore
 - make genmake2 remove comments and empty lines from ad_input_code.f in 
   order to reduce file size (new script file remove_comments_sed)
o allows to specify vertical profile of vertical viscosity (viscArNr)
o pkg autodiff
  autodiff_ini_model_io: comment out writing of grid information to netcdf 
  files, because at this time the grid fields are a bunch of zeros 
  (this is analogous to ini_mnc_vars.F) 
o pkg seaice/autodiff:
 left-over from removing the 3-time-level fields: 
 - small rearrangement of common blocks (SEAICE.h)
 - fix field declaration in order to get meaningful output in 
   adseaice.*.nc (adcommon.h) 
o pkg obcs:
 - go through NH code only if nonHydrostatic=T
 - fix restart for Orlanski (Hydrostatic; still to fix NH+Orlanski restart)
 - move call to OBCS_CALC before SEAICE_MODEL which needs seaice-obc fields
   => Update output of experiment seaice_obcs
 - useOBCSbalance: code is wrong with multi-tile / proc: add a stop.
 - fix NH+Orlanski restart (add wvel OBC value in pickup file)
 - fix restart for useOBCSprescribe + useEXF
o pkg ctrl
 - make obcs as control parameter work also with useSingleCPUio
 - replace a few sny and snx by Ny and Nx to be consistent with
   ctrl_set_globfld_x/yz.F
o pkg seaice
 - re-introduce global field frWtrAtm for the case of 
   ALLOW_MEAN_SFLUX_COST_CONTRIBUTION defined (SEAICE.h, seaice_growth.F)
 - catch the case of an empty filename in seaice_cost_init_fixed.F
o pkg ecco:
 - small bug fixes in the_main_loop
  . fix order of monitor arguments
  . change SEAICE_MULTILEVEL to SEAICE_MULTICATEGORY
  . move include DYNVARS.h up outside the ALLOW_AUTODIFF_TAMC block so
    that ALLOW_ECCO_FORWARD_RUN works with NONLIN_FRSURF
 - replace cos(yc*deg2rad) by _rA in cost_mean_heat/saltflux.F, fix the 
   imbalance diagnostics for wmean_h/sflux = 0 
 - add actual values to f_obcsn/s/w/e in ecco_cost_final.F
 - catch the case of empty filenames in ecco_cost_init_fixed.F 
   and ecco_readparms.F
 - fix the logic of wsalt=0.and.wsalt2=0 to wsalt=0.or.wsalt2=0 (and theta)
   to make this statement meaningfull in ecco_cost_weights.F
o pkg zonal_filt:
  - change ZONAL_FILTER S/R interface (allows to filter 2-D fields)
  - when using rStar, filter uVel*hFacW instead of uVel
   (tested without topography: fix a Pb of growing instability with NLFS)
o pkg/aim/thsice:
 -Add capacity to read a Q-Flux to be applied in slab-mixed layer thsice_slab_ocean.F
  (works as SST restoring)
o pkg/thsice:
 -add specific parameter for salt restoring in slab mixed-layer
   (by default equal to the temperature restoring)

checkpoint61v (2009/09/21)
o pkg/kpp:
 -add double diffusive contributions as a hack, turned off by default 
  for now, and the code can be excluded with a CPP-flag 
  EXCLUDE_KPP_DOUBLEDIFF just as EXCLUDE_KPP_SHEAR_MIX
 -add a verification experiments to "vermix" to test this code
o pkg/mom_common:
  Move computation of length scales to mom_init_fixed.F (avoid recomputation
  at each time-steps*levels).
o pkg/layers:
  Created a new package for computing volume fluxes in temperature or
  [not yet implemented] density layers, e.g. for calculating residual
  overturning circulations. 
o pkg/diagnostics: 
  implement a RS type version for the set of DIAGNOSTICS-FILL subroutines
o fix few RS/RL type mismatch (check with ifort 11.1 "-warn all" option)
o pkg/mdsio (& pkg/rw): rework high level S/R interface:
  To avoid mixing type (RS/RL) of input/output array argument,
  replace single mixed-type array with a pair from each type (RS/RL).
o setting pickupSuff force to start from a pickup (even if nIter0=0): this
  is now implemented for all pkgs (previously only done for the main pickup) 

checkpoint61u (2009/08/25)
o pkg/obcs:
  - change OB?eta from _RS to _RL and put them into a separate commen block
  - add code to read OB?eta from a file via obcs_prescribe_read: the code
    compiles and does not destroy any other experiments, the data is read
    properly, but the code is not tested in actual applications
o ini_mnc_vars.F: if available (ALLOW_CAL), use startTime_1 and 2 to 
  create a meaningful unit attribute for the time coordinate variable 
o pkg/ebm: add plenty of missing "_d 0" ;
   update results of experiment global_ocean_ebm (fwd + adjoint tests) 
  Notes: several pieces of code only works for (very) specific set up
   (domain size, lat range, etc ...); should be documented & stop if one 
   of those assumptions is not meet.
o pkg/seaice: add missing "_d 0" in HSNOW initialisation
   update results of experiments: lab_sea (3 fwd tests + 2 adjoint tests) 
      and offline_exf_seaice (seaicetd + adjoint).
o add missing "_d 0" in ShortWave flux penetration (S/R SWFRAC):
   update results of experiments: lab_sea (4 fwd tests + 3 adjoint), 
    seaice_obcs, global_ocean.cs32x15 (icedyn & thsice) and natl_box (x2).
o few changes to pass when compiling with strick checking of arguments 
   across S/R (allow to find few bugs in S/R calls).
o pkg/seaice:
 - seaice_evp: move if-statement out of loop (TEM) at the cost of 11 new 
   2d-fields, for slightly better performance

checkpoint61t (2009/07/22)
o pkg/seaice: 
 - remove unused variables in seaice_evp
 - reduce number of SQRT in seaice_evp and seaice_calc_viscosities
o eeset_parms.F, open_copy_data_file.F & ini_parms.F:
   named file replacing SCRATCH files (for TARGET_BGL & TARGET_CRAYXT):
   each processor opens a different file (a fix from Matt).
o cg2d:
   use simple EXCH (overlap size = 1 and ignore corners), like in cg3d.F :
   this reduces number of EXCH calls by 2 when using exch2.
   For now, keep previous size array for gc2d_nsa.F to avoid Pb with store 
   directives and missing simple EXCH (exch_s3d_rx) adjoint code.
o pkg/thsice: 
   add code for Near Infra-Red albedo (from Jeff)
   (turned on with run-time flag: thSIce_calc_albNIR, in data.ice).
o ini_model_io:
   move (from packages_readparms.F & initialise_fixed.F) to ini_model_io.F
   MNC & MONITOR initialisation calls; move MNC calls from {pkg}_readparms.F
   to {pkg}_init_fixed.F for {pkg}= kpp, seaice & shelfice.

checkpoint61s (2009/06/30)
o pkg/exch2 (exch2_rxN_cube*):
   remove last BARRIER (no need to synchronise after getting data from shared
   buffer (get) as long as any change to buffer (put,recv) is between BARRIER)
o change tiling of natl_box (from 2 to 4 tiles) to get it tested with MPI+MTH
  and generate new output (for the 2 tests) using default rotationPeriod.
o pkg/exch2:
  - always call exch2_*_cube, not exch-1 anymore, if useCubedSphereExchange=F
    (was already the case with AUTODIFF_EXCH2 defined)
  - add bj in exch2 arrays and S/R.
  - can now use pkg/exch2 for regular (non CS) set-up; switch test experiment
    MLAdjust to exch2 (identical results except with MPI -> truncation diff);
o add pkg/longstep for ptracer timestep a multiple of U/V/T/S timestep
  - adds deltaT argument to the subroutines TIMESTEP_TRACER DWNSLP_APPLY
    GAD_ADVECTION GAD_CALC_RHS GAD_IMPLICIT_R GAD_SOM_ADVECT
  - verification experiment natl_box.longstep
o build_options: ifort+mpi_aces optfile (following Constantinos advise):
  allow different versions of ifort (8 or 9) and different versions
   of mpi (mpich or mpich2) to be used with the same optfile.
  requires to load a netcdf module and set MPI_INC_DIR (see comments inside
   optfile). Change testing scripts (example_scripts/ACESgrid) accordingly.
o pkg/seaice: 
  fix previous modif (3-level field removed) for old-pickup reading 

checkpoint61r (2009/06/25)
o pkg/seaice: 
 - clean up the 3-time levels of UICE,VICE,HEFF,AREA in three steps:
  1. introduce fields for time step (N-1)
  2. do not use levels 2 and 3 anymore (but keep them)
  3. replace 3D versions of UICE,VICE,HEFF,AREA by 2D versions. This 
     includes changes to pkg/thsice/thsice_get_velocity.F, 
     model/src/external_forcing_surf.F, pkg/obcs/obcs_apply_seaice.F, and
     pkg/obcs/obcs_apply_uvice.F.
 - completely remove code for leap-frog time stepping for second order
   advection
 - adjusted adjoint accordingly;
   gradient checks have improved by an order of magnitude!
 
checkpoint61q (2009/06/22)
o pkg/seaice: fix bug in free slip boundary conditons for LSOR solver
 - the boundary conditions along open boundaries are unclear, because the
   associated masks are set to zero and are thus treated as closed when
   applying the slip-boundary conditions.
 - move initialisation of grid variables from seaice_init_varia to _fixed
o adding doc/diags_changes.txt
o model/src: 
  do_the_model_io: rename few pkg S/R which are called from do_the_model_io, 
   to avoid "_diags" naming if no relation to pkg/diagnostics.
  ini_theta,ini_salt: fix (at least compile the code) reading from NetCDF 
   file and only call PLOT_FIELD_XYZ if debugMode=T.
  remove few PLOT_FIELD_XY calls outside initialisation.
  remove few unnecessary BARRIER.
o pkg/salt_plume: add SaltPlumeSouthernOcean to allow disabling
  of salt_plume package in Southern Ocean 
o pkg/thsice: 
 - fix hOceMxL in overlap (needed for sea-ice advection); 
   update output of experiment global_ocean.cs32x15.icedyn.
o pkg/seaice: 
 - make the (placeholder-)tracer IceAge a little more meaningful
  by avoiding ridging of age due to convergent ice flow
 - add diagnostics for surface temperature, atmospheric and oceanic
   heat flux, and atmospheric and oceanic ice growth

checkpoint61p (2009/06/10)
o eesupp (global_max & global_sum):
 - add one more element to buffer (start at index 0) for GL_MAX/SUM output;
 - remove starting & endding barrier (no longer needed)
o pkg/mdsio, writelocal:
   works also in multi-threaded when LOCBIN_IO_THREAD_SAFE is undefined
   (remove the STOP): uses shared buffer IO to store data from all threads
   and then let master-thread write nThreads tiles.
o pkg/mdsio (read/write field):
 - tiled IO done in 1 piece (all levels at a time);
 - new header file "MDSIO_BUFF_3D.h" with 3-D buffers.
 - multi-threaded: allow to read/write local (non-shared) array
   (was already working with singleCpuIO ; now works also without);
   => no longer needs barrier call after reading a file (added inside
   mds_read/write field).
 - move barrier calls outside gather/scatter_2d to mds_read/write_field
o pkg/obcs/exf
  - exf_getffieldrec.F: add a few ". _d 0" and 
                        add code to catch the case fldperiod = 0.  
  - obcs_precribe_read.F: change if statements so that they match 
                          the variable type (_RL)
  - add a separate exf_iprec_obcs to exf_set_obcs (by default equal to 
    exf_iprec) as part of namelist EXF_NML_01
o pkg/mdsio:
  - read/write tiled (local) files: read/write 1-level tile chunk at a time
    (instead of segment of length sNx); expected to speed up tiled IO.
o pkg/exch2:
  - take buffer copy from/to array out of S/R exch2_send/recv into new
    S/R exch2_put/get ; Exch of local variable now works with MPI+MTH
    (tested by removing commom block statement in SOLVE_FOR_PRESSURE.h).
  - ad version of send/recv no longer needed (but needs exch2_ad_put/ad_get)
  - simplify argument list of S/R exch2_get_uv_bounds and exch2_get_scal_bounds
    (which replaces exch2_get_recv_bounds & exch2_get_send_bounds) by
    including Topology header file (and common blocks).
  - implement EXCH_IGNORE_CORNERS in scalar exchange (rx1);
    remove 2nd exch call in exch2_s3d_rx (no longer needed).
  - document S/R arg. list (+ update some comments)
o pkg/seaice:
  - added SEAICE_CLIM_AIR code, which permits modulation of surface air
    temperature and humidity over sea ice based on climatological values.
  - clean up computation of Hibler+Bryan (1987) stress coupling for the case
    of LSR (this change is expected to change the results slightly because now 
    it uses slightly difference moduli from the second last LSR solution, but
    that is more consistent with the stress computations; this part of the code 
    is not tested in the verification experiments)
  - fix diagnostics for flux of ice in case of B-grid
  - turn strain rates eij and press into global fields within global 
    common block in SEAICE.h for more straighforward diagnostics
  - fix diagnostics for principal stress components, press, zeta, eta
    to give something meaning full
o change tiling of global_ocean.cs32x15 (12 tiles, 32x16) and generate
  new output (all 4 tests) using default rotationPeriod.
o pkg KPP:
  - add flag (LimitHblStable) to avoid limiting BL depth under stable conditions
  - fix vertical indices in RI_IWMIX (match between KPP grid from 0 to Nr+1
    and normal grid from 1 to Nr)
o Fix computations of L4rdt in mom_calc_visc.F
o eesupp:
  new S/R ALL_PROC_DIE (like EEDIE, without irrelevant threads err msg):
  should be called before a "stop" if we know that all process are going
  to stop; if one Proc does call this S/R, will hang in MPI_FINALISE.

checkpoint61o (2009/05/26)
o pkg/exch2: change check_depths to issue just a warning (instead of error+stop)
o model/src/ini_curvilinear_grid.F:
   compute angleSin/CosC when they are not read from a file
o pkg/seaice:
   add pseudo time stepping for LSOR
o pkg/exch2:
   temporary fix for exch2_s3d_rx; update results of exp. hs94.cs-32x32x5.impIGW
o pkg/seaice:
   Adding separate sea ice albedo, drag coefficients, and HO in Southern
   Ocean from those in Arctic Ocean.  See *_south in SEAICE_PARAMS.h
o SingleCpuIO:
   fix bug put before chkp61n (May 11), when more than 2 MPI cpu are used.
o pkg/seaice:
   put exchanged variable in (local) common block for MPI+Multi-Threads
   to work (necessary with exch1, and for now with exch2 too).
o verification: to get more experiments tested with mpi, mth and mpi+mth,
  change tiling of:
   aim.5l_Equatorial_Channel, aim.5l_LatLon, dome, exp4, global_ocean.90x40x15,
   hs94.cs-32x32x5, MLAdjust, offline_exf_seaice & tutorial_plume_on_slope
  update output of exp:
   exp4, global_ocean.90x40x15(+.dwslp), MLAdjust(all 5),
   tutorial_plume_on_slope and hs94.cs-32x32x5 (use default rotationPeriod)
  + ideal_2D_ocean: use default rotation period + test Global_Sum_SINGLECPU
                   (note: output.txt generated on faulks using only 1 tile)
o eesupp & mdsio (SingleCpuIO):
 - remove MISSING_TILE_IO (from MDSIO_OPTIONS.h), replaced by run-time
   parameter "W2_useE2ioLayOut" (read from file "data.exch2").
   Note: was not effective for globalFile & useSingleCpuIO=F; now fixed.
 - move MDSIO_SCPU.h (pkg/mdsio) to EEBUFF_SCPU.h (eesupp/inc).
 - fix GLOBAL_SUM_SINGLECPU when using Exch2; re-use same buffers and same
   gather/scatter S/R as with SingleCpuIO (=> 1 less 2D global RL array).
o pkg/exch2:
 - new code to set-up W2-Exch2 topology (replace matlab-topology-generator):
   read parameter file "data.exch2" if it exists; otherwise try default regular
   cube without blank-tile; new header file "W2_EXCH2_SIZE.h";
 - update matlab-topology-generator (exch2_setup_cs6_print.m) to be compatible
   with new code (not to be used, just as a backup solution).
 - add examples (e.g., for lat-lon-cap_120) of parameter file "data.exch2" 
   in utils/exch2/input.

checkpoint61n (2009/05/12)
o eesupp & mdsio (SingleCpuIO):
  - move mapping to global io-buffer inside gather_2d/scater_2d: this save
    memory (1 less 2D global RL array); skip 1 buffer copy; and only send/
    receive real*4 array (instead of real*8) to read/write 32.bit files.
    (new template for gather_2d/scater_2d, new set of S/R MDS_PASS_R4,8toRL,S
     and remove new mapping S/R)
o pkg/mdsio: in preparation for topology-generator within pkg/exch2:
  - Change declaration of SingleCpuIO buffer, reduced to only 1 dim.:
    xyBuffer_size, which is set to W2_ioBufferSize from W2_EXCH2_PARAMS.h
    when using exch2. Add S/R to map global io-buffer to global model array.
  - uses exch2_global_Nx,y instead of exch2_domain_nxt,nyt.

checkpoint61m (2009/04/29)
o write_utils : change WRITE_1D_R8 to WRITE_1D_RL
  and add 3 other S/R for other types (R4,R8,RS).
  Change calls to WRITE_0D/1D_R[4,8,S,L] to match the type of argument.
o eesupp/inc/CPP_EEMACROS.h (EXCH & GLOBAL_SUM/MAX macros):
 - ensure suffix (_R4,_R8,_RS,_RL) correspondance between macro and S/R ;
 - reduce number of macro definitions (keep only those which are used);
   can always call directly the corrresponding S/R if needed.
 - everywhere in the code: change macros (EXCH & GLOBAL_SUM/MAX) suffix
   _R4/_R8 to _RS/_RL when applied to _RS/_RL variable.
 Fixed wrong type of arg in:
   atm2d/put_ocnvars.F cheapaml/cheapaml.F ocn_compon_interf/ocn_apply_import.F
   ctrl/ctrl_map_ini_ecco.F seaice/seaice_do_diags.F seaice/seaice_model.F
 To fix: global_sum of var in common block is wrong (multi-threaded) in:
   dic/dic_atmos.F ebm/ebm_area_t.F ebm/ebm_zonalmean.F sbo/sbo_calc.F
 To fix: aim_v23/aim_do_co2.F (BARRIER & GLOBAL_SUM within bi,bj loops)
o adjustment.cs-32x32x1: test "blank tiles" when compiling with mpi; 2nd
  "nlfs" mpi test is going to stop when checking for unconnected tile egdes.
o eesupp/src: new S/R to stop everyone when 1 (or more) Proc. find an error
o pkg/exch2: new S/R EXCH2_CHECK_DEPTHS to check that unconnected tile
  edges are closed (zero depth); might happen with "blank tiles";
  for now, disabled if using OBCS.
o tools/gemake2: delete modifs from March 27-29 2009 (with option "-mpi":
  link *_mpi files from "MODS" dir) to return to a strait-forward behavior.
o move read_write.F to write_utils.F ; new parameter (maxLengthPrt1D)
  to reduce length of 1.D array print in STDOUT.
o adjustment.cs-32x32x1: changed to oceanic test with 1 continent
  + use 48 tiles (16x8): this will allow to test "blank tiles".
o start to test MPI + multi-threaded (change testreport to skip tests
  where number of tiles do not match).
o genmake2: add option "-omp" to turn on Open-MP ;
  passed to testreport (if using -mth) ; merge few (*+mth) optfiles.
o pkg/exch2 (+ utils/exch2): ignore blank tiles (instead of removing them)
  and keep the original tile numbering. Note: compatible with old
  W2_EXCH2_TOPOLOGY.h & w2_e2setup.F topology files.

checkpoint61l (2009/04/07)
o Overlaps had been forgotten in calculating ijk keys : fixed
o fix cyrus makedepend for gcc 4.4
o experiment fizhi-cs-aqualev20:
  switching to new version of S/R GETPWHERE (#define TRY_NEW_GETPWHERE)
  and generate new output. Note: new output is much closer to the old
  one (v1.8) generated with pgf77 -O2 on Mar 14 2007 than it is from
  the previous one (v1.9) generated with pgf77 -O0 on Jun 13 2007.
o pkg/fizhi:
 - change to avoid indices going deliberately over array-bounds
 - remove unnecessary MPI stuff
 - perpetual spring equinox with "#define FIZHI_USE_FIXED_DAY"
 - new version of S/R GETPWHERE available with #define TRY_NEW_GETPWHERE:
   does not go over array-bounds and therefore returns reliable output.
 - in fizhi_driver.F & fizhi_turb.F, fix "get_alarm" calls:
   this S/R has 4 output arguments, which are used inside "get_alarm";
   when it is called with the same variable "ndum" in place of several
   output arguments, this produces weird side effect inside "get_alarm"
  (e.g., datein=dates(n) is overwritten by timein=times(n) since both
   datein & timein, resp. 2nd and 3rd arg., are pointed to the same "ndum"
   address) and produces error.
o tools/gemake2: (March 27-29 2009)
  with option "-mpi": link *_mpi files from "MODS" dir (this is what 
  testreport does).
o lab_sea experiment: change from 2x1 tiles to 2x2 tiles and regenerate output
o pkg/seaice: fix bug in new version of S/R SEAICE_LSR.F:
   update lab_sea.lsr & lab_sea.salt_plume results
o pkg/seaice: 
  Major overhaul of the LSOR solver: change discretization from original
  finite differences to finite volume. The old routine is still in the
  file seaice_lsr.F and can be turned on with the CPP-flag
  SEAICE_OLD_AND_BAD_DISCRETIZATION
  Along with this change, the discretization of the strain rates is changed.
  The same flag turns on the old discretization in seaice_calc_strainrates.F
  All verification experiments with seaice are affected (except for 
  seaice_exf_offline); global_ocean.cs32x15/input.icedyn recovers the old
  results by setting the above flag.
  Further changes involve changes in defaults:
  - ALLOW_FLOODING is defined and turned on by default
  - SEAICEadvSnow = .true. is now the default
  - SEAICEadvSalt = .true. is now the default
  - SEAICEadvAge  = .true. is now the default
  - SEAICE_clipVelocities  = .false. is now the default 
                                     (as per J. Zhang's recommendation)
  - B-grid, and thus not tested: SEAICE_TEST_ICE_STRESS_1/EXPLICIT_SSH_SLOPE
    is defined, SEAICE_TEST_ICE_STRESS_1 is renamed into SEAICE_BICE_STRESS
  - seaice_growth: replace computation of UG by a simple copy from wspeed

checkpoint61k (2009/03/18)
o pkg/seaice: a few bug fixes mostly concerning the metric terms:
  seaice_lsr: fixed a few metric terms,
              affects lab_sea.lsr, lab_sea.salt_plume, seaice_obcs
              add more debugging diagnostics
  seaice_evp: removed superfluous many metric terms of FV discretization
              of stress divergence
              affects lab_sea, lab_sea.hb87
  seaice_ocean_stress: removed superfluous many metric terms of FV discretization
              of stress divergence for non-evp solver 
              (this part is not tested anywhere)
  seaice_calc_strainrates: fixed a bug in no-slip boundary conditions,
              they were effectively only half slip
              affects lab_sea.hb87
  updated all relevant verification experiments (except lab_sea//output_adm.txt
    which was left over, but fails at level 7 & 6)

checkpoint61j (2009/03/17)
o pkg/seaice: turn a few hard wired parameters into run time parameters
o pkg/seaice/exf/monitor: turn netcdf coordinate variable T into model 
  time in seconds as promised by the usints in seaice_monitor and exf_monitor
o pkg/mnc: fix the coordinate variables for multi-tile curvi-linear grids
  that are not cubed-sphere grids
o pkg/seaice: fix a bug for the rare case of SEAICE_VECTORIZE_LSR
o pkg/ctrl:
  fix bug in ctrl_depth_ini.F (EXCH_XYZ was applied to 2-D field xx_r_low)
o non-hydrostatic (calc_gw.F):
  fix viscA4 on CS-grid + fix diagnostics: Wm_Diss & Wm_Advec
  update output of exp. global_ocean.cs32x15.viscA4
o remove backward compatibility for thetaMin,phiMin
  (replaced by xgOrigin,ygOrigin on Jan 27, 2009)
o pkg/exf: fix a serious bug in exf_set_uv.F: do a rotation of the 
  interpolated wind field not only for curvilineargrid=.true., but also 
  for a rotated grid (rotateGrid=.true.)
o pkg/exf: add capability to bypass interpolation for runoff
  by setting yet another CPP-flag
o eesupp/src, B-grid exchange:
  add simple (6 tiles, non MPI) CS exch + standard interface S/R.
o autodiff
  new CPP option ALLOW_TAMC_SINGLEPREC_COMLEV
  allows to switch to single-prec common blocks;
  corresponding switch occurs in tamc.h, integer isbyte
  TAF store directivs "byte" and "kind" seem equivalent;
  Most tamc.h have been updated correspondingly.

checkpoint61i (2009/02/13)
o autodiff:
  fix autodiff_sore/_restore indices for obcs
  (spotted by I. Hoteit, M. Mazloff)
o pkg/autodiff, pkg/ctrl:
  Add flag to reduce all tapelev I/O to single-prec. 
  In data.ctrl set
    doSinglePrecTapelev = .TRUE.
o model/src/ini_curvilinear_grid.F, new grid-file format without EXCH2:
  check in hack for SX8 compiler (for dxV, dyU); remove it afterwards.
o pkg/shelfice: fix bug with SHELFICEconserve flag, prepare for 
  real fresh water flux (not yet)
o pkg/mdsio & rw:
 - add argument & option to S/R MDS_WRITEVEC_LOC (avoid Open/Close & write-meta)
 - add simple interface S/R to MDS_WRITEVEC_LOC in pkg/rw: WRITE_GLVEC_RX.
o pkg/flt:
 - replace FLT_INIT by 3-steps standard initialization S/R: readparms,
   init_fixed & ini_varia.
 - clean-up & simplify linear interpolation S/R:
   move flt_bilinear.F -> flt_interp_linear.F ; add arg. myThid.
 - fix some indices (mainly vertical index) ; add IMPLICIT NONE.
 - more efficient I/O, using new options of MDS_WRITEVEC_LOC S/R.
 - add vert. coordinate & horiz. indices to output files.
 - change vertical position in initial condition, from index to depth [m].
 - store horizontal (decimal) indices i,j in common block (instead of coord. x,y)
   (easier to get to a curvilinear grid) ; delX,delY no longer used.
o pkg/ggl90: a few modifications:
 - fix bottom boundary condition, and interpolation of KappaE
   near top and bottom
 - use same set of viscosity/diffusivity for TKE/momnetum/tracer 
 - add smoothing option as in Blanke and Delecluse (1993) (--> ALLOW_GGL90_SMOOTH)
 - add a few options for mixing-length upper limit (--> mxlMaxFlag)  
o rename thetaMin,phiMin -> xgOrigin,ygOrigin
  (maintain temporary backward compatibility, until next checkpoint)

checkpoint61h (2009/01/27)
o pkg/diagnostics with "periodic averaging diagnostics":
  fix S/R DIAGNOSTICS_COUNT ; hack diagnostics_out.F to get NetCDF output. 
o pkg/my82: add missing "_d 0" ; update output of exp. vermix.my82
o pkg/obcs: fix loop ranges for balancing code
o pkg/flt:
 - improve criteria for finding which tile owns a float.
 - fix FLT_EXCH for case without MPI ; apply cyclic BC + fix also the MPI case.
o Add well-mixed CO2 box in aim_v23 (which includes changes in pkg
  aim_compon_interf, ocn_compon_interf, gchem, and dic to get coupling
  with ocean biogeo)
o pkg/flt:
 - do some cleaning and fix the restart ;
 - add output.txt in flt_example/results to get this pkg tested.
o genmake2: add an EXTENDED_SRC option and flag.
   for now, cannot be turned on on command line (only through genmake_local)
o pkg/mdsio: read/write vector:
 - singleCpuIO: fix RL/RS in MDSWRITEVECTOR by calling new S/R MDS_BUFFERtoRL/RS
 - singleCpuIO=F: fix arrType & filePrec & _BYTESWAPIO in both MDSREADVECTOR
   & MDSWRITEVECTOR by calling new S/R MDS_RD/WR_VEC_RL/RS.
 - affects gradient of test-exp "bottom_ctrl_5x5" (not due to _BYTESWAPIO)
  (drop to 4 digits matching for grad). But this test does not look very
  reliable (was already failling on eddy, fc5, at 6.digits). Update output.

checkpoint61g (2008/12/29)
o pkg/flt:
  - move FLT_CPPOPTIONS.h to FLT_OPTIONS.h (standard name)
   + make OPTIONS file more standard.
  - rename S/R MDSREADVECTOR_FLT to FLT_MDSREADVECTOR (to mach src file name)
  - fix _BYTESWAPIO CPP-Flag
  - standard reading of file-parameter "data.flt"
  - fix argument list of S/R FLT_RESTART
  still need to fix _BYTESWAPIO in pkg/mdsio/mdsio_writevector.F
o pkg/obcs: fix a CPP-flag, bug reported by Jeff Blundell
o gather_2d.F/scatter_2d.F: suppress vectorisation on NEC SX in respond to
  a still unfixed compiler/optimization bug

checkpoint61f (2008/11/21)
o pkg/seaice, LSR solver: fix bug in GLOBAL_MAX calls ; 
  update results of global_ocean.cs32x15.icedyn test.
o move getcon.F from model/src to pkg/fizhi.
o pkg/exf: add parameter for extrapolation of temp up to the surface 
   and option to prevent negative evap (in bulk_largeyeager04 only).
o Prather Advection scheme: fix tracer conservation for divergent flow
  (e.g., when using NonLin Free-Surface).
o kpp: retire KPPmld diagnostics --> use MXLDEPTH instead
o gmredi (Visbeck-variable-K):
 - add more parameters to Visbeck-variable-K.
 - use a 5 points average for dSigmaR in Visbeck-K calculation
   (more "homogenous": same stencil and same weights as in dSigmaH)
 - update output of ideal_2D_oce experiment.
o fix CPP-flag REAL4_IS_SLOW, when _RS expands into real*4 
  (#undef REAL4_IS_SLOW)
 - pkg/mnc/mnc_cw_cvars.F: write _RS-grid variable as netcdf-real*4 
   coordinate variable
 - pkg/monitor/monitor.F: call mon_printstats_rs for _RS variables 
   (surface forcing fields), removes some of the functionality
 - model/src/write_grid.F: write _RS variables as RS-netcdf variables 
 - model/src/diags_oceanic_surf_flux.F: fix a few diagnostics, but 
   probably not all: copy _RS surface flux fields to RL field before 
   calling DIAGNOSTICS_FILL
 - model/inc/CPP_EEMACROS.h: make the _EXCH_*_RS macros expand into 
   real*4 (CALL EXCH_*_RS) versions.
 - tested in 2 experiments: inverted_barometer & solid-body.cs-32x32x1
   (generate new output).

checkpoint61e (2008/10/23)
o gmredi (Visbeck-variable-K):
  - fix the "OLD_VISBECK_CALC" option + move the #undef to GMREDI_OPTIONS.h
  - change computation of Visbeck-K where Slope > Smax :        
    now: N*min(Slope,Smax) (similar to OLD_VISBECK_CALC with gkw91 taperFct)
    previously was: M*sqrt(min(Slope,Smax)) ; update ideal_2D_oce output.
o bottom-drag in P-coord.: change units of bottomDragLinear & bottomDragQuadratic
  to be the same as with Z-coord. (i.e., m/s & no-units respectively).
o calc_viscosity: fix index range (was wrong for CD-Scheme & explicit Visc)
o pkg gmredi, linear & fm07 tapering: put an upper limit on Slope^2 so that Kwz
  does not become too large (to avoid precision problems in implicit-diffusion
  solver); update ideal_2D_oce output.
o pkg ggl90:
  - in ggl90_cal.F: compute only one set of visc/diff, used to
    step forward TKE/T/S/momentum
  - default value of GGL90viscMax/GGL90diffMax larger and equal (to
    have Prandlt =1)
o gmredi (fm07):
  - add lower limit on Transition layer thickness + lower limit on 1/lambda
  - allow to set few more params from data.gmredi
o pkg ggl90:
      - add missing sqrt(2) factor in computation of mixing length 
        scale in ggl90_calc.F
        (see Eq. (2.35) in Blanke and Delecluse, JPO, 1993)

checkpoint61d (2008/09/25)
o adjoint modifs
  - adapt to new field rhoInSitu
  - allow to revert from StoreDynVars2D, StoreDynVars3D
    to individual fields
    (switches AUTODIFF_USE_OLDSTORE_2D, AUTODIFF_USE_OLDSTORE_3D)
o store 3-D (in-situ) density in commom block (DYNVARS.h)
 - save 1 rho computation.
 - no longer modify T & S inland when using down_slope pkg.
o gad_som : allow to switch to SOM advection for T & S without corresponding 
  pickup files (using new S/R: MDS_CHECK4FILE).
o keep removing _BEGIN/_END_MASTER between MDSIO S/R call
  (for useSingleCpuIO to work in multi-threaded)
o pkg/shelfice:
 - disentangle parameters: retire shelfIceFile in data/PARM05 and substitute
   with SHELFICEtopoFile in data.shelfice
 - move code for reading ice shelf topography and modifying hFacC into separate
   subroutines of the shelfice package
 - separate initialisation of "fixed" and "variable" variables
 - kTopC is not (yet) replaced by kSurfC, although this is possible
o fix broken diagnostic SIatmFW and changed the units from m/s to kg/m^2/s
o add initialisation of deepFac if using Pcoords (new S/R set_grid_factors)
  and rename:
  ini_phiref.F          --> set_ref_state.F  (+ set anelastic factors)
  ini_reference_state.F --> load_ref_files.F (- set anelastic factors)
o change FIND_RHO_SCALAR : return rho (instead of rho - rhoConst)

checkpoint61c (2008/08/30)
o add option ALLOW_ADDFLUID and run-time selector "selectAddFluid" 
  to add mass source/sink of fluid in the interior (3-D generalisation 
  of oceanic real-fresh water flux).
o pkg/monitor: fix recip_dr argument in mon_advcflw2 call (-> advcfl_W_hf_max)
o vermix test experiment: switch from LINEAR EOS to MDJWF (not tested before)
o new pkg: down_slope
  density-driven downsloping flow parameterisation (Tellus, 1999, 412-430).
  - presently, modify T & S inland (dwnslp_calc_rho.F).
    can be avoided if rho was stored in common bloc and used in calc_phi_hyd.
  - implementation for ocean in P-coords not tested.
  - add secondary test to global_ocean.90x40x15 (input.dwnslp) to check this pkg.
o move kSurfC,kSurfW & kSurfS from SURFACE.h to GRID.h (next to kLowC)
  (to facilitate conversion of oceanic pkg to p-coordinate).
o change FIND_RHO to FIND_RHO_2D : 
  pass arguments tFld & sFld as local (tile) 2D-arrays ; +fix EOS_CHECK.
o new pkg: cheapaml

checkpoint61b (2008/08/05)
o exch2: 
  change index bounds in rx2_cube exchanges (new S/R: EXCH2_GET_UV_BOUNDS)
  - no longer depend on the order sequence (N,S,E,W).
  - 3rd exchange no longer needed (tested with 24 tiles).
  - same modif to hand-written adjoint S/R (global_ocean.cs32x15: zero diff)
  - exch_UV_A-grid readily available (but not yet tested).
  comment out 3rd exch call and remove copy of V to U at SE & NE face-corners 
  (both are no longer needed) in exch_uv: no effect in forward run; but 
   get truncation error differences with adjoint exch.
o exch2: 
 - change index-bounds storage (moved from target to local tile,
   more intuitive this way) ; rename/remove some variables.
 - change utils/exch2/matlab-topology-generator & code_mods accordingly.

checkpoint61a (2008/07/29)
o exch2/matlab-topology-generator: 
  fix bug in index bounds for N-S internal exchange (hard to tell if this
  had any effect on the solution).
o pkg/mnc: small fix in mnc_handle_err: make sure that length of msgbuf
  is exceeded
o testreport: modify syntax of awk, so that it works also with 
  awk, and not only with nawk and gawk

checkpoint61 (2008/06/24)
o autodiff
  Change default for TAF usage by removing argument '-nonew_arg'
  This changes TAF subroutine argument list (ordering of active var.)
  Omission of this flag leads to incompatibility w.r.t. TAMC
  To restore TAMC-compatibility, need following modifs:
  * use adoptfile tools/adjoint_options/adjoint_tamc_compatibility
  * use CPP option #define AUTODIFF_TAMC_COMPATIBILITY
  Tested TAF version is 1.9.22
  N.B.: exch2 hand-written adjoint code currently not TAMC compatible

checkpoint60 (2008/06/19)
--->>> This is the last checkpoint for which generating the adjoint
--->>> is done via the TAMC-compatibility TAF-flag "-nonewarg"
--->>> by default.
--->>> Future checkpoints will ommit this flag by default.
o pkg/generic_advdiff, os7mp: simplify and avoid division by zero.
o pkg/grdchk: Add gradient check to etan0 perturbations.
o pkg/exf: read ice area from file (#ifdef ALLOW_ICE_AREAMASK). 
o pkg/autodiff: more flexibility in zeroadj. 
  model/src: modifying do_oceanic_phys.F accordingly. 
o pkg/ctrl: Bounds for (kapgm,kapredi,eddypsi) parameter estimation.
o model/src and pkg/gmredi: GMREDI_WITH_STABLE_ADJOINT CPP option
  special setup of gmredi for which the adjoint is stable 
  enough for parameter optimization.
o bridging the gap between eddy stress and GM.
  -> eddyTau is replaced with eddyPsi (eddyTau = f x rho0 x eddyPsi)
      along with a change in CPP option (now ALLOW_EDDYPSI).
  -> when using GM w/ GM_AdvForm: 
      The total eddy streamfunction (Psi = eddyPsi + K x Slope)
      is applied either in the tracer Eq. or in momentum Eq.
      depending on data.gmredi (intro. GM_InMomAsStress).
  -> ALLOW_EDDYPSI_CONTROL for estimation purpose.
  The key modifications are in model/src/taueddy_external_forcing.F
  pkg/gmredi/gmredi_calc_*F pkg/gmredi/gmredi_*transport.F

checkpoint59r (2008/05/29)
o new S/R (pkg/mdsio/mdsio_facef_read.F) reading of sNx+1 x sNy+1 array
  from per-face file (take S/R READSYMTILE_RS out of ini_curvilinear_grid.F);
  fix option to read coriolis(@ cell-corner) from files with CS-grid.
o pkg/mnc: add some attributes to standard 1D-coordinate variables
o pkg/diagnostics: enforce missing_value attribute for scalar variables at
  mass points, when using mnc for output
  - add runtime parameter (missing_value, missing_value_int) to override 
    default (which is the value of getcon('UNDEF'))
o pkg/mnc: prepare mnc for the actual use of missing values with the
  diagnostics package: small fix in mnc_cw_readwrite.template and more
  initialisation of never used fields
  - replace mnc_common.h and mnc_id_header.h with corresponding upper case
  versions
o pkg/thsice/thsice_ini_vars.F added default initial values so that 
  thermodynamics sea ice solver does not blow up when some initial fields 
  are missing.
o move from external_forcing_surf.F to ini_forcing.F
  the p-coord. hack consisting in using pLoad to set phi0surf ;
  update output of tutorial_global_oce_in_p (affected @ truncation level).
o Freshen up a bit hs94.1x64x5, notably: 
  remove rotationPeriod and tRef=5*0. (adjoint only), and add 
  exactConserv=.TRUE.
o pkg/generic_advdiff:
  change option GAD_ALLOW_SOM_ADVECT to GAD_ALLOW_TS_SOM_ADV which only
  applies to files where Temperature & Salinity 2nd Order moments are used.
o pkg/ptracers: add second-order moment advection schemes (80 and 81);
  this uses a dynamically allocated internal state data structure
  (#define PTRACERS_ALLOW_DYN_STATE in PTRACERS_OPTIONS.h) 
  and requires a fortran 90 compiler

checkpoint59q (2008/05/06)
o pkg/mom_vecinv: Add energy & enstrophy conserving scheme (selectVortScheme=3)
   (from Sadourny, described by Burridge & Haseler, ECMWF Rep.4, 1977)
o Refresh tutorial_global_oce_biogeo, notably:
  - change bathymetry (put back seamounts in ACC, use hFacs)
  - change EOS (POLY3 --> JMD95Z)
  - use Bryan-Lewis vertical diffusivity
  - use multidimensional advection
  - remove old virtual virtual in dic pkg, now done through ptracer pkg
  - change a couple of parameters in dic pkg
o pkg/ctrl: change formula in adctrl_bound.F and add a parameter to ctrl_map_ini_gen.F
o pkg/obcs: change default to OBCSfixTopo = .true., 
  - set OBCSfixTopo=.false. in exp4/input/data.obcs to reproduce old result
  - replace "debugMode" with "debugLevel .GE. debLevB"
o implementation of TAF directives for gchem,cfc,dic 
o remove "exp5" (replaced by tutorial_deep_convection).
o pkg/obcs: add code to fix topography gradients normal to open boundaries;
  this requires computing the index fields OB_Jn/Js/Ie/Iw in obcs_readparms;
  the code can be turned on by setting OBCSfixTopo = .true. in data.obcs
  --> changes results in exp4, seaice_obcs
o tutorial_deep_convection :
  update the set-up and increase resolution and domain size ; start
  from pseudo initial conditions = output at t=120mn in order to see
  something happening when running testreport.
o pkg/seaice: add os7mp as an advection scheme
              add check for advection schemes
              add a flag for restoring T and S underneath sea ice
o pkg/my82: add netcdf-support and diagnostics 
o thsice pkg:
  - Now hsMax limits snow height by turning it into ice following
    flooding scheme (and now conserving energy)
  - Slight rewriting of the formula in thsice_calc_thick.F
  - Parameter rhowi eliminated to be replaced by floodFac = (rhosw-rhoi)/rhos
  --> changes results of global_ocean.cs32x15.icedyn and global_ocean.cs32x15.thsice 

checkpoint59p (2008/04/10)
o gchem / dic / cfc :
  - add useDIC, useCFC , read from "data.gchem" (& hold in GCHEM.h);
  - add new parameter files: "data.dic" & "data.cfc" ;
  - various re-arrangement in initialisation & header file ;
  - fix tutorial_global_oce_biogeo for multi-threaded test.
o pkg/dic: test for "pickup_dic" file when restarting ;
  if no pickup-file, can restart with a re-initialised pH (same as it did
  before) providing pickupStrictlyMatch is set to False.
o change argument list of S/R PTRACERS_WRITE_PICKUP & MYPACKAGE_WRITE_PICKUP
  + fix call to S/R GGL90_WRITE_PICKUP & DIC_WRITE_PICKUP
o add a "warning" (to Error msg file) when an Active Tracer is not using AB-2
  and staggerTimeStep is off (needed for stability of Internal-wave dynamics).
o move out of PARAMS.h & data the last pieces of old-ptracer code: tauTr1ClimRelax,
 & lambdaTr1ClimRelax ; put those 2 params in PTRACERS_PARAMS.h & data.ptracers
   (note: not clear to me what lambdaTr1ClimRelax is still used for ...)
o pkg/mom_vecinv: - new parameter "selectVortScheme" to select which
   scheme to use for vorticty-term ;
 - compute upwindVorticity=T case within mom_vi_u/v_coriolis_c4.F 
   (with default selectVortScheme, return to original discretisation)
 - remove weird combination (e.g.: upwindVorticity & highOrderVorticity)
o pkg/seaice: add a line to the summary to indicate grid type (B/C)
o in mom_calc_visc, fix average value of viscAh_W & viscA4_W next to the
  bottom ; only used with variable horizontal viscosity and non-hydrostatic.
  also fix diagnostics VISCAHW & VISCA4W.

checkpoint59o (2008/03/07)
o dome/code/obcs_calc.F: avoid division by zero (detected using gfortran).
o change the loop ordering in most gad_*_adv_x.F to improve vectorization:
  move a few statemens out the main loop into separate loops
o pkg/shelfice: 
  - sort out freshwater flux; convert freshwater fluxes to mass fluxes 
    (kg/m^2/s), does not break tests, because in verification/isomip,
    rhoConstFresh=rhoConst (by accident)
  - rearrange computation of tLoc, sLoc, pLoc to make code more efficient
  - move S/R find_rho_scalar, pkg/ecco/sw_ptmp.F, pkg/ecco/sw_adtg.F into
    new file model/src/seawater.F, so that they are available for all pkgs.
  - convert potential temperature into in-situ temperature. This changes the
    isomip tests => update tests
o add a flag writePickupAtEnd (default=true) to be able to suppress 
  writing a pickup at the last timestep
o tools/mpack-1.6 : 
  - disable automake (not working) and autoconf (not needed).
  - update to version 1.6.4 which fix MD5 code on some 64 bits platforms
    also cleaner with much less compilation warnings.
o pkg/profiles: 
  rename profiles_interp_mean_genericgrid as profiles_interp_mean_gg
  (for "less than 32 characters name" compiler requirement)
o pkg/obcs and pkg/exf: added capability to specify seaice open boundary
  conditions that have a different sampling frequency than S/T/U/V obcs
o pkg/diagnostics (stats-diags): 
  - fix global Min/Max in case 1 processor get only empty tiles
o genmake2: replace (4 times)
     make genmake_tc_1.o >> genmake_warnings 2>&1
  with
     COMM="$CC $CFLAGS -c genmake_tc_1.c"
     echo $COMM >> genmake_warnings
     $COMM >> genmake_warnings 2>&1
  to make genmake2 always see the value of CC as specified in the optfile.
o generic_advdiff: - prather advection scheme (SOM) coded for CS-grid.
  - add diagnostics for 1srt & 2nd Order moments and sub-grid variance.
  - modify verification advect_cs test to test SOM-advection on CS-grid.
o pkg/ctrl:
  - Rewrite of ctrl_map_ini_ecco.F, 
    introducing a generic routine (ctrl_map_ini_gen.F).
  - Modification of ctrl_bound/adctrl_bound handling control vector bounds.

checkpoint59n (2008/02/09)
o pkg/diagnostics: for large number of diagnostics, store diagnostic mate 
  number in dedicate array "hdiag":
  - new version of S/R DIAGNOSTICS_ADD2LIST : DIAGNOSTICS_ADDTOLIST
    with 1 more argument (mate number); modify old version DIAGNOSTICS_ADD2LIST.
  - many small changes (integer format) for large number of diagnostics
  - start to use DIAGNOSTICS_ADDTOLIST (necessary for diagnostics with
    a counter mate) in pkg diagnostics, ptracers, thsice & aim_v23.
o add parameter rotateGrid and Euler angles EulerPhi/Theta/Psi. For
  usingSphericalGrid, this allows to define the rotated grid coordinates
  via phiMin/thetaMin/dxSpacing/dySpacing, etc., but then re-compute the
  geographical coordinates according to the inverse of the rotation defined
  by the Euler angles, so that Coriolis parameter and online-interpolation by 
  exf works with the geographical coordinates on XC/YC/XG/YG.
  Naturally, this feature does not work with all packages, so some 
  combinations are prohibited in config_summary (flt, flt_zonal, ecco, 
  profiles), because there the coordinates are assumed to be regular 
  spherical grid coordinates. 
o pkg/gmredi,ctrl,ecco,autodiff,grdchk and model/src,inc:
  - introduce isopycnal diffusion coefficient control.
o tools/adjoint_options: 
  - additional control vector components.
o pkg/mnc: have mnc create marginally meaning full coordinate variables
  (that is the grid indices) if usingCurvilinearGrid and NOT EXCH2 
o pkg/mypackage: 
  - add example of read/write pickup for state-var ; 
  - add entry points to the main code for state-vars diags & write-pickup.
o pkg/exf: rewrite of exf_getffieldrec.F to properly deal with year
  transitions for useExfYearlyFields
  - add new subroutine that determines the file to read from for 
    use*YearlyFields = .TRUE. and .FALSE.
  - add a verification experiment to global_with_exf that tests 
    useExfYearlyFields with USE_EXF_INTERPOLATION defined
o pkg/obcs/exf: add useOBCSYearlyFields (=.FALSE.) to obcs with exf in 
  analogy to useExfYearlyFields; rearrange obcs_prescribe_read: two new 
  subroutines (which could be generated from a template, because they are 
  almost identical), for now they are included in obcs_prescribe_read.F for
  simplicity
o pkg/exf:
  - add a little more diagnostic to exf_interp_read (in analogy to 
    mds_read_field, can be turned off with debugLevel < debugLevA=1)
  - improve vectorizability of exf_interp for TARGET_NEC_SX, makes code
    ugly but fast by unrolling short inner loops, inserting a unroll=8 
    directive in routine lagran, and splitting a loop and making do while the
    outermost loop (the latter requires the intoduction of index arrays)
o pkg/obcs: replace obcs_apply_area/heff/hsalt/hsnow with obcs_apply_seaice
o pkg/seaice: moved DIFFERENT_MULTIPLE from seaice_model to seaice_dynsolver
  http://forge.csail.mit.edu/pipermail/mitgcm-devel/2008-January/003173.html
o verification/seaice_obcs: updated for restart test and latest options
o pkg/seaice: add a new flag SEAICEuseTEM to use a slightly different
  ice rheology (so-called truncated ellipse, that gets rid of tensile stress);
  for now this is only available for the C-grid code and also within
  #ifdef SEAICE_ALLOW_TEM, because this option may slow down the EVP code

checkpoint59m (2008/01/14)
o pkg/seaice: use different time constant for melting (SEAICE_gamma_t)
  and freezing (SEAICE_gamma_t_frz) ice due to mixed layer temperature
o gad_som : fix flux output (& diagnostics) to have same units as other   
  advection scheme fluxes (was previously multiplied by deltaT).   
o added verification/seaice_obcs both to test seaice open boundaries
  and to provide an example matlab scrpt for generating them
o added verification/lab_sea/input.salt_plume for testing pkg/salt_plume
o pkg/salt_plume: clean up salt_plume_frac.F to
  remove redundancy in PlumeMethod 1 and 4
o pkg/kpp: added saltplume diagnostics
o pkg/obcs and pkg/seaice:
  - do not set uice and vice to zero when OB*icefile are unspecified
  - OBCS_SEAICE_AVOID_CONVERGENCE is undefined by default
  - moved seaice tracer obcs after call to seaice_growth
o pkg/salt_plume: added various options for salt plume depth
  criterion and for vertical distribution of the salt

checkpoint59l (2007/12/18)
o pkg/ptracers: new version of ptracers pickup:
  read meta file and write only fields which are needed to restart.
  ( same logic as main pickup file ; also using pickupStrictlyMatch )
o pkg/seaice:
  - add timescale for melting due to warm mixed layer as a means of
    setting SEAICE_availHeatFrac more conveniently
  - add a CPP-flag/runtime parameter check for flooding algorithm
  - reformulated availHeat in seaice_growth.F to be independent of AREA
o change units attribute of EmPmR netcdf variables to kg/m^2/s to reflect recent
  unit changes
o pkg/obcs: added OBCS_SEAICE_AVOID_CONVERGENCE constraint
o cg2d.F: add 3 compiler directives that speed up this routine by 30% on a NEC
  SX vector computer.
o pkg/seaice:
  - removed SEAICE_FFIELDS.h and seaice_get_forcing.F
    seaice forcing fields can now be read only through pkg/exf
  - removed some unused halos
o no longer write pickup from THE_MODEL_MAIN but always from FORWARD_STEP
o pkg/exf: added useRelativeWind EXF_PARAM.h option for subtracting U/VVEL
  or U/VICE from U/VWIND before computing U/VSTRESS

checkpoint59k (2007/11/30)
o pkg/seaice: ICE2WATR=SEAICE_rhoIce/rhoConst for consistency between
  dynamics and thermodynamics. Set ICE2WATR=0.92 to reproduce older results.
o fix un-initialised variable problem (in mom_vecinv & shap_filt):
  all experiments pass when compile with un-initialised var. checking option.
o added pkg/salt_plume
o script to test restart (for now, in MITgcm_contrib/jmc_script)
o pkg/seaice: new read/write pickup version. 
  read meta file and write only fields which are needed to restart.
  ( same logic as main pickup file ; also using pickupStrictlyMatch )
o pkg/seaice: fix bug in seaice_ocean_stress (call of seaice_calc_strainrates)
o lab_sea.hb87: modify the domain & update output.hb87.txt :
  lat-long grid & no-slip BC in seaice-dynamics produce different sigma12
  at j=1 & j=Ny+1 : this case is not treated correctly in the restart
  process. Fixed here by closing the domain at the Northern boundary.
o pkg/rw: cleaning-up: call directly new MDSIO S/R MDS_READ/WRITE_FIELD.
o pkg/mdsio: add new arguments to MDS_READ/WRITE_FIELD for reading/writing
  a set of consecutive levels in/from a 3-D array.
o pkg/ptracers: 
  use a 2 characters string ioLabel to identify tracer (if more than 99 tracers).
  to-do: fix pkg/diagnostics when large number of diagnostics are defined.

checkpoint59j (2007/11/09)
o in pkgs: dic, obcs, offline, rbcs:
  standard way to compute coeff. for time interpolation between 2 time reccords
  which retains full precision (& make results less dependent on compiler).
  update output of exp: tutorial_cfc_offline & tutorial_global_oce_biogeo.
o pkg/cfc: if compiled with exf and seaice, cfc now can use fields from those
  packages instead of reading ice cover and wind speed separately
o split PTRACERS.h in 2 header files: PTRACERS_FIELDS.h & PTRACERS_PARAMS.h
 (keep a temporary version of PTRACERS.h in verification/OpenAD/code_ad_openad
  to allow to compile customized code before the update)
o cleaning-up: 
  - fix CPP instruction syntax in pkg/obcs
  - replace (some) call to MDSIO S/R with call to RW interface S/R ; and
    add #ifdef ALLOW_MDSIO elsewhere (allows to compile without pkg/mdsio)
  - fix some threads issue in IO parts.
o pkg/dic:
  - add tons of "_d 0" (--> much better testreports !)
   and then update outputs of tutorial_global_oce_biogeo
o pkg/mom_fluxform:
  add a special version of momentum advection intended to conserve momentum
  next to a bathymetry step or a coastline edge. (default = off = #undef)
o new read/write pickup version:
  - for now, only implemented for main (mdsio) pickup file.
  - write out only what is needed to restart; merge pickup_nh , pickup_ph
    and main pickup together.
  - read meta file; read only what is needed to restart; stop if a field
    is missing (if pickupStrictlyMatch=T, = the default) or try to restart
    if it make sense (even if the restart is not perfect).
  - if no meta file, assume that pickup to read corresponds exactly to
    a pickup that would currently be written.
  - read pickup written in the old format (until checkpoint59i) if it
    recognizes an old meta file (no field-list).
  - add a meta file in exp. which starts from a pickup: 2 cases:
    a) minimal meta file (with just file precision) + pickupStrictlyMatch=F
     e.g.: global_ocean.90x40x15/input/pickup.0000036000.meta
    b) a meta file describing the content of the associated pickup file
     e.g.: tutorial_global_oce_biogeo/input/pickup.0004248000.meta
o pkg/mdsio & pkg/rw:
  - new routine to read a meta file ; new set of routine to read
    Multiple-fields file (with meta file).
o added open boundary conditions capability for seaice
    HSNOW, HSALT, UICE, and VICE

checkpoint59i (2007/10/21)
o adjoint:
  * fix multiDimAdvection adjoint 
    (partial recomputation problem by TAF for fVerT(:,:,kDown)
    and comlev1 size definition (maxpass vs. max. number of tracers)
  * verification/global_ocean.90x45x15 adjoint now tests
    NLFS and multiDimAdvection using DST3 (=30)
  * verification/lab_sea now tests multiDimAdvection using DST3 (=30)
o pkg/kpp: add "_d 0" to real constant (if missing); 
  update output of exp: natl_box (10.digits); vermix (std, 7.digits)
  and lab_sea, 3.FW (only 6,4,6 digits match) & AD (8.digits).
o prepare for "clever pickup" implementation: add new header file "RESTART.h"
  for internal parameters related to restart process (formerly from PARAMS.h)
  and add startAB parameter to argument list of S/R ADAMS_BASHFORTH2.
o more standard interface to {PKG}_WRITE_PICKUP with pickup suffix passed
  as argument. (only atm2d & obcs write_pickup have not yet been updated)
o pkg/monitor:
  - use GLOBAL_SUM_TILE instead of _GLOBAL_SUM
  - fix mon_stats_rs (statistics over the full domain, even where field is zero)
  - account for deep Atmosphere factor and density factor (anelastic)
o added open boundary conditions capability for seaice HEFF and AREA
o pkg/shelfice: add option for convservative form of Hellmer&Olbers (1989)
  thermodynamics
  - requires a little reorganization, which affects the testreport results 
    of isomip.htd (only 7 digits of cg2d agree) => update/modify experiment,
    so that now the conservative form is tested
  - add a few comments
o add missing cvs Header: or Name: in eesupp/*, pkg/* & verification/code*
o add a little bit of code to gad_os7mp_adv_?.F to help vectorization
o add new diagnostics to seaice: advective, diffusive fluxes (only for
  multidim-advection, for scheme 2 they are not filled) and transports, 
  thermodynamic growth rates
o change units of EmPmR (inside the code, + within coupling interface)
  from m/s to kg/m2/s (mass flux) but leave input file unchanged.
  Affects results @ truncation level (cg2d match) and update output of 
   experiments: lab_sea(6), global_ocean.90x40x15(10),
  global_ocean.cs32x15(11x3,10), natl_box(11), tutorial_global_oce_latlon(11)
  + adjoint results: global_ocean_ebm(11) and lab_sea (12).
  Coupled set-up: allow to restart from previous pickups (cpl_oldPickup=T).
  Next: will retire convertEmP2rUnit (simply using mass2rUnit instead).

checkpoint59h (2007/09/29)
o pkg/exf: 
  - improve vectorization by moving if-statement out of loops in
    exf_mapfields, exf_radiation
  - exf_bulkformulae.F: introduce 2D fields and vectorize code
o pkg/kpp: added the salt plume scheme (ALLOW_SALT_PLUME) to KPP package
o testreport: 
  - allow to test for Qnet & SeaIce monitor output; clean-up ALLOW_BULK_OFFLINE 
    monitor & update offline_exf_seaice exp. output.
  - AD testing: pass/FAIL according to Grad. output accuracy (instead of Cost)
o pkg/seaice:
  - bug fix in the evp solver: boundary conditions were affected be
    masking of zMax/zMin (changes results)
  - minor bug fix in boundary conditions in seaice_calc_strainrates 
    (changes results for no_slip)
  - seaice_lsr.F: make interpolation of eta dependent on boundaries
  - replace hardcoded lower limit for zeta (zMin) by runtime parameter
  - add a test to lab_sea, that tests the Hibler and Bryan (1987) ocean
    stress formulation and no-slip boundary conditions
o pkg/ptracers: Temporary fix for PTRACERS_useGMRedi & PTRACERS_useKPP
  in gad_calc_rhs.F ; add few safety stops in initialisation phase.
o pkg/seaice: a first HSALT time stepping equation has been checked in
o pkg/seaice: replaced maskW with seaiceMaskU and maskS with seaiceMaskV
  in seaice_lsr.F; this solves the pkg/seaice-pkg/obcs problem
  without requiring DO-IF statements
o pkg/thsice:
  use continuous power-law function for partition of energy between lateral
  melting/freezing and thinning/thickening ; old code using step function
  still available with #undef THSICE_FRACEN_POWERLAW
  update output of exp: aim.5l_cs.thSI, global_ocean.cs32x15.icedyn & .thsice
o testreport: change AD testing : check against results/output_adm.txt
  using same scripts as for forward test.

checkpoint59g (2007/09/17)
o adjoint testing: in preparation for changing testreport:
  - output format: cost and grad written on separated lines
  - ad output results in directory "results" (instead of "results_ad")
o pkg/seaice: adding ice salinity HSALT as a prognostic variable
o pkg/seaice: changes for using pkg/seaice with pkg/obcs
o pkg/ecco: allow user defined cost function contributions 
o testreport:
  Allow to choose (per experiment) the list of tested output variables
   and the main variable (used to issue a pass/FAIL ) ;
  - for now, done by adding the specific list in file: [exp]/input/tr_checklist
  - default is unchanged: >cg2d< , (T,S,U,V,5 tracers)_[min,max,mean,StD] ;
  Also modify printing of summary:
   a) ">" NN "<" indicates the "main" variable (used for pass/FAIL)
   b) echo the list of tested variables in the individual summary.txt of
      each experiment.
o new S/R GLOBAL_SUM_TILE to compute global sum independently of number of
  threads and number of processes (with #define GLOBAL_SUM_SEND_RECV)
  (but still depend on the tile decompostion of the domain).
o pkg/seaice: change a discretization detail to make the B-grid code 
  "more symmetric". This change is likely to remove all "ridges/leads" that 
  where quasi-aligned with the grid in B-grid solutions. It may also be 
  the solution to the stress coupling issues with the B-grid.
o each tested exp: add a "run" directory with a standard ".cvsignore" file ;
  remove .cvsignore from input dir. (since testreport no longer run here).
o pkg/thsice:
 - cleaning: move common block out of "THSICE_2DYN.h" (removed) to "THSICE_VARS.h"
 - fix reshaping of sea-ice just after advection:
   melt all the ice only if ice-volume is too small.
 - re-visit lateral/thinning repartition of melting (modifs from May 04, 2007):
   prevent lateral melting if sea-ice fraction is too close to iceMaskMin ;
 and update experiment global_ocean.cs32x15.icedyn (+start from pickup files).
o external_forcing_surf : extend the use of salt_EvPrRn & temp_EvPrRn (fresh-water
  tracer content) to linFS or no RealFreshWaterFlux ; default remains unchanged.
o define mass2rUnit & rUnit2mass as units conversion factor, used for surface 
  forcing. mass2rUnit: from mass per unit area [kg/m2] to r-coordinate unit
  (z-coord: =1/rhoConst ; p-coord: =gravity) ; rUnit2mass is just the reverse;
  and remove horiVertRatio (& recip_horiVertRatio). Affects truncation error
  of exp. global_oce_in_p: 10 16 16 14 16 13 16 16 16 13 13 13 16 13 13 12 16
  -> update output.txt
o pkg/cd_code: add brackets in multiple terms sum (S/R CD_CODE_SCHEME):
 this affects truncation error: -> update output.txt of exp:
  global_ocean.90x40x15 (fw&adm), lab_sea (fw&adm) & lab_sea.lsr,
  ideal_2D_oce, isomip.htd, natl_box, tutorial_global_oce_latlon.

checkpoint59f (2007/08/21)
o pkg/autodiff: zero_adj resets an ajoint variable to zero (in adjoint mode) 
o pkg/ctrl: ctrl_bound  forces parameter corrections to stay in 
  a bounded range (in forward mode)
o pkg/ecco, ctrl, autodiff and mom_common:
 internal parameter controls, completements of implementations
o add few EXCH S/R (UV_BGRID, UV_DGRID, SM) for B & D-Grid velocity & 2nd Moment Sxy.
o use UV_BGRID exch for dxV,dyU: for now, only with pkg/exch2 & forward ;
  (not seem any difference in testing results).
o pkg/cd_code: use the right EXCH calls (for CS-grid); but problem remains 
   at face corners.
o pkg/generic_advdiff: 
 - in GAD.h, define as parameters (iMinAdvR,iMaxAdvR,jMinAdvR,jMaxAdvR)
  loop range indices for computing vertical advection tendency
  and do the calculation in the interior only (no overlap) ;
  for now, only implemented for SOM advection (to save CPU time).
 - add argument "withSigns" to S/R FILL_CS_CORNER_TR_RL (needed for SOM_xy moment)
o exch2 adjoint
  First set of changes:
  - add exch2 hand-written adjoint templates
  - exch2 hand-written no longer use TAF-flag 'nownew_arg'
    This will require cleanup in pkg/autodiff/*.F
    (changed routines currently kept separate in verif. code/)
  - Comment all relevant #ifndef ALLOW_AUTODIFF_TAMC
    that used to hide exch2 or cubed-sphere specific code
    (commented via 'cph-exch2')
o pkg/seaice
  - Close southern and western boundaries for UICE/VICE when useOBCS=.TRUE.
o pkg/bulk_force: fix loading into Qsw of Short-Wave flux; and update 
   output of global_ocean.cs32x15.thsice .

checkpoint59e (2007/07/26)
o exch2: new S/R that only use the cube-tracer (center-position) exchange:
  for B-grid vector (not yet tested) and C-grid vector (<- only used
  when option W2_USE_R1_ONLY in W2_OPTIONS.h is defined).
o starting implementation of Duffy et al. (GRL 1999) salt plume scheme
  (#ifdef ALLOW_SALT_PLUME)
o gather_2d/scatter_2d: removed halo regions
o gmredi: add option (GM_taper_scheme='fm07') for Ferrari & McWilliams 2007
  scheme and the corresponding test case (under front_relax dir). For now,
  only available with Skew-flux form and not yet tested in realistic set-up.
  adjoint: store directives updated, but gradient checks deteriorated,
  so maybe GM/Redi adjoint is now broken.
o seaice adjoint
  * add AREA, HEFF, HSNOW as control variable
    (should not change lab_sea results)
  * CTRL_OPTIONS.h needs new flag: CTRL_SET_OLD_MAXCVARS_40
o pkg/seaice:
  * added computation of saltFlux in seaice_growth;
    For time being, sea ice salinity is assumed constant
    contribution of snow flooding to freshening of sea ice is neglected.
    SEAICE_salinity is set in SEAICE_PARM01 of data.seaice and it
    defaults to 0.0 in order to maintain backward compatibility.
    Typical values for SEAICE_salinity are 4 to 10 g/kg.
  * replaced dRf(1) with dRf(kSurface)*hFacC(kSurface) in seaice_growth.F
  * added SEAICE_availHeatFrac, which specifies fraction of surface level
    heat content used to melt or grow ice
  * commented out cap of HICE: it helps keep ice thinner
  * reintroduced cap of HEFF via MAX_HEFF and SEAICE_CAP_HEFF option
  * applied OBCS T/S mask to HEFFM sea ice mask

checkpoint59d (2007/06/21)
o standard name: {PKG}_DIAGNOSTICS_STATE to fill diagnostics array
 for {PKG} state variables, and called from DO_STATEVARS_DIAGS.
 (keep {PKG}_DIAGNOSTICS_FILL for non-state variables diagnostics)
o pkg/gmredi (gmredi_readparms.F): add some missing "_d 0"
 and change default value of parameter "GM_Small_Number";
 update output of exp: lab_sea (x2), cfc_example, global_ocean.90x40x15,
   global_ocean.cs32x15 (x4), global_ocean_ebm, global_with_exf,  
   tutorial_global_oce_biogeo, tutorial_global_oce_latlon
o pkg/ecco: cost function when applying pkg/smooth to controls
o pkg/ctrl: add forcingPrecond run time parameter
o pkg/seaice:
 - replace ZMIN=4.e8 with ZMIN=0. in dynsolver.F as in C-grid code
 - fix bug in metric terms of u-equation in LSR solver (implicit part), 
   changes verification/lab_sea
 - rearrange implicit part of u-equation in LSR solver to make it easier to
   read, understand, and debug. This causes changes at the truncation level.
 - fix (serious) bug in the boundary conditions (sign error in the implicit 
   part) of the LSR solver. Changes all LSR results.
 - fixed problem with HSNOW initialization to avoid thick snow when AREA
   is initilized with small values - does not change lab_sea results.
 - added HsnowFile initialization capability
o pkg/smooth: addition to model/src and pkg/ctrl so allow 
 initialization of pkg/smooth and application to control vector
o pkg/seaice: fix another bug in the LSR no-slip boundary conditons
o dependencies: pkg/profiles requires pkg/cal
o pkg/profiles:
 - added option ALLOW_PROFILES_GENERICGRID
     -> pkg/profiles can thus be used with any grid (e.g. cs32x15) assuming
     that interpolation information (grid points and coefficients) is provided 
     within the netcdf input files.
     -> sample matlab scripts can be found in MITgcm_contrib/gael
     that allow you to prepare netcdf input files.
 - also modified: cleaner include statements, cleaner error print statements, 
   cleaner stops when error, and more tests of the netcdf input files consistency.
o additional test (in global_ocean.cs32x15) using seaice+thsice pkgs.
o pkg/seaice:
 - move seaice-diagnostics from seaice_do_diags to do_statevars_diags; this
   requires a new routine: seaice_diagnostics_fill.F
 - make sure that seaice does not move if not forced (pressure replacement
   method, Hibler and Ip, 1995), changes results
 - and new damping criterion for EVP solver according to Hunke, JCP, 2001
 - SEAICE_evpDampC = > 0. turns it on (615. is the recommended value). 
   It is turned off by default (=-1.), because it changes the results.
 - make it possible to read AREA from a file, too.

checkpoint59c (2007/06/04)
o add S/R and diagnostics for oceanic mixed-layer depth
o move GMRedi call after all vertical mixing schemes (including KPP)
o pkg/thsice: 
 - ensure iceMask > iceMaskMin : this problem appeared after May-04 modifs
  (melt only laterally if thin ice): update output of global_ocean.cs32x15.thsice
o pkg/obcs:
 - bug fix for balance code
o pkg/seaice:
  - allow values of SEAICE_elasticParm > 1
  - add new parameter SEAICE_evpTauRelax as an alternative 
    to SEAICE_elasticParm
  - make lsr boundary conditions free slip (by default), changes result
  - add code for no slip boundary conditions for lsr
  - set minimum of zeta to zero (and not 4e8) (changes results)
  - add a cap on AREA after advecting AREA if seaice_growth is not called
o change calculation of Visbeck K:
  - no longer depend on tapering scheme; instead, compute slope (limited 
    by GM_maxSlope). this is equivalent to what was comuted before with
    clipping or linear tappering.
  - fix vertical averaging (wrong by 1/2 level)
  - leave the old version (but will not be maintained) within
    #ifdef OLD_VISBECK_CALC / #endif
  - update output of exp. ideal_2D_oce
o change error catch in calc_r_star to improve vectorization
o exf runoff and seaice: remove ALLOW_SEAICE from exf pkg files and
  add #define ALLOW_RUNOFF in SEAICE_OPTIONS.h (when not using exf).
o adjoint:
  Re-organized adjoint checkpointing according to Matt Mazloff
  (but with modifs/completions/cleanups)
  Storing is now bundled into large arrays to optimized I/O
  (and second step in cleanup of the_main_loop)

checkpoint59b (2007/05/16)
o coupler (pkg/atm_ocn_coupler, pkg/ocn_compon_interf, pkg/atm2d):
  - export/import (between ocean & coupler) fields needed for ocean DIC.
o pkg/seaice: 
  - get rid of three more exchanges seaice_calc_viscosities (required 
    different loop boundaries in seaice_lsr and seaice_ocean_stress)
  - bug fix in seaice_ocean_stress (update of lab_sea required)
  - reduce loop boundaries to necessary minimum also in seaice_evp
  - go back to the old way of computing deltaC/Z as the adjoint likes that 
    better
o Refresh of tutorial_global_oce_latlon (includes changing salinity-like
  passive tracer to an Age Tracer) + update output.txt
o pkg/exf:
  - implement A-grid / C-grid selection for wind-stress input files.
  - clean-up exf_wind.F (remove us, use wspeed instead ; add wStress)
  for now, in exf_bulk_largeyeager04.F only :
  - change implementation for case where windspeed + 2. components wind-stress
    are read-in. AND use rhoConstFresh to convert evap.
o pkg/seaice:
  - use correct EXCH_UV for wind-forcing (on A-grid).
  - change SEAICE_OPTIONS.h to limit the number of option combinations (regarding
    SEAICE_EXTERNAL_FORCING & SEAICE_EXTERNAL_FLUXES); add corresponding stops.
o pkg/exf:
  - default EXF options are now set in EXF_OPTIONS.h (ifndef ALLOW_AUTODIFF_TAMC)
  EXF_INTERPOLATION: 
  - merge global_with_exf/code version of exf_interp_read.F
    to the main code ; 
  - Add new option: EXF_INTERP_USE_DYNALLOC to use Dynamical Allocation when 
    reading the file ; Important: This options needs to be defined to recover 
    previous code.
    otherwise, use fixed size array to read in (size=exf_interp_bufferSize).
  - no longer loose real*8 precision along the way when using exf_iprec=64.
o pkg/seaice: rearrangement of common blocks (really needs more cleaning up)
  - change discretisation of evp-solver in order to avoid another exchange
    (changes lab_sea) and clean up a little
  - replace SQRT(MAX(deltaC,SEAICE_EPS)) by MAX(SQRT(deltaC),SEAICE_EPS) 
    help the adjoint (this also changes the results slightly)
  - add a few "_d 0" where they had been missing in seaice_evp.F
  - cleaning up: remove unused seaice_calc_rhs.F
o pkg/exf: some cleaning-up:
  - change various "constants" into runtime parameters
  - cleaned-up Large&Yeager04 routine which should eventually
    replace exf_bulkformulae.F (changed names of S/R and CPP)
    and merged various ALLOW_ATM_WIND options
 only used with thsice pkg (in thsice_get_exf.F):
  - implement fixed turbulent transfert Coeff over ice (as in Large&Yeager04)
    which are used when useStabilityFct_overIce=TRUE (= the default)
  - change default values of ice & snow emissivity and scale downward LW
    by ice & snow emissivity.
o pkg/thsice:
 fix few little problems, in thsice_calc_thickn.F:
  - growth vertically (and not laterally) if iceFrac == iceMaskMax
  - melt only laterally if hIce < hThinIce (as the comments say)
  and in thsice_extend.F:
  - allow to form ice even when iceFrac == iceMaskMax (by increasing thickness)
  - start to form ice as soon as the minimum ice-volume is reachable.
 update output of test-exp: aim.5l_cs(thSI), global_ocean.cs32x15(thsice), 
  and cpl_aim+ocn
o pkg/kpp
 - move computation of surface related input fields to KPP into a new
   subroutine kpp_forcing_surf.F
 - remove wrong (within bi,bj loops) EXCH calls.
 - little cleaning (add argument myThid in last position, cvs header ...)
 - for now, fix conservation problem by exchanging KPPviscAz (may not 
   be the best fix)
o pkg/seaice
 - check for inconsistent evp parameter/cpp-flag combination
 - remove leftover errIO flat for obsolete name list error handling
o OpenAD
 - changed verification/OpenAD to full baroclinic setup (including GM/Redi)

checkpoint59a (2007/05/01)
o pkg/seaice: some parameter clarifications and a little bit of clean up
o pkg/thsice: rename run-time parameters:
   himin       -> hIceMin
   himin0      -> hThinIce
   hihig       -> hThickIce
   i0          -> i0swFrac
   transCoef   -> bMeltCoef
   frac_energy -> fracMelting
  add new parameters: hNewIceMax, fracFreezing, dhSnowLin
   with default values (for now) that do not change the results.
  remove old version of thsice vars advection in pkg/seaice.
o in FFIELDS.h: 
  - replace #ifndef ALLOW_EXF  by #ifndef EXCLUDE_FFIELDS_LOAD
  - make pLoad & sIceLoad always available (but still only used if
     ATMOSPHERIC_LOADING is #define).
o pkg/kpp: replaced _KPP_RL with _RL
o bug fixes for vertical diffusivity computations when both KPP and
    3D diffusivity arrays are used; pkg/kpp/kpp_calc_diff_s & _t.F
    are no longer updating the vertical diffusivity array
    (passed as argument) but are (re-) setting those arrays.
o pkg/seaice: fix bug in evp solver, while doing that
  - change (improve?) discretization of stress computations for both
    cgrid-lsr and evp solver
  - add a new routine to compute strain rates
  - the above changes lab_sea results
  - add no slip conditions for evp solver (off by default), lsr-version
    may follow
  - fix exchange for shear at Z-points (does not change lab_sea)
  - retire SEAICEuseEVP, instead turn on EVP by setting SEAICE_deltaTevp
    (to force the user to pick a time step since there is not "safe" way
    of choosing it)
  - add principal stress diagnostics
  - rearrange fields for evp a little to avoid having to call a: too many 
    exchanges and b: exchanges for stress trensor components which we do 
    not have.
  - modify Hibler+Bryan (1987) stress coupling so that it reuses information
    of evp, complete rewrite for lsr case (latter is does not yet work
    in all cases)
o pkg/kpp: add code to have mixing in shelf ice caverns
  - add myThid to all kpp routines (long overdue)

checkpoint59 (2007/04/19)
o pkg/exf: 
  - fix wind-stress location: defined on A-grid (if ALLOW_ATM_WIND &
    ALLOW_BULKFORMULAE or USE_EXF_INTERPOLATION), otherwise, defined on C-grid
  - move exf header files from lower_case.h to UPPER_CASE.h ; 
    add missing cvs Header & Name
  - add adjoint routines and flow dirs for newly used exch_uv_agrid routines
  - add namelist param. selectStressGridPosition, exf_monFreq
  - retire many _CLIM routines, and remove data.exf_clim 
    + params moved to data.exf
    + climsst, climsss now handled by exf_set_gen, i.e.
      climss?period=0 refers to constant field,
      climss?period=-12 to monthly forcing
  - split up namelists in data.exf
o pkg/seaice:
  - remove seaice_exch and seaice_exch_uv
  - remove superfluous exchange of theta
  - add myThid to seaice_budget_ocean/ice
  - add new interface for atmospheric wind forcing (C-grid only)
    + new routine
    + two new field (taux, tauy for stress over ice)
    + removed one global field (DAIRN) for C-grid case only
o pkg/thsise
  - 2nd set of modifs for thsice adjoint in conjunction with exf
o enable runtime flag useEXF (useCAL is set to .T. if useEXF=.T.)

checkpoint58y_post (2007/04/15)
o Added capability for latitudinal dependence of Bryan and Lewis, 1979
  vertical diffusivity, similar to that in MOM4; turned on using
  #define ALLOW_BL79_LAT_VARY in CPP_OPTIONS.h and specified using
  diffKrBL79*, diffKrBLEQ*, and BL79LatVary in runtime data file.
o Added capability for 3D specification of background vertical diffusion
  coefficient.  This is done by (i) #define ALLOW_3D_DIFFKR
  in CPP_OPTIONS.h and (ii) specifying file diffKrFile in runtime
  "data" file that contains the 3D vertical diffusivity coefficients.
o ice dynamics (pkg/seaice) with thsice thermodynamics:
  - add code within pkg thsice to advect & diffuse sea-ice fields
  similar to (and will replace) what has been added in  seaice_advdiff.F,
  but: - conserving Mass, Heat & Salt.
       - better when using non-linear advection scheme (not yet fully tested)
       - can also be used in atmospheric set-up (for now, only the diffusion).

checkpoint58x_post (2007/04/04)
o IO option for global-file compact format:
  - add options when generating topology (utils/exch2/matlab-topology-generator)
  - add I/O capability (pkg/mdsio).
  - adapt utils/matlab/rdmds.m to read this format.
  for now long-line format not yet supported by pkg/mdsio (& exch2).
o shelfice: add a few diagnostics

checkpoint58w_post (2007/03/13)
o p-coord. non-hydrostatic using reference profile for w <-> omega conversion:
  rVel2wUnit & wUnit2rVel are computed from reference profile Tref,Sref
  (and replace horiVertRatio in NH code).
  Update output of exp.: tutorial_global_oce_in_p (useNHMTerms !) 
                     and tutorial_plume_on_slope (sensitive to truncation)
o seaice: if ALLOW_ATM_WIND is undefined use wind stress
  directly to drive seaice model (C-grid only)
o exf: when input wind-stress (#undef ALLOW_ATM_WIND):
 - reintroduce computation of wind from stress, 
 - compute tau (in exf_bulkformulae.F) from windstress averaged to 
   mass points to avoid tau = 0
 - fix serious bug: (1/3) in Fortran is not the same as (1./3.)
o rdmnc.m: make it work with "global" files created with gluemnc
o rdmnc.m : some improvements in dealing with singleton dimension
  (tested on all testreport mnc output files).
o genmake2: disable pkg/profiles if netcdf test fails.
o cpl_aim+ocn exp.: use consistent rhoConstFresh in Atm & Ocn; update output.
o move call to cal_readparms up to make calendar parameters/variable available
  to all packages

checkpoint58v_post (2007/02/08)
o change EOS (from POLY3 to JMD95P) in global_ocean.90x45x15 to get
  useDynP_inEos_Zc tested.
o pkg/exf: changes to properly interpolate/mask/scale initial fields
o utils/matlab/cs_grid/read_cs: routines to speed up reading of CS510 fields
  and portions thereof.  See read_cs.txt for description and examples.
o utils/matlab/cs_grid/bk_line: to compute transport through passages,
  add a script (grt_circ_bkl.m) to generate broken-line between 2 points,
  following the great-circle arc between those 2 points.
o trap un-initialized variable with pathscale compiler on weddell.mit.edu
  (thanks to Constantinos): fix few problems and get (almost) all exp to pass.
o 2nd-Order Moment Advection Scheme (Prather, 1986): first check-in
 - enable by setting #define GAD_ALLOW_SOM_ADVECT (in GAD_OPTIONS.h)
 - used without limiter (AdvScheme=80) or with Prather limiter (AdvScheme=81)
 - still needs work (not working with some options ; efficiency to improve)
   and serious testing.
 - use this scheme for temperature & salinity in 2 advection test exp.:
   advect_xy & advect_xz, respectively.

checkpoint58u_post (2007/01/12)
o new test-exp: fizhi-cs-32x32x40 (40 levels) to replace the 10 levels.
o move call to INI_FORCING from PACKAGES_INIT_VARIABLES to INITIALISE_VARIA.
o testreport: add option "-skipdir" to skip some test.
o exf: when input wind-stress (#undef ALLOW_ATM_WIND), by-pass turbulent 
  momentum calculation.
o gad_advection: fix vertAdvecScheme (if different from advectionScheme)
o some cleaning: usePickupBeforeC35 no longer supported ; remove this option.
  remove checkpoint.F and the_correction_step.F (no longer used);
  do the k loop inside CYCLE_TRACER (supposed to be more efficient).
o add option (linFSConserveTr) to correct for tracer source/sink due to 
  Linear Free surface
o pkg/seaice: fix a bug in the flooding algorithm: turn off the snow machine
o pkg/thsice: fix reading mnc-pickups

checkpoint58t_post (2006/12/30)
o pkg/diagnostics: fix multi-threaded output (when singleCpuIO=F)
o pkg/mdsio:
 - clean-up mdsio_readfield.F & mdsio_writefield_new.F and
   move to new files: mdsio_read_field.F (S/R MDS_READ_FIELD) &
   mdsio_write_field.F (S/R MDS_WRITE_FIELD);
 - fix multi-threaded singleCpuIO option in MDS_WRITE_FIELD
 - collect old S/R  in one file: mdsio_rw_field.F (now just a call to
   either MDS_READ_FIELD or MDS_WRITE_FIELD )
 - new S/R (to replace MDSWRITEMETA), which allows to write more
   informations (variable names, time ...) to meta files.
 - modify rdmds.m to give back the meta file content.
o pkg/diagnostics: change vertical interpolation to be safer, and more
   flexible (define p-levels to interpolate to in data.diagnostics);
  add argument to S/R DIAGNOSTICS_GET_POINTERS to catch the right 
   diagnostic pointer.
o pkg/seaice: more cleaning up of seaice_growth, added many comments
o pkg/exf: put runoff0 and runoff1 into the appropriate common block
o fix multi-category seaice:
 - change cpp flag SEAICE_MULTILEVEL to more meaningful name: 
   SEAICE_MULTICATEGORY
 - fix short wave heat flux
o pkg/seaice: change default (SEAICE_OPTIONS.h): use C-grid dynamics
   and allow to use EVP solver. Change forward lab_sea: test both EVP 
   solver and LSR solver, and use C-grid dynamics (like lab_sea adjoint)
o Initial check-in of lab_sea adjoint
  (very similar to natl_box_adjoint/code_seaice)
  * used C-grid and EVP solver
  * used KPP, GM/Redi
  * uses inAdExact=.TRUE.
  * gradient checks fail for both ADM and TLM
    due to sensitive snow melt code in seaice_grwoth (look for "JZ")
    f.d. gradients actually seem more problematic than ADM, TLM gradients;
    issue is related to forward mismatch between g77 an ifort
o pkg/seaice: overhaul of thermodynamics
 - growth.F and groatb.F are replaced by new routine seaice_growth.F
 - budget.F is replaced by two new routines seaice_budget_ocean/ice.F
 - move a few global fields out of SEAICE.h into seaice_growth.F and
   make them 2D (FICE/QNETO/ ...)
 - remove FO (it is the same as QNETO)
 - introduce a few local fields to avoid modifying external fields such
   as atemp, etc.

checkpoint58s_post (2006/12/11)
o pkg/exf: moved exf_init_runoff.F to exf_init.F and exf_set_gen.F
  changed exf_set_gen.F so that
    genperiod=0 means input file is one time-constant field and
    genperiod=-12 means input file contains 12 monthly means
o CG2D: use pre-computed solver main-diagonal (stored in common block);
  this affects truncation error ; generate new output file for exp. which
  fails: exp4(12d), fizhi-cs-aqualev20(12d), front_relax(10d),
    global_ocean.90x40x15(10d), global_ocean.cs32x15(10d).thsice(11d).viscA4(10d),
    ideal_2D_oce(10d), internal_wave(09d), isomip.htd(11d), matrix_example(07d),
    MLAdjust(4x11d,12d), natl_box(11d), rotating_tank(12d),
    tutorial_global_oce_in_p(10d), tutorial_plume_on_slope(11d),
    vermix(12d).ggl90(12d).my82(11d).opps(12d).pp81(11d)
o start implementation of deep-atmosphere and anelastic formulation
o verification: remove 2nd copy of input files and use script "prepare_run"
  to make a symbolic link to the 1rst copy (reduce downloaded size by ~81.M)
o mom_common/vecinv/fluxform: fix a few initialisation isssues
o profiles: fix for multithreaded case

o diagnostics: rename few diags:
  s/'PRESSURE'/'RCENTER '/g
  s/'TICE    '/'oceFreez'/g
  s/'TAUX    '/'oceTAUX '/g
  s/'TAUY    '/'oceTAUY '/g
  s/'SWFLUX  '/'oceQsw  '/g
  s/DIFx/DFxE/g
  s/DIFy/DFyE/g
  and add few ocean-forcing diagnostics:
  atmPload, sIceLoad, oceQnet, oceFWflx, oceSflux, surForcT & surForcS
o modifications to pkg/seaice/growth.F and budget.F, which change results of
  lab_sea experiment: HSNOW was sometimes treated as effective and sometimes
  as actual snow thickness.  It now refers everywhere to effective snow
  thickness, meaning that for non-zero AREA, actual thickness is HEFF/AREA.

checkpoint58r_post (2006/11/17)
o modifications to pkg/seaice/growth.F, which change results of
  lab_sea experiment: fixes pertain to melting snow over open water, to
  masking EVAP under sea ice, and to using the correct AREA variable for
  computations of EVAP, PRECIP, HSNOW, and GHEFF
o add ability to read bathy, salt, and theta using MNC (off by def)
o add flooding algorithm and advection of HSNOW for pkg/seaice;
  both are turned off by default and do no change any results
o seaice advection with pkg/thsice: a step toward the use of non-linear 
  advection scheme, but #ifdef or commented out for now (requires more EXCH).
o use standard version of PTRACERS_INI_VARIA in tutorial_tracer_adjsens
  (identical results) and the standard version of EXTERNAL_FIELDS_LOAD
  in natl_box (affects results @ truncation level: update output.txt)
o multi-threading and IO:
  - replace some call to MDSIO S/R by the corresponding READ/WRITE_FLD S/R.
  - remove most of BEGIN_MASTER/ END_MASTER around READ/WRITE_FLD S/R calls
    (needed to work with SingleCpuIO): tested in all verif. exp.
o GAD: use simpler DST3 formulation as default (old version left within #ifdef)
  affects the results (but none of the verification test uses this scheme).
o Adding some pkg/diagnostics capability to pkg/seaice
  (will certainly be subject to changes)
o ctrl: adding new control variables:
  lwflux, lwdown, evap, snowprecip, apressure, runoff

checkpoint58q_post (2006/10/20)
o added CPP_EEOPTIONS.h flag DISABLE_MPI_READY_TO_RECEIVE.  Speeds up
  1/6-deg Southern Ocean configuration by 8% on IBM Datastar and
  high_res_cube configuration by 4% on Columbia.
o clean-up multi-threaded problems (reported by debugger tcheck on ACES);
  add (in global_with_exf/code) a version of EXF_INTERP_READ without
  dynamical allocation (seems to work in multi-threaded).
o new function "MASTER_CPU_IO" (=T if master thread & master CPU, if using
  single CPU io) so that TAF does not have to see EESUPPORT.h
o pkg/seaice: implement sea-ice loading (when using RealFreshWaterFlux)

checkpoint58p_post (2006/09/08)
o obcs: stop if obcs is used with useCDscheme = .true.
o shelfice: 
 - fix a sign error so that no slip at shelfice interface works
 - remove stop for combination non-hydrostatic code and shelfice. That does 
   not mean, that the results are correct, but at least they are numerically
   stable
o diagnoctics: modify UVELPHI and VVELPHI to include hfac (i.e. mass-weighted)
o added adjoint exch routined for all exch*3d* routines
  and updated flow directives

checkpoint58o_post (2006/08/28)
o replace calls to EXCH_Z & EXCH_UV_AGRID: use the new _3D_ version ;
  remove old subroutines (_XY_ & _XYZ_); update the adjoint version.
o change controling S/R for writing pickup file (new S/R do_write_pickup)
  and clean-up reading/writing of pickup files.
o fix local version of read/write pickup (NH part) in rotating_tank/code
o simplify EXCH interface:
 - change _XYZ_ interface to _3D_ subroutine (with 3rd dim in argument list)
 - not often used EXCH S/R (exch_z, exch_uv_agrid): keep only the _3D_ version
o added the regrid package
o shelfice: 
 - add a simple boundary layer scheme to reduce noise
 - fix the indexing in shelfice_u/v_drag so that there will be actually drag

checkpoint58n_post (2006/08/14)
o fix globalArea multi-threaded calculation: need to apply GLOBAL_SUM to 
   local variable (not in common block).
o lot of small changes for multi-threaded. Most tests (using OMP & ifort) pass. 
  - still problems with pkgs: mnc, exp2, dic, cal, exf (and probably more); 
  - still BEGIN_MASTER/END_MASTER to remove around READ/WRITE_FLD S/R calls
    to work with SingleCpuIO.
o add "_d 0" to real constant of pkg/cfc subroutines ; 
   update exp. cfc_exemple & tutorial_cfc_offline output files.
o multi-threading and IO:
  - all threads call READ_FLD S/R (needed if using SingleCpuIO): 
    (no BEGIN_MASTER/ END_MASTER around the call, but inside MDSIO S/R.
  - barrier before and after reading.
  - stop if other than master is calling MDS_WRITELOCAL (if #undef IO_THREAD_SAFE)
  - avoid using MDS_WRITELOCAL for LAND pkg output.
  - new S/R AIM_WRITE_PHYS (replaces AIM_WRITE_LOCAL) to write AIM physics
    common-block variables ; Allows multi-threading with master-thread IO.
o change default MAX_NO_THREADS from 32 to 4 ; 
  and stop cleanly when MAX_NO_THREADS is too small. 
o add S/R BAR_CHECK to check multi-threaded barrier synchronization

checkpoint58m_post (2006/07/17)
o add a Non-Hydroatatic test (with 3-D Coriolis, NHMTerms, biharmonic Visc.
   and side-drag) on CS-grid : global_ocean.cs32x15.viscA4
o make "tutorial_global_oce_latlon" from standard "global_ocean.90x40x15" exp.
   keep global_ocean.90x40x15 (for AD testing) with former secondary test 
   (".qshyd") as the main test (mv output.qshyd.txt to output.txt)
o CVS modules: update MITgcm_verif_basic; remove MITgcm_verif_ocean & _verif_atmos;
    add MITgcm_tutorials (= code + all the tutorials)
o ecco, option to compute cost for total ssh (mean+anom)
o consistent with addition of ptracer and ssh in pkg/profiles
o profiles: adding ptracer and ssh
o testreport: change multi-test output-file name 
  (from output.txt.{name} to output.{name}.txt)
o profiles: now ok for mutli-tiles case
o seaice: add 4 parameters for different advection schemes for area, 
  (effective) seaice thickness, enthalphy, and snow height. Their default
  is the standard parameter SEAICEadvScheme
o calc_gw: 
 - add cosFacU in zonal viscous flux (harmonic.visc.).
 - put back side-drag (call new S/R MOM_W_SIDEDRAG) and output.txt.
   of tutorial_plume_on_slope.
o obcs_calc.F : fix index Pb in OBSeta & OBNeta (Thanks to Gianmaria).
o calc_gw: true flux-form, account for horizontal grid spacing.
  update rotating_tank results, but not plume_on_slope (affected at 
  truncation level, 11 digits).

checkpoint58l_post (2006/07/12)
o calc_gw: 
 - take bi,bj loops outside calc_gw to fix Pb with local array KappaRU,V
 - remove side-drag for now (need to fix it); update plume_on_slope results.
 - fix for partial-cell & non-uniform dz; update plume_on_slope results.
o commit code to make SST/SSS weights spatially variable
  (based on either variable in-situ or variable initial T/S weights)
o pkg/ecco:
  * commit code to relax deviations of xx_theta, xx_salt to 5*sigma,
    now based on horizontally varying weights wthetaLev, wsaltLev
  * cost_averagesflags now returns year indices in addition to day, month
  * sflux balance is performed on annual basis 
    (sflxumm, sfluxmm2, bal_sfluxmm)
  * for SSH anomaly, separate more cleanly contrib from T/P, ERS, GFO,
    including separate counting and multipliers
o pkg/rbcs
  * add all necessary infrastructure for pkg/rbcs levN adjoint checkpointing

checkpoint58k_post (2006/07/06)
o testreport:
 - always build in dir. "build" (if not there, mkdir build instead of building 
   & running in input)
 - run in dir run (if it exists), in build otherwise.
 - call prepare_run (if input/prepare_run exists)
 - run multi-threaded test (with new option: "-mth") if file input/eedata.mth exists.
o pkg/exf modifications to interpolation and rotation routines for more
   reasonable treatment of North Pole singularity: for tracers North Pole
   value is set to northernmost zonal-mean value, for zonal velocity it is
   set to zero, and for meridional velocity it is set to northernmost value.
o pkg/exf/exf_check_range.F
 - add tile index to diagnostics and move stop statement to the very 
   end of the routine. 
o pkg/diagnostics: (diagnostics_main_init.F)
  define title of isomorphic variables according to the current config.
o pkg/thsice with pkg/seaice dynamics:
- fix domain of computation (interior only, required for exf) and do exchanges
- seaice-dynamics forcing: add atmospheric and seaice loading to SSH gradient
o towards a standard way of dealing with multi-threading in MONITOR
  and ${PKG}_MONITOR (all except ptracers_monitor) subroutines.
o Pass variable viscosities (vertical and horizontal, e.g., KPP or Leith) 
   to W momentum equation in nonhydrostatic and quasihydrostatic runs.  
o make exf_monitor & seaice_monitor independant of the main (dynamics) monitor.
o pkg/seaice: fix SEAICEuseEVPpickup parameter (put it in a commom block)
o generic_advdiff: DST advection S/R : use local copy of velocity to compute CFL
   (problems ? with gradient check in bottom_ctrl_5x5 adjoint test)
o tracer advection: 
 - clean-up and simplify calc_common_factors.F
 - make a local copy of velocity and pass it (as u,v,r_Trans) to DST tracer 
   advection subroutine (but still not used within DST advection S/R)
o rename pkg aim_ocn_coupler to atm_ocn_coupler (later on, will be used without aim)

checkpoint58j_post (2006/06/15)
o new driver S/R: LOAD_FIELDS_DRIVER to load external forcing fields
  from file (collects calls previously in FORWARD_STEP)
o move call to SEAICE_MODEL from FORWARD_STEP to DO_OCEANIC_PHYS
o adjoint store dir. adjusted accordingly
o genmake2
  replace target "ad_taf" by $(EXE_AD) ; add $(EXE_AD) to the make CLEAN list.

checkpoint58i_post (2006/06/14)
o pkg/seaice: add parameter that allows to scale/turn off effect of seaice 
  on wind stress (SEAICEstressFactor defaults to 1.)
o Total number of Timers is finite (<=40): comment out 2 non-essential one
  in the_main_loop.F to avoid Pb (e.g., when running fizhi test)
o vector_invariant: fix highOrderVorticity(=4.th.Order) advection 
  on CS-grid: no longer loosing mass.
o exf & curvilinear-grid: no longer modify longitude xC & xG.
o pkg/ggl90: fix sloppy output and fix a bug
o pkg/seaice: added SEAICEuseEVPpickup parameter
  - Set to false in order to start EVP solver with
    non-EVP pickup files when using SEAICEuseEVP
  - fix sign error in diffusion in seaice_calc_rhs

checkpoint58h_post (2006/06/07)
* Modifications for bottom topography control
  o replace hFacC by _hFacC at various places
  o replace ALLOW_HFACC_CONTROL by ALLOW_DEPTH_CONTROL
  o add non-self-adjoint cg2d_nsa
  o update autodiff support routines
  o re-initialise hfac after ctrl_depth_ini
  o works for 5x5 box, doesnt work for global_ocean.90x40x15
* Adding verification for 5x5 box (4-layer) bottom topography control

checkpoint58g_post (2006/06/07)
o pkg/diagnostics: implement "periodic averaging diagnostics" (e.g.,
   used for mean seasonal cycle, mean diurnal cycle); add an example
   in verification/global_ocean.cs32x15/input.thsice/data.diagnostics
o pkg/ggl90: 
  - add parameter (minimum surface kinetic energy)
  - fix bug (avoiding division by zero)
o couple pkg/thsice to pkg/seaice:
  - modify advection in seaice to accomodate new scalar fields to be advected
  - only muliDimAdection scheme work with seaice/thsice
  - mapping of thsice-variables to seaice-variables, back and forth
  - does not break the verification experiments, but does not give the
    desired results either
o pkg/seaice
  - make (default) second order advection a bit less confusing?

checkpoint58f_post (2006/06/05)
o couple pkg/thsice and pkg/exf (as a preparation for coupling pkg/thsice 
  to pkg/seaice): 
  - new routines thsice_map_exf and thsice_get_exf provide the interface
  - add an additional formal parameter to thsice_solve4temp 
o pkg/exf:
  - add new fields wspeed, snowprecip (to be able to couple to thsice)
  - correct Stefan-Boltzmann constant
  - new parameter for longwave surface emittance
  - separate some stuff from exf_bulkformulae into new routines  
    exf_radiation, exf_wind
  - add new parameters and constants: longwave emissivity for ocean, ice 
    and snow, evaporation parameters over ice
  - decouple wind/stress computation from ALLOW_BULKFORMULA: always compute
    either wind from stress or stress from wind
o pkg/thSIce:
- split thsice_step_fwd.F in 2 S/R: thsice_step_temp.F & thsice_step_fwd.F
- put i,j loops inside S/R: THSICE_ALBEDO, THSICE_SOLVE4TEMP, THSICE_EXTEND
   and THSICE_CALC_THICKN
- for now, call to THSICE_GET_BULKF remains inside i,j loops.
- add CPP option: ALLOW_DBUG_THSICE and header file THSICE_DEBUG.h
  to make debugging easier.
- affects results (@ truncation level) of global_ocean.cs32x15.thsice: update output
o pkg/bulk_force: 
  - clean-up comments and parameters ; 
  - add new Bulk-Formulae from Large and Yeager, 2004, NCAR/TN-460+STR ;
o fix bug in aim+thsice albedo: snow & ice thickness arguments were switched;
  generate new output for test-experiment: aim.5l_cs.thSI
o results_ad : rename "output.txt_adm" to "output_adm.txt" and change
  testreport accordingly

checkpoint58e_post (2006/05/17)
o SEAICE_CGRID adjoint done
o R_STAR adjoint implemented.
  * Seems to just work (based on global_ocean.90x40x15/code_ad_nlfs/ )
  * need to sort out init. of h0facc, etc.
o Make pkg/profile fully independent of ecco,cost, etc. stuff
  to be able to use it in pure forward.

checkpoint58d_post (2006/04/21)
o upgrade simple test-experiment to tutorial example:
 step.1: duplicate the experiment and (step.2) will remove the old copy.
  tutorial_barotropic_gyre      <- copy of exp0     (R1:barotropic_gyre_in_a_box)
  tutorial_baroclinic_gyre      <- copy of exp1     (R1:baroclinic_gyre_on_a_sphere)
  tutorial_global_oce_latlon    <- empty for now    (R1:global_ocean_circulation)
  tutorial_global_oce_biogeo    <- copy of dic_example
  tutorial_deep_convection      <- almost like exp5 (R1:nonhydrostatic_deep_convection)
  tutorial_plume_on_slope       <- copy of plume_on_slope
  tutorial_tracer_adjsens       <- copy of carbon   (R1:tracer_adjoint_sensitivity)
  tutorial_global_oce_optim     <- empty for now (David ?)
  tutorial_global_oce_in_p      <- copy of global_ocean_pressure
 some tutorials (R1) were already checked-in under tutorial_examples in release1_branch
o correct a sign problem in cost_scat.F
o obcs and ptracers: fix boundary conditions for advections schemes 
  with larger stencil 
o thsice adjoint: start
o mom_vecinv: add ISOTROPIC_COS_SCALING flags to mom_vi_hdissip for 
  completeness
o mom_fluxform: fixing the mutual use of ISOTROPIC_COS_SCALING 
  and COSINEMETH_III, add comments in default CPP_OPTIONS.h
o ptracers adjoint:
  * avoid extensive recomputatations
  * fix missing re-init. of gptr (missed by TAF)
o obcs: add a flag (OBCSprintDiags, defaults is true) that allows 
  me to turn off the excessive output to STDOUT that this package produces
o move NH metric terms & 3.D Coriolis S/R to pkg/mom_common
  and add those terms in Vector-Invariant formulation.
o in ctrl pkg, if ALLOW_CAL, use monthly mean controls 
  if the control period (xx_hfluxperiod etc) is 0
o in profiles pkg, clean routines and fix details
o in ecco pkg, reading ssh data: 
  fix problem in case the model does not start at iter0=0
o fix mnc-pickup/restart for ptracers
o new package prifiles:
  code to compute profile-based cost by Gael Forget
  (modifs in ecco, ctrl, autodiff)
o Benign bug fix in initialization (spotted by M. Mazloff) of
  ctrl_set_globfld_xz.F ctrl_set_globfld_yz.F

checkpoint58c_post (2006/03/23)
o adjoint: finish NLFS adjoint and provide reference output in
  verification/global_ocean.90x40x15/results_ad_nlfs
o seaice: add an EVP solver following Hunke and Dukowicz (1997) and the 
  documentation of CICE. Turn on by defining SEAICE_ALLOW_EVP in
  SEAICE_OPTIONS.h and SEAICEuseEVP=.true. in data.seaice. Works only 
  with SEAICE_CGRID defined.
o move calendarDumps from "data" to "data.cal" and clean-up the code
  with a simple call to pkg/cal S/R: CAL_TIME2WRITE
o add useEXF & useCAL flags (for now, set in hard-coded way)
o add S/R to compute NH-metrics terms & Coriolis f' in vertical momentum
  (were missing in NH mode, and wrong in quasihydrostatic mode).
  waiting for Chris updated version of calc_gw to add those CALLs.
o fix bug in quasihydrostatic S/R ;
  add a test for this option: global_ocean.90x40x15.qshyd
o new S/R "SET_PARMS": set parameters that might depend on the use of some pkgs.
  (called from INITIALISE_FIXED, after INI_PARMS & PACKAGES_READPARAMS)
o add on/off flag useOffLine for package OFFLINE
o seaice: 
  - modify advection so that it works also on the C-grid
  - extend loop ranges in seaice_lsr and seaice_dynsolver; fixes 
    problem in multi-tile runs with C-grid
  - add flags for clipping ice velocities and/or masking solver forcing
  - fix drag (ocean on ice) formulation and a bug that caused noise in the
    C-grid solver
  - added a few comments to seaice_diffusion.F
  - separate C-grid and B-grid versions more cleanly (UVM and seaiceMaskU/V
    are now exclusive)
  - add a new ocean-ice stress coupling method (Hibler and Bryan, 1987) which 
    required re-ordering the code a little:
   + make DAIRN global variable (defined in SEAICE)
   + move computation of the viscosities eta and zeta into a new separate
     routine (because I need to recompute them in seaice_ocean_stress.F)

checkpoint58b_post (2006/03/13)
o AIM+thSIce: fix sign of Short-Wave through the Ice ; 
  update output.txt of exp. aim.5l_cs.thSI
o various mnc cleanups and improvements:
  + shrink lookup tables by factor of ~4
  + better error reporting when running out of lookup space
  + able to handle longer path/file names (up to 500 chars)
o adjoint:
  - Another overhaul of store dirs. for NLFS to eliminate  "hidden" recomputations.
  - TBD: "hidden" mom_vecinv recomp. in dynamics
o change forcing_In_AB to affects both T,S forcing and Momentum forcing
 (allow to differentiate between forcing components using new integer flags:
  momForcingOutAB=1/0 & tracForcingOutAB=1/0)
 and add new flag to put Dissipation tendency out of Adams-Bashforth.
o ecco
  - enable trend removal from SSH anomaly obs.
o adjoint
  - a fix for PmEpR when #undef EXACT_CONSERV
  - fix of "hidden" recomp. in thermodynamics (no TAF warnings)
  - try to fix "hidden" recomp. in forward_step for NLFS
    (NLFS seems broken sometimes after I checked it in)
o seaice: 
 - add c-grid version of the dynamic solver:
   + three new routines that are the c-grid substitute lsr, dynsolver
     and ostres
   + put a few fields that were local to dynsolver into global common
     blocks, so that I can move the computation of stresses etc into
     seaice_lsr (saves coding but may break the adjoint).
 - replace more hardwired parameters by runtime parameters
 - add ice masks that mask the rhs of the implicit solvers where there
   is no ice (commented out in seaice_dynsolver, because i am not sure
   if this works properly), eventually this should replace the clipping
   of ice velocities in seaice_dynsolver to +/-40cm/s.
o remove the BUILD_INFO.h include from CPP_EEOPTIONS.h and explicitly 
  include it only where its needed
o move balancing of fluxes before the call of external_forcing_surf
o seaice:
  - correct units of turning angles (now they are really in degrees)
  - move computation of GWATX/Y out of main routine into dynsolver
  - initialize GWATX/Y in seaice_init
o Apply mask on Fresh-Water flux (needed for SSH forcing).
  update output.txt of exp. global_ocean_ebm & cpl_aim+ocn (affects cg2d residual) 
o seaice: add runtime flags for turning angles (default to zero)
o Adding runtime parameter to exf/, ctrl/, to remove on-the-fly global mean 
  and trend from exf forcing and ctrl control adjustments
o fix variable aliasing in gad_calc_rhs that cannot be handled by TAF
  (since checkpoint57x_post)
o change the default rotation period to 86164.s = the Earth rotation
o 1rst implementation of Implicit IGW using the 3-D solver (use3Dsolver=T)
  and based on a reference stratification. Tested within hs94.cs-32x32x5.
o seaice advection: add code for choosing between the default (2nd order
  central differences) and multiDim advection schemes provided by
  pkg/generic_advdiff
o seaice:
  - removed all references to SEAICE_GRID.h fields from 
    dynsolver, advect, diffus, lsr, without changing the results of lab_sea
    (cubed-sphere configuration will change a little)
  - grid computations in seaice_init are obsolete now.
  - cleaned up code a little so that is easier to read (hopefully).
  - added new (better?) discretizations of default advection and diffusion
    (turn on with SEAICEuseFluxForm)
  - replace 1 in 3d global fields by kSurface in growth.F
  
checkpoint58a_post (2006/02/13)
o seaice:
  - bug fix in advect.F
o shelfice: 
  - separate shelfice load anomaly from pload (breaks with time 
    dependent forcing), => introduce constant field shelficeLoadAnomaly.
    Its default is 0., but it may be computed more cleverly from (unknown)
    t- and s-profiles (tRef, sRef) and actual EOS. For now this has to be
    done offline. A good approximation of the pressure load anomaly is
    necessary to avoid large initial adjustment processes underneath 
    deep-reaching shelfice.
  - small fix in ISOMIP shelfice_thermodynamics
  - add more sophisticated thermodynamics of Hellmer (1989), this is 
    now the default
  - give a few constants more intuitive names
o add code to balance EmPmP and Qnet at the end of do_ocean_physics. Useful
  if bulk formulae are used in long integration (especially EmPmR). Turn
  on with balanceEmPmR = .true. or balanceQnet = .true. in data, PARM01
  if balancePrintMean, the imbalance that is substracted is printed to
  STDOUT.
o fix bug (typo) in obcs_apply_eta.F
o add a new package shelfice which enables us to model the circulation
  underneath shelf-ice with draughts of hundreds of meters.
 - works
 - to do: + include improved thermodynamics
          + check whether kSurfC (from model/inc/SURFACE.h) can be used
            instead of new field kTopC
          + can we use topoFile, Ro_surf and existing code in ini_depth.F 
            instead of new field R_shelfIce and new code in ini_depth.F
            and ini_mask_etc.F?
          + adjust vertical mixing schemes?
o seaice pkg: 
 - add a cpp-flag to include a simple formula for a salinity dependent 
   freezing point of sea water at the surface
 - change the contents of SEAICE_TEST_ICE_STRESS_1 so that zonal and
   meridional stresses are now different (and hopefully correct)
o AIM pkg: change threshold on large-scale condensation to conserve Heat.
   update results of aim.5l_LatLon test ; fix title & units of AIM diagnostics
   and  change 3 diagnostics names (OSR,OSRCLR,KM -> TSR,TSRCLR,DRAG)
o pkg/diagnostics: add options and parameters for regional-statistics 
   diagnostics ; define regions by reading a region-mask from a file 
   (might add other options later)
o pkg/bulk_force:
 - add option and parameters to use AIM surface-flux formulae.
 - Change loading part: S/R BULKF_FIELDS_LOAD only take care of bulkf_fields ;
   others forcing fields (defined in PARM05, parameter file "data") are loaded 
   from S/R EXTERNAL_FIELDS_LOAD, as usually (with useBulkforce = T or F).
 - initialise all bulkf_fields in bulkf_init.F ; do in-lining of exf_bulkcdn.F 
 - use the right EXCH call for uwind,vwind (to work on CS-grid).
 - re-arrange header files (move parameters from BULKF.h to BULKF_PARAMS.h)
   and parameters (note: calcWindStress replaces .NOT.readwindstress).
 - cleaner interface with pkg/thSIce (new S/R THSICE_GET_PRECIP).

checkpoint58 (2006/01/12)
o add "--embed-source" option to genmake2 which, when the supporting 
  tools can be compiled (as determined by genmake2) will turn on the 
  embed_files package which then embeds the entire MITgcm source code 
  (*.[fFhc] + Makefile) used for the build within the executable
  - requested by CNH but off by default
  - adds a paltry <9MB to the mitgcmuv executable in most cases
  - only writes the output when useEMBEDSRC in eedata is true
o clean up 3-dim. relaxation codes:
  * Fix I/O inconsistency in pkg/rbcs: replace precFloat32 by readBinaryPrec
  * Remove 3-dim. relaxation code from pkg/exf (now use only pkg/rbcs)
  * Thanks to Tom Haine for testing!

checkpoint57z_post (2005/12/31)
o make CG3D solver compatible with Free-surface at k > 1 (p-coordinate):
  affects output (@ truncation level) of exp. plume_on_slope ; updated.
o fix the pickup behavior for obcs in combination with ptracers
o fix a bug in ptracers_external_fields_load
o no AB-2 at the first iteration for Gw (consistent with Gu,Gv,Gt,Gs ...)
  affects results of NH experiments (but all our NH tests have Gw[it=1]==0 !!)
o transfered surface NH pressure to eta field (if exactConserv).
o gmredi: fix bugs in slope tapering ldd97 (depthZ had the wrong sign)
     and update lab_sea output.txt file.
o completing 3-dim. relaxation code: additional term
     1/tau*( theta(i,j,k) - thetaStar(i,j,k) )
  in S/R EXTERNAL_FORCING_T (file external_forcing.F)
  * At compile time, in "EXF_OPTIONS.h" set
      #define  ALLOW_CLIMTEMP_RELAXATION
      #define  ALLOW_CLIMSALT_RELAXATION
  * At runtime in "data", under &PARM03 set (e.g., units in seconds)
      tauThetaClimRelax3Dim = 15552000.0,
      tauSaltClimRelax3Dim  = 15552000.0,
  * 3 cases:
      1) Use a constant-in-time 3-dim. field
      2) Provide 12 3-dim. fields corresponding to Jan., ... , Dec.
      3) Real-time relax. to time-evolving prescribed field
o Adding Laplacian-type smoothness constraint on 
  initial and boundary (forcing) controls (ic, bc)
  * enable at compile-time via 
    ALLOW_SMOOTH_IC_COST_CONTRIBUTION, ALLOW_SMOOTH_BC_COST_CONTRIBUTION
  * enable at run-time via mult_smooth_ic = 1, mult_smooth_bc = 1
  * Absolute scale somewhat unclear so far
  * no area weighting was included since no other cost term does so far

checkpoint57y_post (2005/12/08)
First step for a NLFS adjoint
o initially suppress rStar (new flag DISABLE_RSTAR_CODE)
o new init. routines for calc_r_star, calc_surf_dr
o still need to deal with ini_masks_etc
o testreport seemed happy
checkpoint57y_pre (2005/12/08)

o obcs: always reset wVel & eta (to zero or prescribe it) at the OBs.
o add new package rbcs (for relaxing ptracers at boundaries/depth/surface etc)
o add new offset feature to offline pkg (plus minor cleanup)
o cfc fixes for final year of integration
o clean up GCHEM_OPTIONS.h/DIC_OPTIONS.h (all options should
  be in GCHEM_OPTIONS).

checkpoint57x_post (2005/12/04)
o fix testreport Pb in multiple test experiment.
o cleanup our namelist syntax in verification:
  - make it more F95 standards compliant (some work still needed)
  - allows the vast majority of our tests to work with gfortran
o Non-Hydrostatic:
 - put all NH variables (formerly in DYNVARS.h & GW.h) in NH_VARS.h
 - fix exchange calls for CS-grid using the new EXCH_S3D_RL.
o Allow to apply AB on T,S rather than on AB(gT,gS):
 - implemented within #ifdef ALLOW_ADAMSBASHFORTH_3
 - use the same arrays (gtNm,gsNm) to hold tracer field at previous
   time-steps (if AB(T,S)) and tendencies (if AB(gT,gS)).
 - need a "clever" read_pickup to restart from the other AB formulation
o move local commom bloc /GlobalLo/ (used for singleCpuIO) in EESUPPORT.h 
o remove some unused variables (reduces number of compiler warnings)
o adjoint
  * Disable useVariableViscosity for adjoint for time being
    (there are a number of extensive recomputations)
  * Initialize certain variables needed for adjoint

checkpoint57w_post (2005/11/03)
o pkg/mdsio: use MAX_LEN_FNAM (instead of hard coded 80) for file-names
             fix the singleCpuIO RS version of MDSWRITEFIELD
   and add a WARNING if using globalFiles=T with multi-processors.
o write grid-file(s) in only one format (MDS or MNC): default=MNC (if
  using MNC); can force MDS output by setting writegrid_mnc=F in data.mnc
o tracer advection scheme:
  add DST-2 (=Lax-Wendroff) & 1rst order upwind schemes (the way to get 
   those 2 schemes before, changing GAD_FLUX_LIMITER.h + to recompile, 
   was not very convenient).
  add implicit version for DST-3 & DST3_Flux_Limit vertical advection;  
   (further tests needed for the implicit DST & Flux-Limiter schemes).
o PTRACERS: added namelist parameter PTRACERS_ref in analogy to tRef
  and sRef for convenience, handy, when you want to initialize
  ptracers in a large domain with a constant non-zero value. Also,
  untangle ptracers_init.F a little.

checkpoint57v_post (2005/10/13)
o change dome exp. to use variable viscosity in side-drag terms.
o remove all the files from the cfc_offline test since they are now
  incorporated into tutorial_cfc_offline which has been producing
  identical results for a few days of testing
o add new parameter: sideDragFactor to enable half-slip-side BC
  and change side-drag S/R to use viscosity from mom_calc_visc
  (can switch back by setting sideDragFactor=0.); affects results at 
  truncation level; regenerate output for exp.: global_ocean.cs32x10(x3), 
   global_ocean_ebm, global_ocean_pressure, matrix_example & MLAdjust(x5).
o vorticity & strain are now computed without masking, to account for 
  no-slip-side BC in variable viscosity calculation ; mask is applied
  anyway later on, before computing advection/coriolis terms.
o modify exp4 to test new obcs support for reading from external files
  and for passive tracers
o fix behavior of ptracers_monitor when monitor output is written to a 
  netcdf-file; still not independent of monitor.F (writes in the same
  file).
o change default value of tRef (put a uniform, meaningful value for ocean 
  & atmos) and initialize sRef (was missing, as Martin mentioned).
o Redefine viscC?Leith*.  Change the coefficients of Leith viscosity 
  to be proportional to enstrophy dissipation length.  Thus,
   viscC?leith?_new=pi*(viscC?leith?_old)^(1/3)
  This is now consistent with Smagorinsky and with the manual.

checkpoint57u_post
o OBCS and PTRACERS: add open boundary support for passive tracers
  - either use homogenous (pseudo) v.Neumann conditions or prescribe 
    OB-values from file; this is not different from the way theta and salinity
    are treated
  - however, Orlanski-radiation conditions are not supported, and the model
    will stop if you use pTracers and Orlanski at the same time. 
  - beefed up the rountine obcs_external_fields_load: now only those open
    boundary values are overwritten with values from files for which there 
    are really files, otherwise the OB-fields remain untouched. This makes
    it possible to use different OBs at different ends of the domain (as 
    with EXF)
o reduce number of exch calls in shap_filt (s2). 
o CS-grid: fix divergence contribution to Leith viscosity. Affects (@ 
  truncation level) 4/5 MLAdjust test results (11&12 digits match).

checkpoint57t_post (2005/10/03)
o test biharmonic viscosity + no-slip with exp: global_ocean.cs32x15.viscA4
o finish adding brackets (coriolis S/R, vecinv) in multi-terms sum to get
  same truncation, independent of the face number: affects affects several
  test. exp.: Update global_ocean.cs32x15 (+.thsice) & MLAdjust (all 5).
o fix bug in mom_v_sidedrag (biharmonic viscosity was counted 2 times);
  note that biharmonic viscosity + no-slip was not tested in any experiment.
o fix bug in non-linear free-surf side-drag ; generate new output for
  global_ocean.cs32x15(+.thsice) & global_ocean_pressure.
o make mnc honor the writeBinaryPrec flag for most kinds of output
o eesupp: split EEPARAMS into EESIZE/EEPARAMS and add a vector global sum
o minor change in averaging W (mom_vi_?_vertshear.F) that affects truncation
  error; update output from global_ocean.cs32x15(+.thsice) & MLAdjust (all 5).
o add brackets in multi-terms sum to get same truncation, independent of
  the face number (manage to get exactly same value of gU,gV at the cs-edge)
  affects several test. exp. Update global_ocean.cs32x15 (+.thsice).
o Clean, new version of mom_calc_visc.  Adds a new feature, viscAhRemax
  and viscA4Remax, which allow one to limit the minimum viscosity by specifying
  a maximum grid-scale Reynolds number.  Also, changes all length calculations
  in the case of grid anisotropy to geometric mean of dx**2 and dy**2.
  Suggested values of viscosity parameters found in mom_calc_visc. 
  Many new viscosity diagnostics available.

checkpoint57s_post (2005/09/20)
o Add clearing-house for viscosity calculations, mom_calc_visc and 
  correct numerous bugs in LeithD and Smagorinsky discretizations.  
  mom_calc_visc now allows for Smagorinsky, Leith and LeithD to be 
  used simultaneously, and to be used in mom_vecinv and mom_fluxform. 
  Mom_vecinv can be used with standard viscous calculation (mom_vi_hdissip.F)
  and with Strain-Tension viscous term calculation (mom_hdissip.F).  
  The Strain-Tension form is now called with useStrainTensonVisc=.true.
  ViscAhStrain and viscAhTension are now retired.
o diagnostics "VISCAHD" & "VISCA4D" replace "VISCAH" & "VISCA4".
o In response to JMC's bug report, genmake2 now ignores any soft-links
  that it finds in the *current* directory when searching for files.
  Soft-links found in any other source directories will still work as
  they did before.
o add HAVE_SETRLSTK define and useSETRLSTK flag (eedata) which calls 
  a C routine to unlimit the stack size
o mnc-ify pkg/aim snapshot vars
o mnc-ify pkg/land as requested by Daniel
o various changes to mnc including:
  - all files use the new "BASENAME[[.ITER].{t|f}NUM].nc" format
  - output can now be grouped so that all files within a group 
      change the ITER portion of their names in lock-step together
  - can now read ("global") PER-FACE (in addition to PER-TILE) files
      and works with both EXCH1 and EXCH2 (but needs more testing)
  - writing works for all verification test cases w/ g77 on Linux

checkpoint57r_post (2005/09/07)
o make MNC variable initialization happen earlier
o add diagnostics for (almost) each term of the momentum Eq.
o remove SST,SSS,UVEL_k2,VVEL_k2 diagnostics.
o move pkg timeave out of pkg-groups "oceanic" & "atmospheric" (pkg/pkg_groups)
o remove MINIMAL_TAVE_OUTPUT option ; 
  add "dumpInitAndLast" to replace "nodumps" (and MINIMAL_TAVE_OUTPUT).
o move some basic S/R (used elsewhere in the code) from pkg/mdsio to eesupp/src
  allows to compile without pkg/mdsio (& test successfully hs94.1x64x5)
o add MNC output for adjoint of EXF (adexf), SEAICE (adseaice)
o add time-dependent SST, SSS control
o cost terms in ecco/ modularized (new cost_generic.F)
o cost_averages routines are modularized (new cost_averagesgeneric.F)
o new infrastructure for seaice model vs. obs misfits in seaice/
  * driver from the_main_loop.F is seaice_cost_driver.F
  * first term is AREA vs. SMR observation misfit (ALLOW_SEAICE_COST_SMR_AREA)
  * gradient check in Exp. 6a of natl_box_adjoint/
o natl_box_adjoint input_seaice for Lab. Sea now available online via wget
  (see README file)

checkpoint57q_post (2005/08/19)
o fix initialisation Pb in calc_gw (get NANs in exp5 with g77)
o fix annoying months-old bug in mnc/mdsio output for seaice pkg
  - bug was reported by Jean-Michel and Ian Fenty
o fix initialization Pb in AIM-Ocean coupled model (aim_sice2aim.F)
  update exp. cpl_aim+ocn output. 
o Implement 4-level checkpointing: AUTODIFF_4_LEVEL_CHECKPOINT
  Needed for high-res. runs with large global files 
  to be able to limit tapelev size
o Changed some tests for adjoint:
  * carbon/ now tests AUTODIFF_2_LEVEL_CHECKPOINT
  * natl_box_adjoint/code_bulk/ tests AUTODIFF_4_LEVEL_CHECKPOINT
  * global_ocean.90x40x15/ back to default 3-level checkpointing
o Modifications to enable scripted COMMON to MODULE conversion
  * verification/OpenAD/code/ has necessary scripts and description;
  * converts, compiles and runs successfully;

checkpoint57p_post (2005/08/01)
o reading of delXfile & delYfile moved from ini_parms.F to ini_grid.F
o move ${PKG}_MNC_INIT from ${PKG}_READ_PARAMS to ${PKG}_INIT_FIXED
  (already the case for some pkgs, including recent MNC_init, e.g. thsice)
o call CALC_GW from DYNAMICS (instead of from FORWARD_STEP)
o Dissipation & phiHyd gradient are always added to gU,gV in timestep.F
  (was already the case for dissipation with mom_vecinv,
   and also the case for grad.PhiHyd when staggered-timeStep)
  This will allow to put dissipation out-off the AB time-stepping.
 Unfortunately, affects truncation error. Update output of exp. that "fails"
  (cg2d matching number) and leave the others for later: front_relax(10),
  global_ocean_pressure(10),ideal_2D_oce(10),internal_wave(9),lab_sea(12),
  matrix_example(7!),natl_box(12),plume_on_slope(11),vermix(12x3,11x2).

checkpoint57o_post (2005/07/30)
o fix MNC/MDSIO flags in PTRACERS so that (1) it works, and 
  (2) its ready to be documented during the 20050801 DocFest
o MNC-ify the gmredi package -- tested and works w/ and w/o mnc 
  for ideal_2D_oce and lab_sea on linux_ia32_g77
o set to #undef CTRL_SET_OLD_MAXCVARS_30
  in global1x1_tot/code_seaice_adj to access indices 32, 33
  (worth another tag)

checkpoint57n_post (2005/07/29)
o adding precip control xx_precip 32
o adding swflux control xx_swflux 33
o Replacing 10 forcing penalty cost routines by 1 generic.
o Implementing partitioning in time-mean and variable adjustment
  for atmos. state.
o Time-mean constant error is now read in data.ecco (instead of hard-coded)
o in natl_box_adjoint:
  * updated exp 1 to 10 
    (but does not have time-mean vs. variable split results yet)
o updated global1x1/*_seaice_adj/
  to incorporate latest changes
o enable useSingleCpuIO for mdsio vector routines
  (applies in particular to tapelev I/O)
o removed inefficient K-loop in all active_file*control*.F

checkpoint57m_post (2005/07/28)
o re-arrange exp. adjustment.cs-32x32x1 (adjust_nlfs.cs-32x32x1 merge into)
  and advect_cs (use EXCH-2 and standard cs-32 grid files).
o pkg/exch2: filling of face-corner halo regions is optional 
  (ifdef W2_FILL_NULL_REGIONS) and is turned off by default.

checkpoint57l_post (2005/07/14)
 tag before updating tutorials (pre-release-2) 
o add cos & sin of grid-direction orientation angle (curvilinear grid only,
   for output and interpolation of input fields onto model grid)
o fix radius in mom_v_metric_cylinder.F (wrong by dy/2).
   Affects results of exp. rotating_tank ; update output.txt.
o pkg/diagnostics: 2 new S/R to fill a diagnostics using a scaling factor
      and taking the square quantity and/or using a fraction-weight field.
o fix aim_diagnostics_init.F mate numbers.
o add mnc output capability to diagnostics/diagstat and update
  our cvsignore files for the ACSII output generated

checkpoint57k_post (2005/07/02)
o lab_sea now uses diagnostics package and provides a suite of
  new EXF diagnostics output.

checkpoint57j_post (2005/06/30)
o exf
  * bug fix in exf_bulkformulae for psimh (spotted by Eliyahu Biton):
    Bracket missing in eqn. for psimh (eqn. 7 of Large & Pond, 1982);
    terms -2*ATAN(x) + pi/2 were added to both stable and unstable case.
  * extended diagnostics output
    - now includes all EXF variables
    - hs, hl moved to common block
    - separate S/R for diagnostics, called after ctrl vector is added
    - name changed for EXFsw -> EXFswnet, EXFlw -> EXFlwnet
    - EXFqnet contains true Qnet (i.e. includes qsw)
  * updated verif. lab_sea, global_with_exf
  * Rearranging hflux (exf_mapfields -> exf_getforcing)
    to ensure that diagnostics sees a true EXFqnet
o add matlab scripts for CS-grid vectors (in utils/cs_grid)
o diagnostics pkg: change pointers so that 1 diagnostic can be used
  several times with different frequencies.
o mnc-ify the thsice package as requested by Daniel Enderton
  - the monitor--MNC output needs work
  - many attributes need to be added (most are currently blank)
o mnc-ify theaim_v23 package as requested by Daniel Enderton
  - many attributes need to be added (most are currently blank)
o remove "groundAtK1" & "rkFac" (replaced by usingPCoords & -rkSign)
o add Sadourny like discretization to the 4th.O vorticity advection scheme
o fix bug in rStar code (calc_r_star.F) when used with topo/bathy. 
  update output.txt from: aim.5l_cs (& .thSI), cpl_aim+ocn,
     fizhi-gridalt-hs and global_ocean.cs32x15 (& .thsice).
o fix few little things to avoid floating error with -ftrapuv (ifort v9)
 (ini_spherical_polar_grid.F, calc_r_star.F, monitor/mon_surfcor.F)

checkpoint57i_post (2005/06/19)
o Diagnostics package was changed: diagnostic allocation is now deactivated
  by setting an empty file name in the namelist (used to be by setting 0 frequency)
o momentum advection (VI form) options: activate 4th.O vorticity Coriolis ;
  add 1rst Order upwind vertical Shear.
o add a quick fix for A/B checkpointing in OFFLINE mode
o add IGNORE_TIME define and -ignore_time option to genmake2 as an
  end-run around the C/Fortran linking horror in eesup/src/timers.F
o added pkg/runclock: allows user to terminate run based on wall clock
o added non-hydrostatic scaling parameter: nh_am2
o pkg/my82: futile attempt to make results compiler-independent by adding
  some "_d 0", etc. no effect.
o for mnc output, fill the 'T' coordinate var with myTime and create a 
  separate 'iter' variable for iteration count
o pkg/diagnostics: 
  add new capability: output of Global/Regional & per-level statistics ;
  tested against monitor output (including land & thSIce) on various exp.
o make seaice-pkg I/O type flags (MNC/MDS) more standard.

checkpoint57h_done (2005/05/19)
  tag after changing user customized files (DIAGNOSTICS_SIZE.h, 
  data.diagnostics, data.gchem, data.ptracers) is done.

o pkg/diagnostics: prepare for Global/Regional statistics. 
  add 2nd namelist in data.diagnostics and update DIAGNOSTICS_SIZE.h 
o remove "baseTime" (no used) from arg. list of DIFF_BASE_MULTIPLE
  and rename it: DIFFERENT_MULTIPLE

checkpoint57h_post (2005/05/14)
o move tIter0 from data.gchem to PTRACERS_Iter0 in data.ptracers
o pkg/diagnostics: change output frequency, now in seconds (instead
  of Nb of iterations). This requires to change data.diagnostics.
checkpoint57h_pre (2005/05/12)

o in mnc, let the user create the output dir if both mnc_outdir_date
  and mnc_outdir_num are false
o add fflags() to pkg/diagnostics which allows one to specify, on a
  per-file basis, the file precision [default behavior is unchanged]
o added diagnostics to pkg/kpp, including computation of mixed layer
  depth based on a temperature/density criterion
o updated verification/natl_box to test the new pkg/kpp diagnostics
o bugs fixed (with useAbsVorticity=T & with useJamartMomAdv=T)
o test AB-3 code with 4th.Order advection scheme (advect_xy/input.ab3_c4)
o fix mnc flags in pkg/seaice so that they are "owned" by seaice,
  not mnc -- this mistake was found by JMC and is now corrected

checkpoint57g_post (2005/04/15)
o add Adams-Bashforth 3rd Order time stepping:
  - default remains AB-2 (#undef ALLOW_ADAMSBASHFORTH_3)
  - not yet implemented with NH, CD_Scheme, pTracers, MNC_pickup ...
checkpoint57g_pre (2005/04/15)

o make lambda[Theta,Salt]ClimRelax spatially varying
  (default remains spatially uniform constant based on tau)
o added new control variables
  * init. uVel, vVel, etanN
  * lambda[Theta,Salt]ClimRelax
o separate masks used for ctrl_pack/unpack 'from write_grid' output
  (suggested by G. Forget)

checkpoint57f_post (2005/04/06)
o add parameter "baseTime" = model base time = time at iteration zero
  new function DIFF_BASE_MULTIPLE (replace DIFFERENT_MULTIPLE) to 
  account for baseTime shift
o move Coriolis arrays from PARAMS.h to GRID.h
checkpoint57f_pre (2005/04/06)

o mnc-ifying the seaice package
o introduced an alternative length scale calculation for use in the limiting
  maximum viscosity (off by default, see mom_vi_hdissip.F for details)
o S/R ptracers_calc_diff: argument list bug for CALL KPP_CALC_DIFF_S
o added modified Leith scheme with viscosity proportional to grad(Hdiv) 
  as well as grad(vort3).  Made it compatible with both approximate form
  for the cubed sphere and full form of these gradients.  Added flag
  useFullLeith to select between approximate and full form.  
o add "d0" in getcon.F to reduce differences between compilers/platforms
  update output.txt of exp. fizhi-gridalt-hs
o change port_rand funtion to allow to set the seed.
o fix obscure MNC bug involving conversion between reals and integers
  - it caused no problems with certain (eg. gcc, ifc) compilers but the 
    new version is now more standards-compliant
o adjoint-related modifications
  * gad_dst3_adv_?: to be able to use advscheme=30 in adjoint
  * gad_calc_rhs: fool adjoint, revert to advscheme=30 in reverse when using 33
  * mom_vi_hdissip: to be able to use Leith scheme in adjoint

checkpoint57e_post (2005/02/28)
o Adding eddy stress controls a la Ferreira et al.
checkpoint57e_pre (actually was tagged: eckpoint57e_pre)

o fizhi pkg: fix AtoC and CtoA when called with same input & output array
  update output.txt of exp. fizhi-gridalt-hs
o add more "Z" dimensions and associated coordinate vars to MNC
o pkg/exf: added twoDigitYear capability for option useExfYearlyFields
o parameter calendarDumps: when set, approximate months (30-31 days) and years
  (360-372 days) for parameters chkPtFreq, pChkPtFreq, taveFreq, SEAICE_taveFreq,
  KPP_taveFreq, and freq in pkg/diagnostics are converted to exact calendar
  months and years.  Requires pkg/cal.
o diagnostics: add pickup functionality
  - off by default for backwards compatibility
  - current version only uses MDSIO -- MNC will be added
o allow to use pkg diagnostics for LAND pkg output & Shapiro Tendencies.
o pkg/shap_filt: fix for multi-tiles per face (CS-grid with EXCH2)

checkpoint57d_post (2005/02/11)
o pkg/thsice used in the ocean: fix tile Pb related to sIceLoad forcing
o modify verification/ideal_2D_oce so that it tests the creation of mnc 
  output from the diagnostics package
o temporary fix in EXCH2_UV: add a 3rd call to fix the 24.tiles CS-grid set-up
o make genmake2 more portable by using ".$FS" instead of ".f" for more
  of the test compilations (eg. IBM xlf on Mac OSX w/HFS filesys)
o add coordinate variables to the MNC output from the diagnostics package
o change MNC-flags default value: true when useMNC=TRUE
o add a "readgrid_mnc" flag to MNC and give model/src/ini_curvilinear_grid.F
  the ability (off by default) to read the grid information using MNC 
o lab_sea: use LSR_ERROR=1.E-12 for testing ; update output.txt
o diagnostics: fix a bug (sub-set of levels); keep full precision when averaging
o do snap-shot diagnostics at the middle of the time-interval (instead of 
  at the end).
o update exp. aim.5l_cs (use default LAND_OPTIONS.h file) and add
  new test for AIM with thSIce + slab-ocean
o cpl_aim+ocn test: update output (optfile & default GMREDI_OPTIONS.h)
o move state variable diagnostics to the beginning of the time step ;
  (note: still needs some work specially for snap-shot diagnostics)
  duplicate & replace UVELVVEL diagnostics with UV_VEL_C & UV_VEL_Z

checkpoint57c_post (2005/01/27)
o Change testing option (-ieee) to get closer agreement between g77 & ifort
o generate new output.txt files on faulks with g77 & the new -ieee option
checkpoint57c_pre (2005/01/27)

o add "_d 0" in freeze ; change some "FLOAT" to "DFLOAT" and went back (TAF);
  update output.txt of exp. global_ocean.90x40x15
o fix in ini_eos.F (one "_d 0" was missing): now g77 & ifc give much closer 
  results; update global_ocean_pressure & global_ocean.cs32x15 output.txt
o add saltFlux(+File) forcing capability with periodicExternalForcing
o allow to use pkg diagnostics for GM-Redi & ThSIce output
o diagnostics_fill: fill in up to sNx+1 or sNy+1 (if U,V or Z pt) for mnc.
o improvements for the MNC output from DIAGNOSTICS:
  - correct handling of the unlimitied dimension
  - all dims now have associated coordinate variables
  - variables located at U, V, and Corner ("Z") points are now written
    with the correct horzontal dimensions (eg. 'Xp1', 'Yp1') so that 
    *all* data points are output
o added seaice_summary.F and removed obsolete ALLOW_SEAICE's from pkg/seaice
o added pkg/seaice/seaice_monitor.F
o mdsio_readfield.F can now read files visible only to master MPI process.
o pkg/seaice: some test code for ice-modified ocean stress
o exf_getffields interpolation defaults to bilinear for all scalar forcing
  fields (remains bicubic for wind velocity and stress).  This avoids, e.g.,
  spurious negative numbers for precipitation and humidity.  Will cause
  some small numerical differences for integrations using pkg/exf/exf_interp.F.
o pkg/ctrl/
  * Add ctrlvec diagnostics in pack/unpack for nondimensional I/O
    May be enabled via doPackDiag
  *  introduce z-scaling of 
     + gradient (doZscalePack) and 
     + control (doZscaleUnpack)
o pkg/mdsio/
  * enable useSingleCpuIO for state estimation (ctrl_pack/unpack) mdsio_gl.F
  * N.B.: leave tiled I/O for tapelev (i.e. mds...vector)

checkpoint57b_post (2004/12/20)
o simplify options in diagnostics_fill arguments (remove weird combinations)
o fix MNC coordinate variables so that they now contain per-face index
  values (instead of xC,xG,yC,yG values) when run with EXCH2 since, in 
  general, EXCH2 grids are only aligned to a "local" coordinate system
o test diagnostics pkg in dic_example (no output) and ideal_2D_oce (with ouput)
o Implement instantaneous output within pkg diagnostics:
  setting a negative frequency in data.diagnostics produces
 "snap-shot" output (as opposed to time-average if freq > 0)
o move out off EQUIVALENCE all diagnostics that fizhi does not use ;
  NOTE: change ptracer diagnostics name: use 2 characters to work with 
        more than 9 tracers. Add also diagnostics of advect & diffus flux.
o more CF compliance: convert all MNC 'iter' variables to 'T' so that it 
  becomes the coordinate variable for the 'T' dimension
o add CF-style coordinate variables to MNC
  - just a first cut:  numbers are meaningless on the cubesphere and 
    missing along the T axis but otherwise it works!
o add surface flux diagnostics: TAUX, TAUY, TFLUX, TRELAX, TICE, SFLUX, SRELAX
o pkg/thSIce: read initial state from 6 files ; allow monitor to use MNC.
o add diagnostics of advective & diffusive flux for T & S (pTracers coming soon)
  this is based directly on what the model compute, so that the content of
  each diagnostics might be affected by switching options (e.g., implicitDiffusion)
o small changes for diagnostics (gad_biharm_?.F, arguments of S/R impldiff.F)
o clean up build options files for SunOS, in particular 
  - remove -traditional from xmakedepend
  - change -xarch=v9 to -xarch=native for f77
  - restore use of make (not gmake)
  - add CC=gcc if using g77
o changes per discussion of AM, JMC, & EH3 today:
  - move redundant "grid" variables out of "state" -- in preparation of 
    creating proper CF-style coordinate variables and in recognition 
    that any/all grid variables can be easily copied (eg. w/NCO) from 
    the grid files into any of the other NetCDF files
  - *always* output grid variables with MDSIO (this will eventually be 
    changed)
  - output MNC grid file if useMNC is true
o every instance of _END_MASTER() has been found and replaced with 
  _END_MASTER( myThid ) in order to satisfy certain picky Sun 
  preprocessors
o re-arrange diagnostics pkg initialisation:
 - allow each package to extend the available diagnostics list
 - add some checking and fix small problems (multi-threaded, ...)
 - new S/R diagnostics_fill (replace fill_diagnostics):
   look through the short list of active diag. (instead of the long list)
   create function DIAGNOSTICS_IS_ON to tell if a diagnostics is active

checkpoint57a_post (2004/12/10)
o this set of changes restores TAMC compatibility
  tested for global_ocean.90x40x15 adjoint on trough
  (what a pain)

checkpoint57a_pre (2004/12/10)
o some modifs in tools/build_options for sunos
o call ctrl_pack for ctrl at end for optimcycle=0

checkpoint57 (2004/12/09)
o add horizontal bi-harmonic viscosity for vertical velocity
  - new parameter viscA4W (defaults to viscA4)
  - affects only non-hydrostatic code
  - to be done: no-slip lateral boundary conditions
o switch back to "sflux = sflux - runoff" in exf_getforcing.F
o implement Implicit Vertical advection for pTracers
o depth convergence accelerator: replace deltaTtracer by dTtracerLev(k)
  (implemented also for implicit vertical diffusion & advection)
o OBCS: extend application of tracer open boundary conditions
  to a strip beyond the boundary of width Olx/Oly
o add call monitor to TAF set of required calls (flow directives)
  and include in natl_box_adjoint
o untangle a few ifdefs related to cost, ctrl, autodiff
  untangel a few ALLOW_ECCO_OPTIMIZATION
o Apply Cooper & Haines representative estimates also at sub-surface (k=Nr)
  (theta2, salt2 in ecco_cost_weights)

checkpoint56c_post (2004/12/03)
o OBCS as control variables
  - update ctrl_ad_diff.list, obcs_ad_diff.list
  - remove balance of obcs controls from default
  - fix index bug nobcs in ctrl_init
  - fix dummy fields filen in ctrl_pack
  - add dummy weights for obcs
o lsopt: comment out fort.94 output
o optim: 
  - remove unnecessary header files
  - adjusted namelists
  - add xerbla.F to Makefile
o exf: 
  - multiple modifications of exf_check_range
  - unit change in exf_init_runoff from [m/year] to [m/s]
o mdsio:
  - i/o-vector change debugLevel from debLevA to debLevB

checkpoint56b_post (2004/12/01)
o collect all ptracers output in an new routine (PTRACERS_OUTPUT) that
  is called from DO_THE_MODEL_IO
  - rename PTRACERS_STATV_WRITE to PTRACERS_WRITE_TIMEAVE
  - introduce new parameter PTRACERS_dumpFreq (defaults to dumpFreq)
  - clean up PTRACERS_WRITE_TIMEAVE a little
o add another verification experiment that tests both the cfc-pkg and
  the gchem-pkg with GCHEM_SEPARATE_FORCING undefined, that is with 
  reactive tendencies treated inline with regular timestepping
o testreport previously did a lousy job of comparing small numbers, so
  we (Ed and Martin) changed the  way the cut-off of 1.e-12 is
  implemented in the little c-progam tmp_cmpnum.c which is embedded in
  testreport. 
o ptracers_monitor: bug fix for MPI

checkpoint56a_post (2004/11/28)
o GCHEM: finish reorganizating the package
  - forward_step calls GCHEM_CALC_TENDENDY, which computes gchemTendency 
    (introduces another 3D-array for each passive tracer, but only if
    GCHEM_SEPARATE_FORCING is undefined. For GCHEM_SEPARATE_FORCING
    gchemTendency is not needed because the timestep is done separately)
  - gchemTendency is added to gPtr in GCHEM_ADD_TENDENCY
  - GCHEM is now---more or less cleanly---separate from PTRACERS
  - to bo done: handling of surfaceForcingPtr that is needed for KPP not
    so clear to me how that should be done in a general way.
o CFC: improve formatting of output in CFC_ATMOS
o PTRACERS:
  - rename GCHEM_MONITOR to PTRACERS_MONITOR and call it from MONITOR, so
    that ALL experiments with ptracers enable can be checked. This makes
    GCHEM_MONITOR obsolete.
  - include a runtime parameter PTRACERS_monitorFreq that defaults to
    monitorFreq
  - set default PTRACERS_write_mdsio to false if PTRACERS_write_mnc is true 
o add PTRACERS (PTR0[1-5]) to testreport output
o exf_check_range:
  * default changed to .TRUE.
  * will check values for niter0 if debLevA, every timestep if debLevB
  * STOP in exf_check_range if 'out of range'
  * range chosen generous to allow for potential extema
  TBD: a version with stricter range
       permitted range would be runtime parameters
o GMredi:
  - fix ldd97 slope limit ; extend valid domain of Psi-Bolus ;
  - change S/R GRAD_SIGMA to be valid in the overlap on CS-grid.
  - change the default GMREDI_OPTIONS.h: compile everything except Visbeck
o GCHEM: 
  - move call to GCHEM_FORCING_SEP, so that it is now called before
    the blocking exchanges to avoid computing halos in GCHEM_FORCING_SEP
  - introduced a useGCHEM runtime flag and applied it everywhere. 
  - renamed PTRACERS_SEPARATE_FORCING to GCHEM_SEPARATE_FORCING;
    this flag is now only visible within GCHEM-pkg routines.
  - moved gchem_forcing_int temporarily into ptracers_forcing, this will
    be replaced by a 3D array that is computed before thermodynamics; for 
    this, the tracer ID iTracer had to be included into the parameter list
    of ptracers_forcing
  - set up forward_step to call gchem_forcing, that will replace 
    gchem_forcing_int in ptracers_forcing
  - cleaning up
o small cleaning of exch2: remove files that are also in eesupp/src

checkpoint56 (2004/11/17)
o AIM: read land-Fraction earlier (from ini-fixed) and monitor land at nIter0
o mnc: cleanup "full" files--fixes out-of-memory problem
o ECCO-GODAE
  * model/, pkg/, code/, input/ now complete w.r.t. ECCO-GODAE production setup
  * fully merged and updated from SIO code
    windstress sign change affects
    - exf_inscal_[u/v]stress
    - sign of xx_tau[u/v] adjustments
    - signs in cost_scat
  * ctrl_get_gen: avoid update of tau[u/v] for first few days
  * natl_box_adjoint updated and compressed
  * 2-level checkpoint switch added
    (tested in EXP. 1 of natl_box_adjoint)
  * new switch doInitXX to avoid init. of xx_... in optimcycle=0
o SVD
  * first complete, non-hacked version for SVD calculations
  * all interfaces clean w.r.t to handling of xx_..., adxx_..., g_xx_...
    performed via direct access files admtlm_vector.it????
    (via ctrl_[un]pack)
  * optimcycle is used for ARPACK iteration counter
    (note: adxx_... is iterated, rather than xx_...; latter is constant!)
  * EV problem ok w.r.t. L2-norm in tangent space; need to check other norms
    and add linear transforms where necessary 
  * controls are initial/final SST, SSS (can be extended; need to check
    ctrl_set_[un]pack_xyz.F according to ctrl_set_[un]pack_xy.F
o mdsio: filename info to both stderr, stdout
o exf: exf_inscal_runoff: separated default conversion [m/year] -> [m/sec]
  from sign change 

checkpoint55j_post (2004/11/10)
o isolate dissipation tendency (allow to keep it out off AB) in V.I form.
  affects (truncation level) output.txt of global_ocean.cs32x15(&.thsice)
o add consistent build directories and .cvsignore files to verification
o added viscA4GridMin and viscA4GridMax for more control on biharmonic viscosity
o make all subroutines 30 or less characters in length for certain older 
  compilers to work (a thorough search only turns up two routines in 
  pkg/ptracers)
o allow (vecinv only) a different horiz. viscosity for Divergence and Vorticity; 
  affects (truncation level) output.txt of global_ocean.cs32x15(&.thsice)

checkpoint55i_post (2004/10/28)
o change arrays for total vertical diffusivity (2.D if explicit,
  3.D if implicit) ; each ptracer uses its own background value.
o added mnc/NetCDF output capability to ocn_compon_interf
  - added bits to verification/cpl_aim+ocn so that it can run on 
    ITRDA and other clusters without the mpirun "-wd" option
o fixed wayward endif in mom_fluxform.F that messed up cyclindrical
  configuration 
o give MNC the ability to create additional files rather than 
  exceeding a specified file size limit "MNC_MAX_FILESIZE" 
  - the default is just less than 2GB which is a practical limit 
    on many systems
o Compute the non-local term using either KPP vertical diffusivity (=default) 
   or the total vertical diffusivity (when KPP_ghatUseTotalDiffus=T)

checkpoint55h_post (2004/10/20)
o add verification test "vermix"
o remove all the *_ioinc flags and replace with the single global
  outputTypesInclusive flag
o allow to set a vertical profile of vertical diffusivity for T & S
o call PACKAGE_BOOT & PACKAGES_READPARMS just after INI_PARMS
o useMNC moved from data.mnc to data.pkg

checkpoint55g_post (2004/10/14)
o Renaming carbon AD experiments to comply with testreport conventions
o Updating adjoint of Held-Suarez hs94.1x64x5
o Fixing directives for non-ECCO forward_step, after ECCO directives
  have been fixed to avoid recomp. of do_oceanic_phys
  Works well for global_ocean.90x40x15,
  but recomp. issue remains for carbon
o Updating adjoint output for natl_box_adjoint after 
  pkg/ecco has been modified (see taga c55d_post)

checkpoint55f_post (2004/10/13)
o rename to timeave_init_fixed

checkpoint55e_post (2004/10/13)
o some delicate re-shuffle of store directives to avoid one
  extra call of do_oceanic_physics
  affects ecco_the_main_loop.F, do_oceanic_physics.F
  checkpoint_lev1_directives.h
o NB: this may break global_ocean adjoint temporarily,
  but it is clear how to fix it. Will do later, need this now.

checkpoint55d_post (2004/10/11)
o ECCO specific cost function terms (up-to-date with 1x1 runs)
o ecco_cost_weights is modified to 1x1 runs
o modifs to allow observations to be read in as
  single file or yearly files
o enable to read exf forcing fields as either
  single file or yearly files (flag useExfYearlyFields)
checkpoint55d_pre (2004/10/08)

o switch between 2-level and 3-level checkpointing
o add ability of MNC to write local and "partial" (eg. 2D slices where 
  the full 3D field is never actually stored) arrays to NetCDF files
  with the correct (that is, the complete multi-dimensional) set of 
  array indicies
  - used in mom_vecinv() to write the diagFreq output
  - tested (demonstrated) in verification/aim.5l_cs
o further mnc-ification
  - add verification/lab_sea to the list with mnc setups
  - fix undefined mnc v-names in cd_code
  - add kpp to mnc output (both snapshot and timeave)
o non-hydrostatic code
  - added horizontal viscosity parameter viscAhW for w, that replaces viscAh
    in calc_gw.F
  - defaults to viscAh
  - this is useful, when I want to use viscAh=0 (e.g., only biharmonic
    friction or Leith) in non-hydrostatic mode, as long as there is 
    no biharmonic friction and/or Leigth or equivalent for vertical velocity.
o pkg/cost
  extend simple cost functions to treat time mean quantities
  (T,U,V) via cost_accumulate_state from cost_tile
o multidimAdvection on CS-grid: implement the full 3 pass ; overlap needs to
    be 2 times larger than the minimum size the advection scheme requires.
    now get a perfect conservation of salt in advect_cs test-exp (updated)
o GGL90 (Gaspar's TKE mixed layer)
  - add horizontal diffusion of TKE, requires exchanges in 
    do_fields_blocking_exchanges, horizontal diffusivity is zero by 
    default. In OPA there is no horizontal diffusion of TKE but the 
    mixing coefficients are computed from a horizontal average of TKE of
    6 points or so. I think that diffusion has a little more physical
    justification.
  - clean up ggl90_calc in the hope of reducing memory usage (this hope 
    was in vain)
  - mask tke-variable in ggl90_init
o fix mask Pb in multidimAdvection on CS-grid (still a small Pb with ipass)
o fix biharmonic diffusion on CS-grid.
o more obcs stuff
  - added obcs_external_fields_load as an alternative to the EXF-pkg option
    for reading boundary values. This routine is called from 
    obcs_prescribe_read
  - updated obcs_check
  - changed sponge layer relaxation parameter units for days to seconds
  - turned off sponge layer by default
  - changed argument list of OBCS_CALC to myTime+deltaTclock
  - fixed about 35 bugs in obcs_external_fields_load

checkpoint55c_post (2004/09/23)
o obcs stuff
  - new runtime flags useOBCSprescribe, useOBCSbalance
  - re-arranged obcs_calc
  - moved exf_getobcs to obcs_prescibe_read
    obcs_prescibe_read is called after ORLANSKI stuff
    and independent of it (executable can contain all).
  - updated obcs_check
  - added exchanges for U,V,gU,gV for useOBCSprescribe=.TRUE.
    These may be necessary only if tangential velocities are
    prescribed at OB, not sure, needs testing.
o make the MNC_CW_ADD_VATTR_* subroutines all take scalar arguments
  which simplifies the calls and passes the ifc check-bounds test

checkpoint55b_post (2004/09/22)
o add a 2D scalar, Z location, exchange_2 routine.
o EXCH_UV for CS-grid: add one u,v in the corner-halo region, allows
  to compute vorticity on a wider stencil [e.g., vort3(0,1)&(1,0)]
  affects advect_cs results (for the wrong reason): update output.txt
o use a more standard discretization for biharmonic viscosity ; 
 (original version still available with #define MOM_VI_ORIGINAL_VISCA4 )
  affects results of dome set-up: update output.txt 
o fix gad_advection.F (CubedSphere part), back to version 1.23
o fix bug in mom_vi_del2uv.F (CubedSphere part).

checkpoint55a_post (2004/09/20)
o merged code to 
  * prescribe/read time-dependent open boundaries
    (works in conjunction with exf, cal)
  * sponge layer code for open boundaries
  * each boundary N/S/E/W now has its own CPP option
    (healthy for the adjoint)

checkpoint55 (2004/09/17)
o up-to-date adjoint of previous breaks
  - natl_box_adjoint: problem for exp 12, 13: cost = 0. needs fix
  - global_ocean_ebm: adjoint still needs fix (TLM ok)
  - global_ocean.90x40x15: extended GMREDI_OPTIONS.h
  - carbon: * remove tr1-related adjoint verification
            * add ptracer as control variable
o remove all tr1-related code (ALLOW_PASSIVE_TRACER)
  (adjoint stuff still has some tr1 'names', but all use ptracer arrays)

checkpoint54f_post (2004/09/16)
o in verification/carbin/ remove experiment related to
  ALLOW_PASSIVE_TRACER (array tr1 etc)
  code_ad/ input_ad/ results_ad

o add two new packages
  - ggl90, TKE-model of Gaspar et al. (1990), Blanke+Delecluse (1993)
    + subject to optimization (memory)
  - opps, OPPS (ocean penetrative plume scheme) of Paluszkiewicz+Romea (1997)
    + subject to reordering (many GOTOs in the original code)
    + so far opps is called for every (i,j) point, and then operates in
      the vertical; one may want to reorder the scheme in order operate in
      horizontal slabs at the cost of (a lot of) memory, at least ten new 3D 
      fields)
o overhaul of IO so that we now have flags for MDSIO and/or MNC
  - all verification tests compile and run with linux_ia32_g77
  - defaults are compatible with current input files--nothing 
    should change if you were not previously using MNC
  - MNC output has been added in numerous places (eg. timeave)
    but there are still a few writes not yet do-able with MNC
    (this is in progress)
  - flags now allow for either/or/both use of MDSIO and MNC and 
    documentation will soon follow
  - numerous small formatting cleanups for ProTeX
o add version info (via BUILD_INFO.h) to MNC and stdout

checkpoint54e_post (2004/09/02)
o add two new packages
  - pp81 (Packanowski and Philander, 1981), Richardson number and 
    stratification dependent mixing
  - my82 (Mellor and Yamada, 1982) level 2 turbulence closure scheme
  - these scheme operate in a similar manner as KPP (without ghat, of 
    course), however there is only one diffusivity that is used for both
    temperature and salinity (and passive tracers)
o add offline package
o add "verification/dic_example" which contains a dic-gchem-ptracer setup
  provided by Stephanie Dutkiewicz
o genmake2: add ability to search for C compilers and cleanup test output
  - fixes recent SX-6 problems and should help with others (eg. HP-UX)

checkpoint54d_post (2004/07/27)
o data.diagnostics: if levels() is unspecified then ALL levels are diagnosed
o bug fix in pkg/cal/cal_addtime.F for TheCalendar='model' day count is wrong, 
  leading to additional shift by 5 days each year of integration
   (i.e. leading to considerable offset over the years)
o update global_ocean.cs32x15/thsice: use z* + RealFW + staggerTimeStep
o start with no AB and no initial filtering (staggerTimeStep):
  change the results of test-exp: hs94.128x64x5, hs94.1x64x5 & hs94.cs-32x32x5
o move ocean specific S/R calls from forward_step.F to do_oceanic_phys.F
  (external loading & cpl import/export stay in forward_step.F)
o update coupling interface to work with new staggerTimeStep
o change MDSIO ptracers_pickup.
o fix a bug in Flux deriv. vs Ts (pkg/aim_v23/phy_suflux_sice.F);
o genmake2 fixes so netcdf now works on halem ("osf1_alpha_*")
o bugs fixed in kpp_calc.F (ustarY) and external_forcing.F (Qsw & Partial-cell)

checkpoint54c_post (2004/07/18)
o replace surfaceTendency U,V,S,T,Tice,Ptr by surfaceForcing U,V,S,T,Tice,Ptr
  this affects (truncation error) output.txt of test-exp:
   global_ocean_ebm,_pressure,.cs32x15(&.thsice), lab_sea & natl_box
o pkg/kpp: replace pMask by maskC to reduce memory size (one 3.D array)
o change Qnet to always be the net heat flux, (+upward).
  affects (truncation error) output of natl_box exp.: updated
o define the max number of passive tracers in PTRACERS_SIZE.h
o start to test mnc routinely in exp0
o add sea-ice loading (sIceLoad) as a new forcing field.

checkpoint54b_post (2004/07/08)
o add testreport "-j JOBS" option for parallel builds (tested and pretty 
   impressive on Altix and Opteron systems)
o diagnostics can now write NetCDF files through the mnc package
o staggerTimeStep & NLFS: update pkg aim_v23 & thsice; update aim.5l_cs output
o staggerTimeStep & multi-Dim-Advec: Exch(U,V) added 
o staggerTimeStep & NLFS: rescale T & S surface tendencies.
  affects (truncation error) output of lab_sea & natl_box exp.: updated
o change pickup _cd & _ptracers (old pickup restart: usePickupBeforeC54=.T.)

checkpoint54a_post (2004/07/06)
o re-write staggerTimeStep: step fwd U,V and then T,S (reverse the order).
o change pickup file (to restart from old pickup, set usePickupBeforeC54=.T.)
o get a perfect restart when using RealFreshWaterFlux + NLFS (not finished)
o update output of all exp. that use staggerTimeStep (except hs94.cs & 2D)
  + internal_wave (shift in writing cg2d_ini_res)
checkpoint54a_pre (2004/07/05)

o require forcing_In_AB=.FALSE. and remove surfaceTendencyTice from pkg/seaice
  - modified verification/lab_sea and natl_box_adjoint accordingly

checkpoint54 (2004/07/02)
checkpoint53g_post (2004/07/02)
o prepare splitting of thermodynamics: store convect.counter in common block
o store d.etaH/dt (instead of Div.hV) in common ; affects (truncation error)
  output of: global_ocean.cs32x15, global_ocean_pressure & internal_wave
o cnh's modifs to gad_advection.F for cube-sphere multi-dim advection
o new parameter "nShapS": allow to treat differently S from T (nShapT)
o separate Vert.Advec.Scheme from horizontal Advec.Scheme (T & S)
o restore adjointability

checkpoint53f_post (2004/06/25)
o modifications that affect AIM experiment results (update output.txt):
  - no advection of S at top interface Nr (pkg/generic_advdiff) 
  - air surf. temp: use lower value between T0 & T1 (phy_suflux_prep.F)
o AIM pkg:
  - include stability function into surf.Flux derivative relative to Tsurf
  - calculate clear-sky radiation & surface temp. change (for diagnostics)
 
checkpoint53e_post
o merged cylindrical coord configuration
o added rotating_tank experiment
checkpoint53e_pre

checkpoint53d_post (2004/06/14)
o faulks upgraded: re-generate output.txt that have changed:
   global_ocean.cs32x15(.thsice), global_ocean_ebm, lab_sea, natl_box
o Added Bryan and Lewis, 1979, vertical diffusivity profile
o pkg/land: fix problem in land_impl_temp.F when Ts arround freezing. 
o added Sadourny discretization of Coriolis
  - moved some PARAMETERS from mom_*_coriolis.F to PARAMS.h
  - re-enabled use of omega3 (useAbsVorticity)
o added Leith (Phys. Fluids, 1968, 10, 1409-1416) variable viscosity for
  vector-invariant equations
  - note: does *NOT* yet use same variable visc. for no-slip BC's.
o recoded the lateral boundary conditions for non-hydrostatic w, this time
  hopefully without new bugs
  - still to do: biharmonic friction for non-hydrostatic w
o bug fix for mom_*_sidedrag: rA -> rAs,rAw
o regenerated output for global_ocean_ebm (using -ieee)
o fix mom_common/mom_*_sidedrag.F to recover numeric output prior to creation
  of mom_common/
  - simple re-arrangement of instructions within computing loop
checkpoint53d_pre (2004/05/21)

checkpoint53c_post (2004/05/21)
o new version of coupler for AIM+thSIce and Ocean models
 - new fields (SSS,h_MixLayer ...) are exchanged through the coupler
 - land: change Evaporation of snow
 - aim with thSIce: fix bug in snow-precip.
o changes to calc_gw.F
 - bug fix for w^2 term near the bottom boundary
 - (hopefully) improve the lateral slip boundary condtions for use with
    partial/looped cells
  - because the bug fix changes two verification experiments anyway (exp5
    and plume on slope), change the lateral boundary condition from half slip
    to the value of no_slip_sides
o ebm package wasnt quite up to the parallel task. Fixed that.
o Adjoint of EBM package + verification
  * TLM OK
  * ADM not sufficient accuracy yet (needs further testing)

checkpoint53b_post (2004/05/14)
o Commiting new energy balance model to repository
  * package is pkg/ebm
  * verif. is verification/global_ocean_ebm
  * references are in ebm_driver.F
C      * X. Wang, P. Stone and J. Marotzke, 1999:
C        Global thermohaline circulation. Part I:
C        Sensitivity to atmospheric moisture transport.
C        J. Climate 12(1), 71-82
C      * X. Wang, P. Stone and J. Marotzke, 1999:
C        Global thermohaline circulation. Part II:
C        Sensitivity with interactive transport.
C        J. Climate 12(1), 83-91
C      * M. Nakamura, P. Stone and J. Marotzke, 1994:
C        Destabilization of the thermohaline circulation
C        by atmospheric eddy transports.
C        J. Climate 7(12), 1870-1882
o Will need long integration testing.
checkpoint53b_pre (2004/05/14)

o created pkg/mom_common in preparation for variable viscosity code
o renamed and split ini_mnc_io
o pkg/land: only liquid water can diffuse or run-off
o AIM using land: soil wetness availability account for snow
o added printMapIncludesZeros to EEPARMS namelist

checkpoint53a_post (2004/05/11)
o restore TAMC compatiility for exf_constants.h
  (no usage of _d in .h)
o Additional storing in KPP in an attempt to fix
  TAMC problem with adjoint of KPP code.
  (no success...)
  Identical code works fine with TAF.
o Fixed verification/natl_box_adjoint experiments.
  Initial conditions for Experiments 4 and 5 are now
  set to "SEAICE_initialHEFF=0", which is more reasonable,
  and hence gives results closer to that of Experiment 2.
  Experiment 6 requires "SEAICE_initialHEFF=1" and is working once again.

checkpoint53 (2004/05/06)
o stable checkpoint with up to date adjoint
  TLM tests only run for 1st grdchk at the moment. Its unclear if
  this is a code problem or a problem with resetting code for g_
  variables that is being autogenerated wrong.
  Otherwise:
   o code is testing well on Linux (P4 and AMD), SGI Alitix and Irix. 
   o IBM and HPQ tests could not be run because NCAR (IBM) and NCCS (HPQ) 
     are both still in chaos following their security messes.

checkpoint52n_post (2004/05/06)
o various build (mostly genmake2) changes including:
  - ability to build/run more easily within Cygwin and MacOS X
  - more complicated Makefiles with a stronger dependence on Gnu Make
o pkg/seaice modifications
  - added SEAICE_deltaTtherm and SEAICE_deltaTdyn in order to reduce cost
    of pkg/seaice.  For time being, SEAICE_deltaTtherm = deltaTtracer
    and SEAICE_deltaTdyn must be integer multiple of SEAICE_deltaTtherm
  - changed proxy for geostrophic velocity and updated 
    verification/lab_sea/results/* accordingly
  - removed ADI dynamic solver from pkg/seaice
  - replaced all occurrences of 1/CSTICE or 1/CSUICE
    they caused a segmentation fault under certain circumstances
  - removed unused field WATR
o bug fix in exf-package:
  -  u/vwind are defined at tracer/pressure points. The values of u/vwindmask
     now reflect that.
o small fixes in the cal-package:
  - set reference date to first of January for the 'model'-calendar
  - failing of cal_CheckDate in cal_FullDate now actually results in a
    warning
o small modifications in exf-package to increase flexibility:
  - change climtempfreeze from a constant to a runtime parameter that
    is specified in data.exf_clim (default = -1.9)
  - introduce runtime parameter windstressmax (default = 2.0) that is
    specified in data.exf
o fix in pkg/thsice:
  - update Evap (Tsf changes) to be consistent with Latent heat flux
  - maintain snow precipitation unchanged (even if Tsf >=0).
 both affect global_ocean.cs32x15/(.thsice) results ; update output.txt.thsice

checkpoint52m_post (2004/04/18)
o commented out call to cal_GetMonthsRec in swfrac.F and added some comments;
  this does not change any of the results, because myIter=0 in swfrac always
  lead to jwtype=2 (the default anyway), but the call makes little sense
  as a default
o no SHORTWAVE HEATING lost at the bottom; affects lab_sea output; updated
o re-work pkg/thsice interface with ocean & bulk_force pkg to allow
  atmospheric model (AIM) to use it ; add a "slab ocean" component.
o pkg/aim_v23 : add interface to call thermodynamic sea-ice (thsice)
o update global_ocean.cs32x15/output (.thsice) after changes in pkg/thsice
o extending useSingleCpuIO option to work with new exch2 I/O format
  - old-style, missing-tile I/O is still accessible by defining CPP
    option MISSING_TILE_IO in pkg/mdsio/MDSIO_OPTIONS.h
o monitor package can write to NetCDF files and/or STDOUT
o fix re-definition bug in MNC_GRID_INIT_ALL()
o doc/api_reference added
  - a framework for building an API Reference Manual using all
    the "protex" comments embedded in the code
  - see pkg/generic_advdiff, pkg/mnc for examples
o MNC:
  - make myThid the last argument for all subroutines
  - new default for the grid files: NO halos
  - add useMNC and other run-time flags
  - separate per-file-group handling of the unlimited dimension
  - early initialization of MNC w/ flags read at the eeboot stage 
    and lookup tables set in initialize_fixed
  - write all MNC output to a freshly-created directory
o thermodynamics sea-ice (thsice) is now tested with testreport.
o test exp. advect_cs: use the standard cs32 grid ; update output.
o Added functionality to grdchk:
  pick global i,j,k position (or nearest wet) where to perform check.

checkpoint52l_post (2004/03/11)
o new land formulation:
  a) use ground enthalpy as prognostic variable to ensure exact
     energy conservation.
  b) account for water temperature and for latent heat of freezing
     in all processes (rain, run-off, ground storage)
  c) compute surface and ground temperature implicitly.
o aim_v23 modification for new land model:
  a) Treat separately land / ocean / sea-ice surface fluxes
     to allow implicit computation of land & sea-ice surface temp.
  b) add snow precipitation.
checkpoint52l_pre (2004/03/11)

o fix problem (when 1 tile is empty) in min/max monitor.
o fix bug in timeAve (u,vZetatave in common block) 
o no restoring terms under ice for pkg/seaice
o moved SEAICE_DO_DIAGS to S/R do_the_model_io
o bug fix for pkg/seaice pickups
o change MNC call locations and add coordinate attributes
o mask vorticity at the corner ; affects global_ocean.cs output
o fix ini_curvilinear_grid ; test CS experiments with mpi
o aim.5l_cs: modify sea-ice fraction input file ; update output
o exf: Adding simple range check routine for exf fields after read

checkpoint52k_post (2004/02/23)
o removed top-level directory "diags"
  - we migrated these functions to pkg/timeave a long time ago
o fixed bug introduced in pkg/monitor
o accuracy ctrlprec = 32 insuffient for gradient checks using
  averaged fields (I/O via cost_averages)
  -> use ctrl.h in active_file*.F to control I/O precision.
o paramter list of CALL ADTHE_MAIN_LOOP
o added initial do_the_model_io to ecco
o set all ...Freq to zero after cost_final
  taveFreq, dumpFreq, pChkptFreq
o MAIN and ECCO differentiability restored

checkpoint52j_post (2004/02/18)
o fix nchklev in tamc.h for global_ocean...
o Bringing flow and store directives up-to-date
o Really weird thing!
  call do_the_model_io from the_main_loop with parameters
  starttime, niter0, instead of mytime, myiter, screws up the adjoint: 
  TAF places a faulty re-call of initialise_varia
  after cost_final call which should not be there!
checkpoint52j_pre (2004/02/03)

o tweaked pkg/mdsio/mdsio_readfield.F to have more useful logic and
  error messages
o fix errorMessageUnit problem. remove old version of mdsio from eesup/src
o modified pkg/mdsio/mdsio_readfield.F -- commented out diskspace-eating
  debug output
o modfied mdsio_writefield.F to handle non-global files under exch2
o update AIM Cubed-Sphere exp (aim.5l_cs):
  use land, p*, and Franco.M forcing fields with fractional land-sea mask.
o update AIM Equatorial Channel exp:
  use standard aim_v23 pkg and change the SST fields to be more realistic.
o globalFile now works with exch2
o merged mom_vi_calc_relvort3.F, mom_vi_del2uv.F and 
  mon_vort3.F to make exch2 friendly with >1 tile per cube face
o limit timeave output for hi-res integrations

checkpoint52i_post (2004/01/21)
o removed CPP_EEOPTIONS.h from verification/*/code
o updated the tiling for global_ocean_pressure
checkpoint52i_pre (2004/01/20)

o update aim.5l_LatLon using the standard aim_v23 pkg (instead of 
  the old pkg/aim).

checkpoint52h_pre (2004/01/20)
o shortened offending lines in exch2_send_rx?.template
o modified W2_EXCH2_TOPOLOGY.h to reflect current topology generator
o genmake2: add build & execute test for NetCDF code
o modded aim.5l_cs and global_ocean.cs32x15 to use exch2, removed
  old grid files, moved CPP_EEMACROS.h to pkg/exch2
o added useSingleCPUIO flag to monitor.F and mon_out.F
o added temporary hack for sea-ice dynamics on the cube:
  metric terms are ignored and it is assumed that
  there is no sea-ice on cube faces 1, 2, 4, and 5.

checkpoint52f_post (2004/01/09)
o added exch2 cube routines to pkg/exch2
o modified hs94.cs-32x32x5 to use it
o added new grid files to hs94.cs-32x32x5
checkpoint52f_pre (2004/01/07)

checkpoint52e_post (2004/01/07)
o first attempt to solve vertical advection (momemtum & T,S) Implicitly
  for now, only implemented with Lax-Wendroff (tracer) and VectInv (mom)
o step.1 : rewrite (as in MultiDimAdvec) explicit tracer stepping (gad_calc_rhs.F)
  to work with implicit vertical advection and AB ;
o Implic. vert. advect. implemented with flux-limiter, c2, u3 and c4 scheme.
o update output (gad_calc_rhs.F changes affect truncation error) of exp:
 front_relax, global_ocean .cs32x15 & _pressure, internal_wave, lab_sea, natl_box
checkpoint52e_pre (2004/01/02)

o fix bug in impldiff when Nr=1 or Nr=2.
o change the albedo in pkg/thsice (as GISS model); update output_thsice.txt
o little changes (fftpack, aim/phy_suflux ...) to pass the "checkbounds" test.
o fix deltaTfreesurf in update_cg2d.F (left from c45d_post): affects 2
  ocean exp. that use NLFS: global_ocean.cs32x15 & global_ocean_pressure
o added exf_offset_atemp for Celsius to Kelvin conversion of atemp
o eesupp/inc/EEPARAMS.h: MAX_NO_PROCS=1024
o pkg/cal/cal_toseconds.F fix for long (>60 years) integrations

checkpoint52d_post (2003/12/16)
o re-tiled many expts to allow comparison in multi-processor mode
  - updated output accordingly
  - changed hs94.128x64x5 to use intial T from file rather than use the
    random number generator
o add infrastructure in model routines for fizhi and gridalt packages
o change global_ocean.cs32x15 because of Pb with GM on CS-grid.
o changes to permit hi-res, cubed-sphere, configuration
  - added useSingleCpuIO capability to mdsio_readfield.F and exf_interp.F
  - added "#undef ALLOW_USE_MPI" support to eesupp/src/scatter_2d.F
  - added pkg/exf/exf_set_uv.F for on-the-fly interpolation and rotation
    of surface winds for the cube
  (A verification experiment, based on global_ocean.cs32x15, but with
   pkg/seaice turned on and with on-the-fly interpolation from the NCEP
   Gaussian grid is described in MITgcm_contrib/high_res_cube/README_ice,
   complete with example surface forcing files and matlab scripts to look
   at the output and compare it with that of global_ocean.cs32x15.)
o packages pickup: $PKG_write_pickup called from packages_write_pickup ;
   but call to $PKG_read_pickup remains in $PKG_ini_vars: change CD_code
   to conform to the common rule.
o check-in the first version of the coupler + interfaces for multi-components 
   set-up (Chris's version, adapted to work on cubed-sphere grid); use MPI.
   - imply modification in eesupp (MPI_COMM_MODEL < MPI_COMM_WORLD).
   - atmosphere: use pkg aim_v23 ; no sea-ice for now. 
   - ocean and atmos. share the same horizontal grid (no interpolation).
   - exchanges between component and coupler is done in forward_step
o new verification experiment, cpl_aim+ocn: 
   coupled ocean - AIM atmosphere on cs32 grid. 

checkpoint52d_pre (2003/12/06)
o surface flux time-av diagnostic modified for NLFS & RealFreshWater 
o add call to AIM pendant S/R in external_forcing & external_fields_load.F

checkpoint52c_post (2003/11/25)
o Fixing OPTIONS files for use of exf:
  - ALLOW_ECCO not needed
  - ECCO_CPPOPTIONS.h should not be included from
    EXF_OPTIONS.h/CAL_OPTIONS.h, but from CPP_OPTIONS.h
    as has been the case in the past
  - All cal/exf related options are currently set in
    single header file. Should remain so until we
    agree on a consistent new policy.
o Removed all CPP options for cal package.
  cal has no more CPP options.
o modified STOREs in GAD_ADVECTION
o corrected key comp. for passkey

checkpoint52b_post (2003/11/23)
o new version: "thsice" of thermodynamic sea-ice pkg:
 - only 1 call from "forward_step"; conserve energy, fresh-water & salt. 
 - modify fluxes but do not change theta directly;
 - light cleaning of bulk_force pkg (still needed with thsice).
 - add forcing fields + data files in global_ocean.cs32x15/inp_thsice 
   + output_thsice.txt to test thsice & bulk_force pkgs.
o put back grid & coriolis monitor output.
checkpoint52b_pre (2003/11/23)

o call "do_the_model_io" at the beginning (=> dump initial state) 
o use rhoConstFresh to define convertEmP2rUnit (was done only in ocean-P)
o sort out interplay between tamc.h and PTRACERS_OPTIONS.h
  (need info on NUMBER_OF_PTRACERS)
o missing PTRACERS headers in some routines
o default tamc.h in pkg/autodiff supposed to crash
  to ensure proper customization

checkpoint52a_post (2003/11/17)
o modifications to make FREEZE (_SURFACE) flux visible to pkg/kpp
  - moved surfaceTendencyTice from pkg/seaice to main code
  - subroutine FREEZE_SURFACE now limits only surface temperature
    and is called in FORWARD_STEP (if allowFreezing=.TRUE.)
    => new output.txt for global_ocean.cs32x15 & global_with_exf
  - keep the old version of FREEZE for backward compatibility;
    global_ocean.90x40x15 left unchanged using useOldFreezing=.TRUE.
  - corresponding modifs for TAF directives
o added surface flux output variables to TIMEAVE_STATVARS
o time-averaged output for pkg/ptracers
o fix problem with ECCO-related divided adjoint
  snapshot file was missing some ad-variables,
  but no warning issued by TAF

checkpoint52a_pre (2003/11/12)
o some bug fixes for #undef REAL4_IS_SLOW

checkpoint52 = ecco_c52_e35
o after testing adjoints of checkpoint51u_post

checkpoint51u_post (2003/11/06)
o this is the post-merge tag of the ecco-branch
  (needs another clean checkout and re-testing)
o various natl_box_adjoint configs and results
  but no input fields
o obcs adjoint not yet merged!
o adding ECCO global 1x1 and 2x2 degree configs
o updated/extended some store directives for seaice
o pkg/ecco now containes ecco-specific part of cost function
o top level routines the_main_loop, forward_step
  supersede those in model/src/
  previous input data.cost now in data.ecco
  (new namelist ecco_cost_nml)
o in ctrl/ cleaned some cross-dependencies and updated CPP options

checkpoint51t_post (2003/11/04)
o this is the pre-merge tag of the ecco-branch

checkpoint51s_post (2003/11/04)
o cleanup: removed various obsolete #define-s
o pkg/grdchk
  - renamed 'ph-grd 3' to 'grad-res'
  - merged from ecco-branch 
    (remaining bug fixes for obcs gradient checks)
  - additional high-precision output for testreport
    (grep for 'precision_grdchk_result')

checkpoint51r_post (2003/11/03)
o cleaned up or removed CPP_OPTIONS.h files
o updated results for some of the tests to reflect the new
  optfiles (-ieee: -O0 instead of -O3)

checkpoint51q_post (2003/10/30)
o cd_code:
  - moved cd_scheme.F -> cd_code_scheme.F
  - separate read_checkpoint from cd_code_ini_vars.F
  - separated cd_code part from write_checkpoint
  - updated AD_SOURCE, generated .flow
  - added CD_CODE_VARS.h to the_main_loop
  - Moving cd_code specific store dir.s to pkg/cd_code
o ctrl package totally restructured
  - pack/unpack now optional and decoupled from
    xx_/adxx_ I/O
  - ctrl_pack/unpack cleaned
    (new routines ctrl_init_ctrlvar.F, pkg/ctrl/ctrl_init_wet.F)
  - confined inclusion of AD_CONFIG.h to where necessary.
o genmake2: changed AD dependencies from SRCFILES to AD_FILES

checkpoint51p_post (2003/10/30)
o create initial cd_code package
  - WARNING: the initialization of fields within packages
    is broken because INI_FIELDS (where READ_CHECKPOINT is
    called) is called *before* PACKAGES_INIT_VARIABLES.
    This seems to be backwards since
    1) its important to initially zero the entire field including 
       the "halo" region
    2) zeroing needs to be done *before* reading pickup info
       and the pickup call might or might not happen in any 
       particular run
  - this needs an overhaul for R2
o cleanup verification/*/code/GMREDI_OPTIONS.h
o cleanup testreport

checkpoint51o_post (2003/10/27)
o bringing AD-related verif's up to date with genmake2
  - carbon/
  - global_ocean.90x40x15/
  - hs.94.1x64x5/
  - (front_relax/ )
o (more) consistent directory structure for AD-related verif.'s
o cleaning ALLOW_GRADIENT_CHECK -> ALLOW_GRDCHK
o cleaning some ALLOW_TANGENTLINEAR_RUN -> ALLOW_AUTODIFF
o bug fix in find_alpha.F for MDJWF:
  - modif. to alpha = 1/D*( dN/dT - rho*dD/Dt) to account for
    change rho -> rho-rhoConst
  - replace call find_rho to find_rhonum
o initialisation of rFlx extended to full array (required by TAF)
  and shifted to thermodynamics
o removed PTRACERS.h in ptracers routine
o added surfacetendencyPtr to S/R parameter list pracers_forcing
o Correcting initialisations for fVerU, fVerV.
o helping TAF to recognize dependency on kUp for
  fVerU, fVerV
o Replacing delZ by delR in pkg/ctrl/
checkpoint51o_pre (2003/10/24)

o undid all of cp51 pending some cleanups and discussion
o added the [#include "AD_CONFIG.h"] statement to all files that need 
   it for adjoint/tl #defines
 o re-worked the build logic in genmake2 to support AD_CONFIG.h
 o removed tools/genmake since it no longer works

checkpoint51n_post (2003/10/23)
o modifications to make FREEZE flux visible to pkg/kpp
  - moved surfaceTendencyTice from pkg/seaice to main code
  - FREEZE & EXTERNAL_FORCING_SURF moved to FORWARD_STEP
  - subroutine FREEZE now limits only surface temperature
    (this means new output.txt for global_ocean.90x40x15,
     global_ocean.cs32x15, and global_with_exf)
o added surface flux output variables to TIMEAVE_STATVARS

checkpoint51n_pre (2003/10/23)
o added "#undef ALLOW_USE_MPI" support to eesupp/src/gather_2d.F
o added [#include "AD_CONFIG.h"] to all files that use the following
  defines:
  - ALLOW_ADJOINT_RUN
  - ALLOW_TANGENTLINEAR_RUN
  - ALLOW_ECCO_OPTIMIZATION

checkpoint51m_post (2003/10/21)
o incorporating changes to get TAMC/TAF working in genmake2
  - added new TAMC/TAF targets to the Makefile
  - various cleanups related to package handling
  - these changes should have no impact on the forward model

checkpoint51l_post (2003/10/20)
o changes to pkg/cal and pkg/exf that allow and speed-up long integrations
 - faster algorithm for cal_addtime.F
 - higher precision arithmetic, where needed
 - pkg/exf *startdate variables changed from calendar date to
   model integration time

checkpoint51l_pre (2003/10/17)
o add salt flux to forcing fields (used when salty sea-ice forms or melts)
o enable to apply restoring on S & T only in a latitude band.
o update output (external_forcing_surf modif. change truncation errors)
   global_ocean.cs32x15, global_ocean_pressure, lab_sea, natl_box

checkpoint51k_post (2003/10/16)
o change default to: useNHMTerms=.FALSE.
 - new output.txt for atmos. exp (NHMTerms were wrong but now turned off):
   adjustment.128x64x1, aim.5l_Eq_Ch, aim.5l_LatLon, hs94.128x64x5, hs94.1x64x5
 - new output.txt for idealized oceanic exp (NHMTerms are now turned off):
    exp1, ideal_2D_oce
 - change data file of oceanic exp (leave the results unchanged for now)
   exp2, global_ocean[90x40x15,pressure,with_exf], lab_sea, natl_box
o set gravitySign automatically according to the vertical coordinate used
  (and change sign: back to "logical" value: +1 when R increases downward)
o added an include barrier to the default CPP_OPTIONS.h and 
  removed the #include "PACKAGES_CONFIG.h" from it
o fix a bug in mom_fluxform (from chk51j_post)

checkpoint51j_post (2003/10/10)
o Added some AD-related initialisations in mom_vecinv/ mom_fluxform/
o adjusted some flow directives (dynamics, thermodynamics)
o added cubed-sphere case to test cost function
o heckpoint_lev?_directives.h now include
  pkg-specific directives, whenever those are enabled.
o Moving pkg-specific flow directives to corresponding pkg
  Moving pkg-specific differentiation list to corresponding pkg
  Moving pkg-specific checkpoint-lev storing to corresponding pkg
  ---> conventions are
       - pkg_ad.flow
       - pkg_ad_diff.list
       - pkg_ad_check_lev?_dir.h

checkpoint51i_post (2003/10/09)
o merge of the branch-genmake2
  - knowingly breaks the older genmake
  - automatic generation of all ALLOW_${PKG_NAME} defines
  - new testreport supersedes older testscript
o large number of package inclusion and header cleanups
checkpoint51i_pre (2003/10/08)

o new output for adjoin of global ocean vector invariant
o fix for checkpoint of thermodynamic seaice and bulk_force
o Steph gchem various cleanups

checkpoint 51h_pre
o fixed some single quotes
o modify gchem pkg to be more versatile
o modifications to clean up dic pkg
o add pkg/cfc

checkpoint51g_post (2003/10/02)
o provide links for ARPACK and ADM*TLM
o start removing verification/vero/
o update AD-related stuff
  (in particular some IF-statements in model/src/ routines)
o adding to verification/global_ocean.90x40x15/ adjoint of
  vector invariant setup

checkpoint51f_post (2003/10/02)
o update advect_xz/output.txt (left from chekpoint50f_pre, ini_vel modif)
o Mods and bug fixes to pkg/cal, pkg/exf, etc., needed for computation
  of tracer Green's fucntions for ocean inversion project.

checkpoint51f_pre (2003/08/07)
o Added on-the-fly spatial interpolation capability
    "USE_EXF_INTERPOLATION" to pkg/exf.
  - This is a temporary Cartesian-grid hack until
    the super-duper ESMF coupler becomes available.
  - See verification/global_with_exf/README for usage example.
  - Removed obsolete EXFwindOnBgrid and SEAICEwindOnCgrid
    flags and modified pkg/seaice accordingly.
o Bug fix to pkg/ptracers, pkg/generic_advdiff/gad_calc_rhs.F,
    and pkg/kpp/kpp_transport_ptr.F for dealing with tracer
    non-local transport term.

checkpoint51e_post (2003/08/03)
o pkg/mom_vecinv: 
  - changes related to hFac: use S/R from aim.5l_cs/code (coriolis & vort.advec)
  - add time-ave diagnostic of vorticity advection.
o add diagnostic (instantaneous) of Shapiro Filter effect for T,S & UV.
o atmospheric geopotential: - include water vapor effect; 
                            - use p^kappa in p* scaling.
o land pkg: read initial state from files.
o AIM : add stratospheric drag in the upper level

checkpoint51d_post (2003/07/18)
o change function ILNBLNK (=> last non-blank char.) to return zero
  (instead of the string length) when the string. char is empty
o fix bug in dxV,dyU definition of cubed-sphere grid (ini_curvilinear_grid)
o modif's to restore TAMC compatibility
  - avoid "_d" constructs in PARAMETER declarations
  - avoid interrupting lines by comment lines
o Use cluster local disks for purely local I/O
  vs. globally visible disks needed for ctrl stuff
  (merged from ecco-branch)
  - new active_file_loc... and mdsio_..._loc routines
  - affected packages: autodiff, ctrl, grdchk, mdsio

checkpoint51c_post (2003/07/08)
o introducing integer flag debugLevel
  - debLevZero: suppress all output
  - debLevA: standard
  - debLevB: equivalent to current debugMode=.TRUE.
o introducing pathname variable mdsioLocalDir for mdsio
  that can be specified at runtime
  (relevant for cluster I/O to local disk)
`
>>>checkpoint51b_post
adjoint of ptracers
o disentangled ALLOW_PTRACERS using new ALLOW_GCHEM
o extended state in checkpoint_lev?, etc.
o alternative ctrl/cost with tr1 or ptracer
o new comlev1_bibj_ptracers
o new ptracers.flow
o made ptracers_forcing same as external_forcing_s
o added verification for adjoint with ptracers
  - adm. grdchk fail so far
  - tlm. grdchk OK
  - checked tapelev/comlev recomputations: OK
<<<checkpoint51b_pre

checkpoint51a_post (2003/06/25)
o added code for biogeochemistry package
  - new pkgs: dic, gchem
  - new subroutine in ptracers
o modify code for biogeo packages
  - in model/src and pkg/ptracers

checkpoint51 (2003/06/24)
o merged improved packages from ecco-branch (ecco_c51_e34) to MAIN
  - autodiff, ctrl, exf, grdchk, seaice
  kept separate packages
  - cost, ecco, obcs
o updating verification/internal_wave, verification/lab_sea
  (all verif's pass on faulks.lcs.mit.edu RH7.3, g77)

checkpoint50i_post (2003/06/23)
o Preparing next differentiable checkpoint and sync
  of MAIN vs. ecco-branch
  - 1st step: this one is differentiable
  - 2nd step: next(! not this) checkpoint will have updated packages 
              from ecco-branch)

checkpoint50h_post (2003/06/20)
o new package "land": provide surface BC for AIM.
o pkg/ptracers: apply exchange to all tracers after reading a pickup.
o AIM: use true log-P extrapolation for near surface temp (= as in 
    F.Molteni paper) ; update aim.5l_cs output.
o New variable in PARM03 for more flexible pickups
o somewhat cleaned package initialisation sequence for
  ctrl/ cost/ ecco/ in packages_... routines

checkpoint50g_post (2003/05/23)
o merged with release1_p17 (pkg/seaice and verification/lab_sea)
  - added SEAICE_MULTILEVEL for 8-category sea-ice thermodynamics
  - LSR sea-ice dynamic solver moved to SouthWest B-grid location and
    made the default because of faster convergence than ADI

checkpoint50f_post (2003/05/23)
o exf totally restructured
  - replaced all exf_set_ routines by one generic exf_set_gen.F
    and made sure it's still differentiable
  - split exf_getffields.F into new exf_bulkformulae.F
  - exf_inscal_/exf_outscal_ suffixes consistent with field names
  - updated adjoint/makefile and relevant verif. accordingly

checkpoint50f_pre (2003/05/23)
 o AIM: near surface temp evaluated from Pot.Temp: fixed for Part Cell ;
      + change Evap over land. (update aim.5l_cs output)
 o added missing .cvsignores and made uniform across expts
 o changed configuration of tidal_basin_2d expt
 o added pkg/debug functions for tracing code in fatal crashes
 o tidied pkg/monitor to use MONITOR_OPTIONS.h
 o new fn in pkg/monitor to stop model if solution grows too big
 o removed lots of single quotes from comments

checkpoint50e_post (2003/05/14)
o make KPP work with PTRACERS
 - fix gad_calc_rhs to call new routine kpp_transport_ptr, which is
   nearly a copy of kpp_transport_s
 - there is no analogue to SurfaceTendencyS, so I have to use 
   gPtr(of the surface layer) instead
o add a new platform SunFire+mpi (SunFire 15000) to genmake
checkpoint50e_pre (2003/05/13)

checkpoint50d_post (2003/05/13)
o change kpp output from multiple-record state files to single-record state 
  files analogous to write_state.F
o reduce the output frequency of cg3d-related stuff to the monitor frequency, 
  analogous to the cg2d-related output. 
o fix small problem with in ptracers_write_checkpoint.F: len(suff)=512, 
  so that writing to internal file fn (with length 512) fails.
checkpoint50d_pre (2003/05/12)

checkpoint50c_post (2003/05/12)
o fix problem in ini_procs.F when using MPI (was there since checkpoint48f)
o add monitor diagnostic of vorticity (mon_vort3.F) and potential energy.
o add time-average diagnostic of U*V and vertical diffusive flux for theta.
o bug fixed in convective adjustment diagnostic (multi-tile set-up).
o 4th Order Adv scheme: return to previous (c40pre7) masking near boundaries.

checkpoint50c_pre (2003/04/30)
Merging from release1_p13:
o bug fix for pkg/seaice dynamic solver
o Added SEAICE_initialHEFF to pkg/seaice

checkpoint50b_post (2003/04/17)
o store u*,v* in gU,V instead of in guNm1,gvNm1
o in order to put the momForcing out of the Adams-Bashforth:
  move forcing & CD-scheme calls from mom_fluxform & mom_vecinv
  to timestep.F
o new flag "useCDscheme" (default=F); replace guCD,gvCD by local arrays
o re-generate output for highly sensitive test-exp:
   global_ocean_pressure, ideal_2D_oce, lab_sea, natl_box

checkpoint50b_pre (2003/04/17)
o restore the use of momAdvection & useCoriolis flags (mom_vecinv)
o corrected CPP option mismatch in exf_Bulk... functions for case 
  #define ALLOW_ATM_WIND && #undef ALLOW_ATM_TEMP

checkpoint50a_post (2003/03/21)
o Bug fix for merging between c50 and KPP.
  ikey was passed from thermodynamics to kpp_calc via
  common block rather than being recomputed in kpp_calc,
  in contradiction with new key itdkey.
  New key ikppkey created, and tamc.h headers updated.

checkpoint50 (2003/03/08)
- 2nd step of merge with ecco-branch:
  merge changes in ecco-branch back into main trunk
- bug fix in find_alpha
- more storing in gmredi_calc_tensor.F, kpp_routines.F
- avoid iterative loop in ini_pressure for ALLOW_AUTODIFF_TAMC
- merged some sliced AD support routines

checkpoint49 (2003/03/06)
merged from ecco-branch:
o exf:
  - Enable initialisation of forcing fields to constant 
    (runtime) values.
  - in exf_getffields.F
    Reduce i-/j-loop to interior domain, discarding overlaps.
    That also fixes wrong TAF-key computations for key_1, key_2
    with bulf formulae.
  - exf_init.F modify #ifdef for exf_init_evap
  - exf_getffieldrec.F, ctrl_getrec.F
    The following INT-usages are not safe:
      fldsecs  = int(fldsecs/fldperiod)*fldperiod
      fldcount = int(fldsecs/fldperiod) + 1
    and were modified.
o autodiff: checkpoint_lev...
  - updated storing for bulk formulae (some arrays were missing)
  - added state for seaice package
  - synchronized with main branch
o DIVA:
  Modif.s in
  - the_main_loop.F
  - the_model_main.F
  and added cost_final_restore.F cost_final_store.F
  o With these changes, it is possible to fully separate
    the first forward run to compute the cost function (mdthe_main_loop)
    and adjoint runs over individual DIVA intervals (adthe_main_loop)
    into separate model executions.
    This enables better tuning of DIVA to given queue sizes.
  o Loss of cost function value in consecutive DIVA runs is
    fixed by storing to 'costfinal' file.
  o Appropriate call of ctrl_unpack/_pack,grdchk_main at 
    beginning/end of adjoint integration is accounted for.
  The current changes apply to TAF-1.4.26.
  TAF has one remaining bug, requiring one manual change
  (see MITgcm manual).
o cal: synchronized between MAIN and ecco-branch

checkpoint48i_post (2003/03/05)
o Changes to restore differentiability of code w.r.t. previous tag
  (mostly adding new routines to make list and replacing
  pressure by totPhiHyd).
o Updated and merged grdchk package
  - has both ADM and TLM checks
  - works for single- and multi-proc.
  - output cleaned
  - worked successfully for parallel DIVA
o genmake:
  - Adding -platform=SP4
  - Modif. for DEC Alpha (many don't have makedepend; use mkdep instead).
o Modif. for DIVA:
  ctrl_unpack should not be called in intermediate DIVA interval.
  (similar thing would apply for active files such as
  tbar, sbar, psbar, which should not be reinitialised;
  only relevant for ecco-branch)

checkpoint48h_post (2003/02/28)
o improve "ini_p_ground" when using finite difference form for calc_phi_hyd
o Added net flux to downward flux conversion to pkg/exf/exf_getffields.F
o Added SEAICE_initialHEFF to pkg/seaice
o ecco_the_model_main.F: SEAICE_WRITE_PICKUP must precede WRITE_CHECKPOINT

checkpoint48g_post (2003/02/18)
--- EOS:
o compute locally the pressure for use in EOS: UNESCO, JMD95P, MDJWF
  store total Potential in totPhyHyd for diagnostics & EOS.
o fix restart and overlap Pb when using Z-coord and EOS funct. of P
--- Pressure/geopotential gradient:
o use Ro_surf & R_low instead of hFac in cal_phi_hyd:
o NLFS + p-coord.: eta*Alpha' is not longer lagging 1.time-step behind
  ( changes results of global_ocean_pressure )
o NLFS + z-coord.: add eta*Rho' contribution.
o accurate phiHyd when using interface-W at the middle between 2 centers
 ( changes results of ideal_2D_oce )
o includes r* 2nd term in potential gradient.

checkpoint48f_post (2003/02/18)
Merging from release1_p12:
o Modifications for using pkg/exf with pkg/seaice
  - improved description of the various forcing configurations
  - added basic radiation bulk formulae to pkg/exf
  - units/sign fix for evap computation in exf_getffields.F
  - updated verification/global_with_exf/results/output.txt
o Added pkg/sbo for computing IERS Special Bureau for the Oceans
  (SBO) core products, including oceanic mass, center-of-mass,
  angular, and bottom pressure (see pkg/sbo/README.sbo).
o Lower bound for viscosity/diffusivity in pkg/kpp/kpp_routines.F
  to avoid negative values in shallow regions.
  - updated verification/natl_box/results/output.txt
  - updated verification/lab_sea/results/output.txt
o MPI gather, scatter: eesupp/src/gather_2d.F and scatter_2d.F
o Added useSingleCpuIO option (see PARAMS.h).
o Updated useSingleCpuIO option in mdsio_writefield.F to
  work with multi-field files, e.g., for single-file pickup.
o pkg/seaice:
  - bug fix in growth.F: QNET for no shortwave case
  - added HeffFile for specifying initial sea-ice thickness
  - changed SEAICE_EXTERNAL_FLUXES wind stress implementation
o Added missing /* */ to CPP comments in pkg/seaice, pkg/exf,
  kpp_transport_t.F, forward_step.F, and the_main_loop.F
o pkg/seaice:
  - adjoint-friendly modifications
  - added a SEAICE_WRITE_PICKUP at end of the_model_main.F

checkpoint48e_post (2003/02/12)
o New S/R for diagnostic of bottom pressure (phi0surf was missing in c48d_post)
o dynamics: change definition of computational domain & adapt mom_fluxform
  accordingly ; when viscA4=0, allows to run the dynamics with Olx=Oly=2. 
o following exp works with Olx=Oly=2 (and pass through checkbounds option):
    adjust_nlfs.cs-32x32x1 adjustment.128x64x1 adjustment.cs-32x32x1
    exp0 exp1 exp2 exp4 exp5 hs94.cs-32x32x5 hs94.128x64x5 hs94.1x64x5
    global_ocean.90x40x15 global_with_exf global_ocean_pressure 
    inverted_barometer solid-body.cs-32x32x1
  (high order AdvScheme and/or multiDimAd works with Olx=Oly=2 ? not sure)

checkpoint48d_post (2003/02/09)
o in preparation for r*:
 a) use pre-computed gradient of hydrostatic potential:
    changes in timestep.F & mom_cdscheme.F affects results of ideal_2D_oce
 b) move phi0surf from calc_phi_hyd to calc_grad_phi_hyd:
    => affects results of glob_oce_pressure (different truncation error)  
  update output.txt of ideal_2D_oce & global_ocean_pressure

checkpoint48d_pre (2003/02/08)
o in preparation for r*:
  new S/R (calc_grad_phi_hyd.F) to compute Hydrostatic potential gradient.
  pass the 2 comp. of the grad. as arguments to momentum S/R.
  but for the moment, only used if it does not change the results. 
o add finite volume form of calc_phi_hyd for buoyancyRelation OCEANIC & OCEANICP

checkpoint48c_post (2003/02/06)
Modifications in treatment of initial flux forcing controls
to avoid extra storing of flux fields.

checkpoint48c_pre (2003/01/21)
o Added tidal_basin_2d experiment (currently 1D!)
o can use r* Coordinate with OBC (but Orlanski Rad. BC not yet implemented) 

checkpoint48b_post (2003/01/27)
o r* coordinate added in #ifdef NONLIN_FRSURF block.
 (modification to pressure gradient not yet implemented)
o mom_fluxform: new S/R mom_calc_rtrans.F computes vertical transports
  (for U & V) that are used for vertical advection of momentum.

checkpoint48a_post (2003/01/24)
o In preparation for r*, use temp. array to compute vertical transport
   in flux-form momentum pkg. => change results of few test-exp. 
  Update output of: exp4, exp5, front_relax, global_ocean_pressure, 
                    lab_sea, natl_box & plume_on_slope

checkpoint48 (2003/01/23)
o fix small bug that was causing lot of warning (TIMER_STOP 'UPDATE_CG2D')

checkpoint47j_post (2003/01/21)
o add new exp. (ideal_2D_oce) to test "exotic" parameters and options.
o moved adexch from forward_step to addummy_in_stepping
o added exch in ctrl_map_...
o aveFreq.=0. at end of cost_final to avoid overwrite in
  reverse checkpointing loop
o Yet more changes in gmredi:
  * adgmredi_calc_tensor
    avoiding all recomputation of gmredi_slope_limit
  * adgmredi_x/y/rtransport
    added flag for excessive storing to avoid recomp. of
    u/v/rtans, dTdx/y/z
    -> this is not really necessary and very memory-consuming
  * adgmredi_slope_psi:
    consistency with gmredi_slope_limit in treatment of GM_slopeSqCutoff
  * gmredi_slope_limit
    re-activated full calculation of taperfct for case 'ac02'
o updating verification/ adjoints of carbon, global_ocean.90x40x15

checkpoint47i_post (2003/01/13)
o GM_EXCLUDE_() replace GM_TAPER_(): by default, all the code is compiled.
o add GM_Small_Number & GM_slopeSqCutoff as run-time parameters (data.gmredi)
  default values = 1.D-12 & 1.D+48 (=> give same results as checkpoint47f_post)
o cg2dTargetResWunit: define tolerance using deltaTmom (and not deltaTfreesurf) 
o gmredi: fix few bugs.

checkpoint47h_post (duplicate tag for PH's c48 tag, in order to move c48)
This will be a good checkpoint to plug into the ecco-branch.
o few modif.'s to get latest version adjointed
  (mainly kick out code in ini_linear_phisurf)
o modif's to run adjoint with exactConserv
o case GM_BOLUS_ADVEC should be cleaned
  S/R gmredi_slope_psi should be cleaned
o verification/carbon now has exactConserv=.TRUE.

checkpoint47g_post (2003/01/10)
o time-average AIM output: becomes independent from statvars time-average
  (can be used with #undef ALLOW_TIMEAVE) ; add new variables (e.g., RH)
o After TAF bug fix:
  Tested adjoint of gmredi package.
  Tests were done with checkpoint47 rather than with latest
  checkpoint47f_post since the latter is broken for the adjoint
  verification/carbon/ contains both ADM and TLM gradient checks.
Here they are, before they get changed/lost/stolen.
Mostly modif.'s to fix numerical sensitivities.
Gradient checks OK for
- GM_taper_scheme:
  * clipping
  * ac02
  * linear
  * glw91
  * dm95
  * ldd97
- GMREDI_OPTIONS:
  * GM_VISBECK_VARIABLE_K
  * GM_NON_UNITY_DIAGONAL
  * GM_EXTRA_DIAGONAL
  * GM_BOLUS_ADVEC
in conjunction with data.gmredi parameters to be checked in
in a few minutes under verification/carbon/code/

checkpoint47f_post (2002/12/28)
Merging from release1_p10:
o modifications for using pkg/exf with pkg/seaice
  - pkg/seaice CPP options SEAICE_EXTERNAL_FORCING
    and SEAICE_EXTERNAL_FLUXES
  - pkg/exf CPP options EXF_READ_EVAP and
    EXF_NO_BULK_COMPUTATIONS
  - usage examples are Experiments 8 and 9 in
    verification/lab_sea/README
  - verification/lab_sea default experiment now uses
    pkg/gmredi, pkg/kpp, pkg/seaice, and pkg/exf

checkpoint47e_post (2002/12/27)
o created a tag prior to creating a branch

checkpoint47d_post (2002/12/16)
o fixed bug in the oceanic pressure coordinates code: vertical viscosity 
  at the bottom boundary had an erroneous half slip boundary condition
o added bottom drag and no slip boundary condition capabilities to 
  oceanic pressure coordinates code
o added new verification experiment global_ocean_pressure, this experiment is
  also described in the tutorial section of the manual
checkpoint47d_pre (2002/12/16)

checkpoint47c_post (2002/12/16)
o Added a verification experiment for a global cubed-sphere ocean run
  -  verification/global_ocean.cubed32x32x30
  -  uses pkg/therm_seaice and pkg/bulk_forcing

o allow to run AIM physics with SPEEDY input files (from Franco Molteni)
o allow a more accurate definition of Ro_Surf (selectFindRoSurf=1)
  when using P-coordinate; only implemented for atmospheric config.
o OCEANICP & realFreshWater: include P-E direct effect on wVel ;
  NOTES: requires option NONLIN_FRSURF to be "#define".
o update advect_xz/results/output.txt (left from checkpoint44g_post)

checkpoint47b_post (2002/12/05)
Merging from release1_p9:
o pkg/seaice
  - removed GOTO's and added taf directives
  - double precision constants to reduce the g77 (Linux)
    to F77 (SGI) differences reported in release1_p8
o tools/genmake
  - added SGI options
o verification/testscript
  - updated to that of checkpoint47a_post
o verification/global_ocean.90x40x15/input/eedata
  - modified for SGI f77 compatibility
o verification/lab_sea
  - added description of sea-ice model
  - added missing matlab routines
  - added test of thermodynamics parallelization

checkpoint47a_post (2002/11/23)
o new pkg: aim_v23 
 = F. Molteni atmos.physics (SPEEDY, ver23) adapted to MITgcm. 
   for now, keep the same surface forcing as before.
 - Part-Cell implemented into AIM; check that Heat & Water are conserved
 - aim.5l_cs: use new aim pkg (run 10yr & get better results than before)
 - aim.5l_LatLon & aim.5l_Equatorial_Channel are still using old aim pkg
o add diagnostic of surface correction term in monitor output

o bulk_force and therm_seaice 
- Two packages:  bulk_force (Bulk forcing)
  and therm_seaice (thermodynamic_seaice) - adopted from LANL CICE.v2.0.2
- Earlier integration from Stephaine Dutkiewicz
  and Patrick Heimbach.
- Two ifdef statements for compile time,
   ALLOW_THERM_SEAICE and ALLOW_BULK_FORCE

checkpoint47 (2002/11/15)
differentiable version of checkpoint46n_post
o bug fix in quasihydrostaticterms
o * "clean" adjoint code (in terms of extensive recomputations)
    can now be obtained for all GMREDI options (i.e. for 
    - GM_VISBECK_VARIABLE_K
    - GM_NON_UNITY_DIAGONAL
    - GM_EXTRA_DIAGONAL
    - GM_BOLUS_ADVEC )
  * However, wrong gradient check problem remains unsolved.
  * New CPP options have been introduced for different
    tapering schemes
o external_fields_load now part of differentiation list
o pressure needs multiple storing;
  would be nice to have store_pressure at beginning or
  end of forward_step, e.g. by having phiHyd global (5-dim.)
  (NB: pressure is needed for certain cases in find_rho,
  which is also invoked through convective_adjustment).
o recomputations in find_rho for cases 
 'JMD95'/'UNESCO' or 'MDJWF' are OK.
o #define ATMOSPHERIC_LOADING should be differentiable
o ini_forcing shifted to begining of initialise_varia
o Incorporating QNVS line search routines into MITgcm
  (this is separate code, and therefore not under pkg)
  lsopt/, optim/
o Updated verification/carbon/
  - #define GM_VISBECK_VARIABLE_K
  - GM_taper_scheme    = 'ldd97'    

checkpoint46n_post (2002/11/12)
Merging from release1_p8:
o verification/natl_box:
  updating new external_fields_load routine
o New package: pkg/seaice
  Sea ice model by D. Menemenlis (JPL) and Jinlun Zhang (Seattle).
  The sea-ice code is based on Hibler (1979-1980).
  Two sea-ice dynamic solvers, ADI and LSR, are included.
  In addition to computing prognostic sea-ice variables and diagnosing 
  the forcing/external data fields that drive the ocean model, 
  SEAICE_MODEL also sets theta to the freezing point under sea-ice.
  The implied surface heat flux is then stored in variable 
  surfaceTendencyTice, which is needed by KPP package (kpp_calc.F and 
  kpp_transport_t.F) to diagnose surface buoyancy fluxes and for the 
  non-local transport term.  Because this call precedes model 
  thermodynamics, temperature under sea-ice may not be "exactly" at 
  the freezing point by the time theta is dumped or time-averaged.
  N.B.: fairly large differences in accuracy occur across
        different platforms/compilers; comparison between
        g77 (Linux) and F77 (SGI Origin 2000/MIPSpro) 
        generated output gives:
   T           S           U           V
  C D M    c        m  s        m  s        m  s        m  s
  n p a R  g  m  m  e  .  m  m  e  .  m  m  e  .  m  m  e  .
  f n k u  2  i  a  a  d  i  a  a  d  i  a  a  d  i  a  a  d
  g d e n  d  n  x  n  .  n  x  n  .  n  x  n  .  n  x  n  .

  Y Y Y Y  5  5  7  7  7  8 10  9  6  6  6  6  7  5  7  5  7 FAIL  lab_sea
o GAD: 
  - generated new common blocks to account for call of
    same gad routines with differing traceridentities
    (needed to modify tracerIdentity indices in GAD.h)
  - generated separate common blocks for case useCubedSphereExchange
    (Department of Futurology)
  - parameter lists to gmredi_?transport: added tracerIdentity
  - added new key indices to tamc.h
o external_fields_load:
  - added this routine to TAF list
  - needed to make some common blocks global and additional storing
    along the same lines as exf package (checkpoint_lev?_directives.h)
o exf:
  updated external forcing package
  - bug fixes carried over from ecco-branch
    (missing OBCS_OPTIONS.h in two routines)
  - enable easy to use "no forcing".
  - added exf I/O for atmospheric loading
  - added exf I/O for runoff data
  - transfered scaling between exf <-> MITgcm to exf namelist
o Adding new verification experiment global_with_exf.
  This verification experiment is almost identical to the
  global_ocean.90x40x15 experiment, except that it uses
  the exf (and cal) package instead of the
  external_fields_load routine (cf README file).

checkpoint46m_post (2002/11/07)
o modified testscript to return -- when there are no lines of "%MON" output 
o added new flag "quasiHydrostatic" for QH mode
  and new routine quasihydrostaticterms()
o added 2*Omega*Cos(phi)*W to u equations (non-hydrostatic Coriolis term)
  New routine: mom_u_coriolis_nh()
o fixed sign of non-hydrostatic metric terms in u and v equations.
  Depend on correct sign of gravitySign.
o added work.pc* to .cvsignore in aim directories using ifc
o introduced flag for controllin non-hydrostatic metric terms
o removed gravitySign from PARM04
o switched to g77/ifc from pgf77 in aim experiments

checkpoint46l_post (2002/11/01)
o made convective adjustment work with pressure coordinates:
 - changed the direction of k-loop in convective_adjustment.F for the
   case of pressure coordinates (OCEANICP,ATMOSPHERIC buoyancyRelation)
 - adjusted the reference pressure k-index in convective_adjustment.F
 - adjusted the convection condition in convect.F (in analogy to
   calc_ivdc.F)
 - convective_adjustment no longer computes anything on the halos
 - removed the warnings about negative salinity from find_rho.F and
   find_alpha.F; instead the new routine look_for_neg_salinity, called
   at the beginning of find_rho, find_alpha, and find_beta, does a 
   check of the entire slice, if CPP-option 
   CHECK_SALINITY_FOR_NEGATIVE_VALUES is defined
checkpoint46l_pre (2002/10/23)

checkpoint46k_post (2002/10/23)
o fixed the verification/global_ocean.90x40x15 experiment:
 - new bathymetry (the world according to A., JMC, and M.)
 - new initial fields and forcing fields (*.bin files)
 - new POLY3.COEFFS (for the next release one should switch to a full
   equation of state: JMD95P or MDJWF)
 - fixed several errors and redundancies in the data file
 - experiment uses looped cells
 - added matlab directory with diagnostic scripts for plotting of output

o S/R aim_initialise.F replace S/R aim_init from file aim_do_inphys.F:
 - read AIM physics parameters from a file (data.aimphys)
 - set defaults values = F.Molteni paper (Clim.Dyn., 2002)

checkpoint46j_post (2002/10/07)
o split calc_exact_eta in 2 S/R : integr_continuity & update_etaH
o move wVel computation at the end of the time step, in S/R integr_continuity
o create specific S/R to exchange T,S before DYNAMICS (for stagger time step)
o update timeave pkg for wVel diagnostic.
checkpoint46j_pre (2002/09/27)

checkpoint46i_post (2002/09/25)
o Clean up AIM package (and keep the results unchanged):
  include CPP_OPTION and use IMPLICT NONE in all routines ; 
  declare all the variables _RL ; use _d 0 for all numerical constants.
  use ifdef ALLOW_AIM everywhere. And now AIM can be used with g77 !

checkpoint46h_post (2002/09/25)
o cleaned up the use of rhoNil and rhoConst. 
  - rhoNil should only appear in the LINEAR equation of state, everywhere 
    else rhoNil is replaced by rhoConst, e.g. find_rho computes rho-rhoConst
    and the dynamical equations are all divided by rhoConst
o introduced new parameter rhoConstFresh, a reference density of fresh 
  water, to remove the fresh water flux's dependence on rhoNil. The default
  value is 999.8 kg/m^3
o cleanup up external_forcing.F and external_forcing_surf.F
  - can now be used by both OCEANIC and OCEANICP
checkpoint46h_pre (2002/09/18)

 Added code to convert surface volume flux (fresh water) into
 a mass flux when using P coordinates in the ocean (OCEANICP).
 Note: It assumes you have set rho0=rhoConst=density of fresh water.

checkpoint46g_post (2002/09/18)
o Include a new diagnostic variable phiHydLow for the ocean model
  - in z-coordinates, it is the bottom pressure anomaly
  - in p-coordinates, it is the sea surface elevation
  - in both cases, these variable have global drift, reflecting the mass
    drift in z-coordinates and the volume drift in p-coordinates
  - included time averaging for phiHydLow, be aware of the drift!
o depth-dependent computation of Bo_surf for pressure coordinates 
  in the ocean (buoyancyRelation='OCEANICP')
  - requires a new routine (FIND_RHO_SCALAR) to compute density with only 
    Theta, Salinity, and Pressure in the parameter list. This routine is 
    presently contained in find_rho.F. This routine does not give the
    correct density for 'POLY3', which would be a z-dependent reference
    density.
o cleaned up find_rho
  - removed obsolete 'eqn' from the parameter list.
o added two new verification experiments: gop and goz
  (4x4 degree global ocean, 15 layers in pressure and height coordinates)
checkpoint46g_pre (2002/09/16)

checkpoint46f_post (2002/09/16)
o Enable tangent linear (forward mode) gradient checks:
  - extended active file handling to g_... files
  - added TANGENT_SIMULATION to theSimulationMode
  - extended grdchk package accordingly
o added tangent linear setup in verification/carbon/code_ftl
o added adjoint setup in verification/front_relax/code_ad

checkpoint46e_post (2002/09/05)
o Added new equation of state -> MDJWF
  - EOS of McDougall et al., 2002, JAOT, submitted
  - caveat: the equation of state is only valid for a smaller (more
    realistic?) range of values than JMD95P/Z and UNESCO
  - added masks to the calculation of pressure in store_pressure
  - added more check values for density in check_eos (ini_eos.F), some of 
    the old check values are out of the range of the MDJWF-eos, so don't
    expect perfect matches for those 
checkpoint46e_pre (2002/08/19)

checkpoint46d_post (2002/08/19)
o fixed store_pressure to work with both buoyancy relation = 'OCEANIC' and
  'OCEANICP', also initialised field pressure correctly in ini_eos in the 
  case of pressure coordinates. eosType='JMD95Z' in 
  combination with buoyancyRelation='OCEANICP' now causes an error.
o Changed p = pressure(i,j,k,bi,bj)  to  p = pressure(i,j,kRef,bi,bj)
  in find_alpha/beta.
checkpoint46d_pre (2002/08/15)

o Changed p = pressure(i,j,k,bi,bj)  to  p = pressure(i,j,kRef,bi,bj)
  so that JMD95Z and JMD95P give approptiate static stability in find_rho. 

checkpoint46c_post (2002/08/15)
o Changes necessary for ocean in p-coordinates
 -  Added new buoyancy relation = 'OCEANICP'
 -  Added new parameters = gravitySign (this used to be contained inside
    the factor dRdZ which I added when we first switched to R coordinates).
 X GM/Redi is not compatible (yet)
 X bottom drag and no-slip need to be debugged.
checkpoint46c_pre (2002/08/07)

checkpoint46b_post (2002/08/07)
o Added new equation of state -> JMD95Z and JMD95P
  - EOS of Jackett and McDougall, 1995, JAOT
  - moved all EOS parameters into EOS.h
  - new routines ini_eos.F, store_pressure.F
o Added UNESCO EOS, but not recommended because it requires 
  in-situ temperature (see JMD95)
o Modified formatting for knudsen2.f in utils/knudsen2 and added
  unesco.f to be used with POLY3
checkpoint46b_pre (2002/07/31)

checkpoint46a_post (2002/07/31)
o Added (atmospheric) pressure loading
  - new field in FFIELDS.h, etc...
  - new cpp flag ATMOSPHERIC_LOADING
o Changed hFacC to _hFacC in calc_phi_hyd.F
o Added SHORTWAVE_HEATING to some files for consistency
checkpoint46a_pre (2002/07/13)

checkpoint46 (2002/07/13)
further merges from release1_p5
o new ctrl package
  - adopted from ECCO environment to enable optimization
  - added Eliassen Palm fluxes to controls
o added Eliassen Palm flux controls to gradient check package
o cost package
  - Compatible with new ctrl package
  - added Eliassen Palm cost hooks
  - modif's of existing cost functions
o Adjoint-related bug fixes in kpp:
  - kpp_calc: sore of kpphbl avoids recomputation/call to S/R kppmix
  - kpp_routines: store of Rib avoids partial recomputation bug of TAF.
o autodiff package
  - flow directives:
    + new for S/R do_the_model_io
    + enhanced for S/R checkpoint
    + new gmredi.flow
  - Introduced CPP option ALLOW_AUTODIFF_MONITOR to
    disable adcommon.h/g_common.h by default.
  - fixed problem for adjoint of global_max
o modified verification/carbon/
o New setup for adjoint of global_ocean
o added hooks for Eliassen Palm fluxes (dynamics.F, ini_fields.F)
o cleaned TAF keys iikey, idkey (dynamics.F, thermodynamics.F)
o incorporated hooks for sponge layer code (external_forcing.F)

checkpoint45d_post (2002/07/12)
o import 2 fixes from release1_p5 (CG2D.h & packages_readparms.F)
o use recip_dx*,recip_dy* instead of /dx*,/dy* in orlanski_E,W,N,S
  (affects plume_on_slope "cg2d" output)
o add new parameter deltaTfreesurf for free-surface time stepping
o exchange gT,gS when using staggerTimeStep & GM & Oly<4 
o NONLIN_FRSURF: rescale gNm1 to get a better conservation with A-B
o change phiMin in exp1 (to agree with documentation)
o add new flags: 
 - T,S forcing inside/outside Adams-Bashforth
 - turn off temp,salt advection and/or forcing
 - for each tracer, define internal flag for multiDimAdvection & A-B
o monitor: change definition of KE to check conservation of Energy

checkpoint45c_post (2002/05/30)
o Removed f90 comments ("!")
o Modified initialisations to enable exf package for MITgcm
  (without invoking ECCO_PACKAGE).
o modifications to gradient check package (Martin Losch)
  - enable centered differences
  - modified format of standard output

checkpoint45b_post (2002/05/30)
o cleaned exchange calls in cg2d
o Included CPP option ALLOW_AUTODIFF_MONITOR in forward_step
o included CPP option SINGLE_LAYER_MODE in thermodynamics
  to configure barotropic setup (Martin Losch)
o moved some initialisations within bi,bj loop in dynamics
  (TAF flow dependency)
o in initialise_varia, moved call packages_init_variables
  before convective_adjustment_init
  (corresponding adjustment of TAF tape initialisation).
o in calc_diffusivity/calc_viscosity extended domain to full overlap.

checkpoint45a_post (2002/05/01)
o compute Rho over the whole domain (extend iMin,jMin indices)
o specific exchange for X-slice domain (case Ny=1)
o argument futureIter of S/R obcs_calc missing in exp4 & internal_wave /code
o solve_for_pressure : set cg2d_x to zero where OBCS are applied

checkpoint44h_post = checkpoint45
o Fix to restore differentiability:
  place at which packages_init_variables is called in
  initialise_varia is crucial for reverse control flow.
o modifications in GMRedi to enable stable adjoint
  (corresponding modif's in thermodynamics, dynamics)
o added missing hook for sponge layer code in external_forcing
o modified test cost functions
o storing in gad_advection (plus removal of write(0,*)!
o missing headers TR1.h added in convective_adjustment routines
o errorMessageUnit set non-equal zero in eeboot
  (conflict on some platforms, e.g. IBM SP3)
o modified carbon verif.

checkpoint44h_pre (2002/03/14)
o vertical grid option: allow to put the Interface at the middle between
  2 cell-centers ; replace delZ in pkg/kpp by drF.
o GM Advective form: Tracers are advected using the residual transport (=
  Euler+GM-bolus); set param GM_AdvSeparate=T to return to previous form.

checkpoint44g_post (2002/03/05)
o fix surface correction term in multiDimAdvection (affects plume_on_slope 
  results) ; ifdef missing in thermodynamics.F

checkpoint44f_pre,checkpoint44f_post
o added PTRACERS package
  This allows an arbitrary number of passive tracers to be integrated
  forward simultaneously with the dynamicaly model.
  + Implemented so far:
    - basic forward algorithm (time-stepping, advection, diffusion, convection)
    - I/O and checkpointing
    - GM/Redi  *but*  using the GM/Redi coefficient of Salt
  + Not implemented so far:
    - KPP
    - OBCS
  + No specific example supplied (yet) but global_ocean.90x40x15 has the
    necessary data.ptracer file. Simply use -enable=ptracers and uncomment
    line in data.pkg.
  + This package is disabled by default since it increases storage.


o testscript: added -cleanup option
o Shap_filt: a) new shap_filt S/R to use no-slip BC with S2 filter
             b) enable to filter 2D fields.

checkpoint44e_pre,post
o re-wrote convective adjustment to use pre-calculated weights
  Affects: model/src/convective_adjustment.F, convective_adjustment_ini.F
  Adds:    model/src/convective_weights.F, convectively_mixtracer.F
  Original calls to convect() still in place.

chkpt44d_pre,post
o added missing EXCLUDE_MONITOR flags
o changed "e" to "_d" in gmredi_slope_limit, gmredi_slope_psi
  (incompatible typ in MIN/MAX expressions caused problems
  on IBM SP3)
o in genmake added variable MAKEDEPEND
  plus resetting for case SunOS
o added timer_stats.c routine for IBM SP3
o removed variables in dynamics
!!! I forgot to create tag chkpt44d_pre !!!
!!! But chkpt44d_pre = chkpt44c_post    !!!

o real fresh water flux implemented with non-linear free-surface.

chkpt44c_pre,post
o few fix (mask in shap_s2, EmPmR in external_field_load, 
  USE_NATURAL_BCS in solve_for_P); 
o add arguments myIter & myTime to S/R obcs_calc & solve_for_P

checkpoint44b_pre/_post
o merge of relevant stuff from the ecco-branch:
  - genmake: removed $S64 overwrite for case SunOS
  - pkg/exf: update and corrections for field swapping and obcs
  - pkg/ecco: parameter lists for the_model_main, the_main_loop
              harmonized between ECCO and MITgcm
  - pkg/autodiff: added flow directives for obcs, mdsio_gl_slice
                  updated checkpointing_lev... lists for obcs
  - model/src: minor changes in forward_step, plot_field
               added directive for divided adjoint in the_main_loop
  - pkg/mdsio: added mdsio_gl_slice

o check parameters & config (chkpt44a_pre,post)
o OBC and NonLin_FrSurf.

checkpoint44 (2002/01/18)
o fix bug in mom_vi_del2uv
o select when filters are applied ; add options to zonal_filter (data.zonfilt)
o gmredi: fix Pb in the adiabatic form ; add options (.e.g. Bolus advection)
o update AIM experiments (NCEP input files)
o improve and extend diagnostics (Monitor, TimeAve with NonLin-FrSurf)
o added some stuff for AD

checkpoint43 (2001/09/28)
o added two new advection tests
o added global 4x4 degree ocean test
o added test of H&S94 with free surface on cube
o some final mods for gradient check, adjoint,...

checkpoint42 (2001/09/27)
  Fixed AD-related problems:
o Store directives up-to-date with re-arranged Adams-Bashforth
  (mainly thermodynamics.F)
o New store directives for multi-dim. advection schemes
  * new CPP flag ALLOW_MULTI_DIM_ADVECTION
  * new common block and key passkey
  (mainly gad_advection.F)
o Modified store directives for split of dynamics/thermodynamics
  for the case ALLOW_KPP
o Cleaned argument list for timestep_tracer.F

checkpoint41 (2001/09/27)
o re-formatted/added comments in prologues of key subroutines
  to work with protex

checkpoint40 (2001/09/27)
o moved calc_gs, calc_gt and calc_tr1 back to model/src
o added FLT (floats) package from Arne along with demo. experiment
o re-arranged Adams-Bashforth scheme for tracers to allow easier
  implementation of forward-in-time forcing terms
o more mods for non-linear free-surface including new variable
o modified multi-dim method to work on cube
o bug fix in KPP (from DM)

checkpoint40pre9 (2001/09/27)
o added DST advection schemes
o fix MPI bug on SGI's
o modifications for non-linear free-surface
o fixed conditionals for fixed flow/passive tracer only mode
o added tension/strain form of stress tensor
o changes to commenting of arguments for TAF/TAMC
o added/updated many matlab scripts
o added multi-dimensional advection method for tracers
  
checkpoint40pre8 (2001/09/05)
o new package rw/
  Added method for dumping intermediate local arrays:
  mdsio_writetile - same as mdsio_writefield except works from inside
                    bi,bj loop
  mdsio_writelocal - same as mdsio_writetile except works for local
                     arrays
  write_local_r? - higher-level wrapper for mdsio_writelocal
  Controlled by diagFreq. Defaults to zero (ie. no dumps)
  Example given at end of mom_vecinv.F that dumps some local arrays.
o replaced calc_mom_rhs.F by mom_fluxform.F/mom_vecinc.F to
  control flux-form versus vector invariant code.
  Switch is runtime flag vectorInvariantMomentum (defaults to false)
  or genmake -DISABLE ...
o TAMC-related update to cope with mom_fluxform.F/mom_vecinc.F
  (additional storing is now needed for case vecinv;
  currently nothing implemented to switch this storing off
  in case fluxform is used since no CPP flag available).

checkpoint40pre7 (2001/08/14)
o bug fix in dynamics.F
  calc_viscosity called before k=1,Nr loop.
o added some #ifdef's ALLOW_PASSIVE_TRACER
o cleaned initialisations in ctrl_map_ini
  related to TAF

checkpoint40pre6 (2001/08/13)
o split dynamics into thermodynamics & dynamics
o corresponding split of calc_diffusivity into
  calc_diffusivity, calc_viscosity
  (kpp_calc_diff, kpp_calc_visc).
o Added diffkr, kapgm to control variables
o bug fix in gmredi_slope_limit for ldd97

checkpoint40pre5 (2001/07/31)
o proper initialization of Adams-Bashforth time stepping
  + uses forward step for very first step of model (iter=0)
o re-generated *all* output since almost all output is modified by this
  change (sorry but we've been putting this one off for about 2 years)
  + natl_box, aim.5l_Equatorial_Channel and aim.5l_zon-ave were
    *not* regenerated since they are already out of date and I don't
    want to create the impression that they are suddenly working.
o removed KAP stuff for DEC's
o modified/added many .cvsignore files in */code and */input
o added new expt "solid-body.cs-32x32x1"
  + this uses an alternative form of ini_curvilinear_grid.F which
    is not necessarily any better than the current one...

checkpoint40pre4 (2001/07/30)
o added re-initialisations of utrans,vtrans,rtrans in
  calc_common_factors which are crucial for TAF.
o extended iMin,jMin range for calc_common_factors,
  calc_diffusivity
o added option ALLOW_PASSIVE_TRACER
o a few minor updates and fixes

checkpoint40pre3 (2001/07/13)
o created calc_gtr1.F for gad package
o split the_main_loop and re-introduced forward_step
o some recomputations of nIter0 for TAMC

checkpoint40pre2 (2001/07/13)
o Updated to latest branch of AJA, JMC
o Added gradient check package
o Added routines for passive tracer handling
o Added carbon sequestration sensitivity experiment

checkpoint39 (2001/05/14)
 o Modifications and fixes to support TAMC
   (mainly missing or wrong directives)
 o Corrected common blocks when fooling TAMC to produce adjoint I/O
   in addummy_in_stepping
 o Updated verification/vero/ (bug fixes in code/, correct pickups in input/)
 o Enabled "sliced" (xz-,yz-) exchanges, needed for obcs.
 o Included following packages:
   cal: calendar
   exf: external forcing
   ecco: essential routines to control use of cal, exf
         (NB: this is not the full ECCO environment)
 o disabled some packages by default in genmake

checkpoint38 (2001/04/10)
 o see notes_c37_adj.txt
 o corrected wrong layer index in external_forcing_t
 o replaced the_main_loop/forward_step by the_main_loop
 o removed forceoutput from write_state
   (replaced criteria for initial/final state)
 o added runtime flag for pre-C35 pickups: usePickupBeforeC35

checkpoint37 (2001/03/13)
 o mdsio.F routine split and packaged in pkg/mdsio
   (mdsio.F and mdsio_gl.F still exist in eesupp/src but are not
    used unless genmake -disable=mdsio)
 o allow a more precise surface-geopotential gradient for the atmosphere
   taking into account the change in space of Alpha (=1/rho) at the surface.
 o variable "etaN" (replace cg2d_x) is the surface R-anomaly [r unit]
   (ocean: sea surface height [m] / atmos: surface pressure anomaly [Pa])
 o Change units: Phi_Hydrostatic (=phiHyd), Phi_Surface(=cg2d_x) and
   Phi_NonHydrostatic (=cg3d_x), all have now the dimension of a potential
   [m2/s2] (pressure/rhoConst in the ocean ; Geo-Potential in the atmosphere).
 o Time-Average diagnostics defined as a pseudo package "timeave".
 o pickup files : old pickup (before c35) did not work with new code (c35
   and after) unless activating 2 commented lines in initialise-varia.
 o Non-Hydrostatic pickup file Pb fixed.
 o bug with Rigid-lid version (since c35) fixed.  

checkpoint36 (2001/02/20)
 o implement Crank-Nickelson barotropic time-stepping
 o recover Time-Average diagnostics
 o fix Pb in checkpoint (PR#19) 
 o AIM become a standard package ; clean unused CPP_kees

checkpoint35 (2001/02/08)
 o subtantial rewrite of dynamics.f
 o allows staggered time-stepping
 o packaged obcs, aim (Atmospheric Physics), zonal_filt, shap_filt
 o added bottom drag (linear + quadratic)

checkpoint34 (2001/01/30)
 o Modified exchange routines for correct reverse simulation.
 o Added verification output to comply with bug fix in impldiff.F
   as of c33 (exp2, natl_box).
 o Corrected store directives in dynamics.F
 o Corrected array boundaries in impldiff.F
 o Corrected array dimensions in gmredi.
   Added temporary scalars to avoid storage by TAMC (gmredi, kpp).
 o Added routine GLOBAL_SUM_INT to global_sum.F
 o Added mdsio_gl.F for ECCO purposes.

checkpoint33 (2000/11/30)
 o Fixed bug in lower BC in impldiff.F
 o Fixed confusion about units of forcing arrays in FFIELDS.h
   namely Fu,Fv,Qnet,Qsw,EmPmR:
   - Removed verification/natl_box/code/external_fields_scale.F
     (did not differ from that in model/src)
   - Changed units of fu,fv,Qnet,Qsw,EmPmR back to proper units
     (see FFIELDS.h for description)
   - Scale fu,fv,Qnet,Qsw,EmPmR when used in external_forcing_surf.F,
     kpp_calc.F and kpp_transport_t.F
   - Removed model/src/external_fields_scale.F and calls to it
   - verification/natl_box uses flux data with "atmospheric" sign so
     a special version of external_fields_load.F is used to
     change the data as it's read in. This way, the arrays
     have the right units and signs at all times tha a user could
     possibly use them.
 o Corrected genmake to delete a temporary file during configuration

checkpoint32 (2000/11/13)
 o Scaling of forcing fields moved from external_forcing.F to
   external_fields_scale.F, called directly after loading fields.
 o Surface relaxation terms added to surface tendency fields in
   extra subroutine.
 o impldiff.F changed to avoid storing by TAMC of huge intermediate
   fields.
 o Changes in GMRedi to comply with packaging structure.
 o Modifications and bug fixes in KPP package.
 o Verification experiment for KPP added (verification/nat_box/)

checkpoint31 (2000/09/11)
 o Packages interface brought in line with defined standard
   -> new routines packages_...F
   -> changes in initialise_fixed.F, initialise_varia.F
   -> enables initialisation interface for ECCO package
 o Rescaling of external forcing fields immediately after read
   (removed from external_forcing.F) 
   -> new: surface_fields_scale.F
   -> affects ini_foorcing.F, external_fields_load.F
 o Computation of surface tendencies before tendency updates.
   -> new: external_forcing_surf.F
 o Change of variable names useGMRedi, useKPP, useECCO
 o Further changes in dynamics.F, impldiff.F for TAMC
 o Tested for experiments 0, 2, 4.
   - not yet tested for GMRedi.
   - not yet tested for KPP.

checkpoint30 (2000/07/13)
 o Updates for OBCs
 o New experiment for test OBCs (internal_wave)
 o New output.txt in verification/exp4/results/
 o Updates for KPP: calculation of viscosity corrected, new variables
   kpp_dumpFreq and kpp_taveFreq
 o CPP'd calls to system routines for TARGET_CRAY_VECTOR (P.H.)
   and entry for T90 in genmake

checkpoint29 (2000/06/21)
 o packaged KPP and GM/Redi

checkpoint28 (2000/06/09)
 o Corrected initialization of hFacMin for difference vertical coordinates
 o Modified calculation of partial cell thickness to more robust algorithm
 o config_summary.F: replaced write_1D_... by write_0D_...
   read_write.F: added subroutines write_0D_...
 o routines calc_common_factors, calc_gs, calc_gt, calc_phi_hyd, find_rho:
   included some initialisations required for TAMC.
 o routine calc_isoslopes: modified sqrt computation to make it 
   differentiable for zero argument.
 o routines dynamics, impldiff:
   included store directives and tape key computations required for TAMC.
 o ALL TAMC related changes are between ifdef ALLOW_AUTODIFF_TAMC

checkpoint27 (2000/04/10)
 o fixed calc_isoslopes() to so that cancellation of terms in tensor
   formulation works properly with variable resolution.
 o restructured the calling tree between the_model_main() and dynamics()
 o split initialise() into initialise_fixed() and initialise_varia()
 o introduced initialization file pSurfInitFile for free surface (cg2d_x)
   in new routine ini_psurf()

checkpoint26 (2000/04/05)
 o moved some #ifdef in optional routines to encompass everything
   except the argument declarations. This was using up some memory.
 o fixed macros like _ADT to work with both versions of Linux cpp
 o cleaned up some unused and uninitialized variables
   (helps when debugging with strict compile options)
 o split up CPP_EEOPTIONS.h into options and macros
   (macros are now in eesupp/inc/CPP_EEMACROS.h)
 o patch for 2 processor JAM mode

checkpoint25 (2000/03/15)
 o updates for OBCs and NH
 o dramatically reduced memory usage
 o added "JAM" routines for use on Artic network
 o parameterization of convection by implicit vertical diffusion
 o added a diagnostic of convective index
 o moved call to calc_divg_hat() from dynamics() to solve_for_pressure()
   (this is was partly for OBCs and NH but also in anticipation of
    an explicit free-surface option)
 o initial state input files for U and V

checkpoint24 (1999/08/02)
 o Removed some spurious "REAL"s
 o Updated KPP to latest version from JPL
 o Added a COS(latitude) in horizontal viscosity

checkpoint23 (1999/05/26)
 o Added del^4 diffusion for salt and temperature
 o Multiple minor fixes (implicit none's, arguments to global_sum, etc.)

checkpoint22 (1999/05/18)
 o Made many small changes: implicit none, format(i5), etc...
 o Introduced KPP mixing scheme (compiles and runs but *not* tested)

checkpoint21 (1999/05/18)
 o Introduced new I/O package that supports direct-access records (mdsio.F)
 o Split-up mid-level I/O routines
 o Updated input data for experiments 0,1,2,4 and 5
 o Finally removed the genmake.* scripts (everyone seems happy with genmake)

checkpoint20 (1999/03/22)
 o Tidied up open-boundaries some more
 o Added non-hydrostatic code
 o Fixed some input data
 o Modified MPI start-up to work in "coupled" context.

checkpoint19 (1998/12/15)
 o Tidied up directory structure for verification experiments.
 o Added new code for open boundaries.
 o Corrected advective terms near boundaries.
 o Added CPP flag for "old UV" geometry and corrected spherical geometry.
 o Implemented free-slip/no-slip BCs and del^4 dissipation.
 o Split default parameters out of ini_parms.F into set_defaults.F.

checkpoint18 (1998/11/30)
 o Further changes for optional code generation with 
   CPP - ugh!

checkpoint17 (1998/11/03)
 o Beginning to incorporating modularity
   for supporting atmos. and ocean configs.
 o Small changes for TAMC complinace
 o New ultra simple test case. Barotropic box
   configuration "exp0".

checkpoint16 (1998/10/28)
 o Minor changes to exchange routines to support 
   accumulation in reverse mode. Adjoint of an
   assignment is an addition.
 o Changes to support compilation by TAMC (LR(1) 
   syntax) and by g77 under Linux ( 72 character
   limit ).

checkpoint15 (1998/09/29)
 Rewrote exchange routines to allow
 o General tile <-> tile connectivity.
 o TAMC reverse mode flag ( is this really needed? )
 o Variable width overlap and exchange region widths.
 o Hooks for sharing data via DMA, Arctic, Memory Channel, 
   shmput/shmget, VIA, SYSV shmem and every other cool 
   communication method.

checkpoint14 (1998/09/09)
 Consistent isomorphism chages made. These allow dynamical core
 to support both pressure and meters as a vertical coordinate.

checkpoint13 (1998/07/17)
 Release which corrects global_max problem and a couple
 of KGM time-averaging diagnostic errors. Also contains
 a double-gyre experiment setup as well as the baseline
 4 degree global template. The double gyre template is
 organised to allow it to be applied automatically to
 the baseline configuration.

branch-point-rdot
 A few tidy-ups have been made bt the real point of this
 check-point (excuse the pun) is to allow a branch to be
 made for the purposes of adding the rDot alterations.
 I don't want to commit the rDot to the main-trunk until
 we've actually tested it...

checkpoint12 (1998/07/08)
 Tidy up and added generic genmake script (formerly
 configure script). 
 Released to testers.

checkpoint11 (1998/07/02)
 Re-arranged initialise() and introduced ini_vertical_grid()
 and ini_masks_etc().

checkpoint10 (1998/07/01)
 Introduced the configure script.
 Separated out the diags package.
 Added template for writing time-averages of tile/intermediate quantities.
 Updated SIZE.h in exp2 and made the data big-endian.

checkpoint9 (1998/06/22)
 MPI fix. Filename changes (meta/data). salbin*y stuff.
 General tidy-up.
 SST.bin SSS.bin added to verification/exp2

checkpoint8 (1998/06/22)
 Inludes time-dependant forcing and time-averaging.
 Works at 4x4 and 2.8125x2.8125 global

checkpoint7-4degree-ref
 Branch from checkpoint7. Released for application to
 global modeling and general modeling - process studies, regional
 model etc.. 
 Configured for verification/exp2 - 4 degree global, two process.

checkpoint7 (1998/06/15)
 Created by cnh
 Simple 4 degree global simulation 
 configuration.
 Includes climatological wind, 
 hydrography, bathymetry etc
 Does not include Heat Flux and E-P

checkpoint6 (1998/06/08)
 Created by cnh
 merged checkpoint5 with CD and 
 spherical polar code. 
 Still some problems with GM Redi
 abd full topography.

checkpoint5 (1998/06/08)
 Created by AJA
 contains updates to GM Redi
 and reordered timestepping loop
 for Implicit Diffusion.

checkpoint4 (1998/05/30)
 Created by cnh
 Contains memory saving macros ( _rdxc etc..) for when
 grid variations are limited.
 Contains polynomial coeffs for EOS and knudsen program
 for generation.

checkpoint3 (1998/05/26)
 Created by cnh
 Added extra flags for runtime options
 Added this file
 Added implicit free-surface
 Added pre-conditioner
 Put compare01 into repository ( compare01/... )
 Put data and eedata into repository ( verification/exp1 )

checkpoint2
 Created by AJA
 Added GM/Redi

checkpoint1
 Created by AJA
 Restructured kloop in dynamics.F
 Added non-linear EOS

baseline
 Original checked in code

