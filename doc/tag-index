$Header: /home/jahn/src/cvs2git/MITgcm/20170915-2/gcmpack-all-patch/MITgcm/doc/tag-index,v 1.53.4.44 2003/06/20 05:43:06 heimbach Exp $

    Notes on tags used in MITgcmUV
    ==============================

untagged:
o minor changes to pkg/seaice pkg/cost/cost_ice.F
  and verification/natl_box_adjoint/README
o Modif's to enable tangent linear run in ECCO environment
  including time-dependent forcing
  * main problem is missing call mdsreadfield out of exf_set_gen
    (i.e. computation of trajectory in TLM mode)
  * incorrect g_active_write_...
  * (re-) init of bar files and g_bar files
  * still a problem for TLM of seaice code... later.
o Reverted back to 3-dim. tbar, sbar for SST, SSS bar files.
o MERGES:
  * obcs/ ctrl/ G. Gebbie code
    (major changes in ctrl handling, volume flux balancing etc.)
  * cost/ ctrl/ A. Koehl code
    - new cost contributions (new data types)
    - efficient pack/unpack for time-dependent 2-d fields
o replaced mutiple ctrl_get... by single generic ctrl_get_gen.F
  (except obcs)
o somewhat cleaned package initialisation sequence for
  ctrl/ cost/ ecco/

ecco_c50_e32
o Patrick's adjoint-model storage directives for pkg/seaice
o merged with checkpoint50g_post (pkg/seaice and verification/lab_sea)
  - added SEAICE_MULTILEVEL for 8-category sea-ice thermodynamics
  - LSR sea-ice dynamic solver moved to SouthWest B-grid location and
    made the default because of faster convergence than ADI
o Modifications for adjoint of SEAICE_ALLOW_DYNAMICS
  - extended state in checkpoint_lev...
  - in lsr.F, replaced GO TO by fixed loop index (also avoid DO WHILE)
  - YEAH: in lsr.F, (first) successful use of CADJ LOOP = ITERATION
  - avoid stoing in S/R budget for now
  - in dynsolver.F, avoid NPSEUDO loop for adjoint
  - new comlev1_lsr in the_main_loop
o Small modif's in lsopt/, optim/ to ease compilation
  New script to run optim (lsopt)

ecco_c50_e31
o exf totally restructured
  - replaced all exf_set_ routines by one generic exf_set_gen.F
    and made sure it's still differentiable
  - split exf_getffields.F into new exf_bulkformulae.F
  - exf_inscal_/exf_outscal_ suffixes consistent with field names
o New cost function: Tini-Tfin to do model spinup optimization.
o Started new verification exp for Tini-Tfin optimization.

ecco_c50_e30
o corrected CPP option mismatch in exf_Bulk... functions for case 
  #define ALLOW_ATM_WIND && #undef ALLOW_ATM_TEMP
o Merging from release1_p13 and from icebear5
  - bug fix for pkg/seaice dynamic solver
  - Added SEAICE_initialHEFF to pkg/seaice
  - Additional options for pkg/cost/cost_ice.F
  - Updates to verification/natl_box_adjoint
  - pkg/ctrl/ctrl_init.F
    Fix for determination of startrec and endrec.
  - pkg/cal/cal_toseconds.F
    Fix for negative intervals shorter than 1 day.

ecco_c50_e29
Bug fix for merging between c50 and KPP.
ikey was passed from thermodynamics to kpp_calc via
common block rather than being recomputed in kpp_calc,
in contradiction with new key itdkey.
New key ikppkey created, and tamc.h headers updated.

ecco_c50_e28
o major merge:
  ecco-branch merged with checkpoint50
  gmredi now available, grdchk, DIVA up-to-date for MPI
  However, two outstanding problems:
  - kpp adjoint is broken, needs fixing!
  - a few minor modif's in handling of CPP option
    ALLOW_TANGENTLINEAR_RUN in conjunction with
    ALLOW_ECCO_OPTIMIZATION are necessary to enable
    TLM runs with ECCO setup

ecco_c44_e27
o exf:
  - Enable initialisation of forcing fields to constant 
    (runtime) values.
  - in exf_getffields.F
    Reduce i-/j-loop to interior domain, discarding overlaps.
    That also fixes wrong TAF-key computations for key_1, key_2
    with bulf formulae.
  - exf_init.F modify #ifdef for exf_init_evap
  - exf_getffieldrec.F, ctrl_getrec.F
    The following INT-usages are not safe:
      fldsecs  = int(fldsecs/fldperiod)*fldperiod
      fldcount = int(fldsecs/fldperiod) + 1
    and were modified.
  - added repeatPeriod (from MAIN branch)
o grdchk: updated and merged
  - has both ADM and TLM checks
  - works for single- and multi-proc.
  - output cleaned
  - worked successfully for parallel DIVA
  Needed one update in EEPARAMS.h and updates in ctrl package
  More modif's may be necessary for ECCO code to support TLM.
o autodiff: checkpoint_lev...
  - updated storing for bulk formulae (some arrays were missing)
  - added state for seaice package
  - synchronized with main branch
o DIVA:
  Modif.s in
  - cost_init.F
  - cost_averagesfields.F
  - ecco_the_main_loop.F
  - ecco_the_model_main.F
  and added cost_final_restore.F cost_final_store.F
  o With these changes, it is possible to fully separate
    the first forward run to compute the cost function (mdthe_main_loop)
    and adjoint runs over individual DIVA intervals (adthe_main_loop)
    into separate model executions.
    This enables better tuning of DIVA to given queue sizes.
  o Loss of cost function value in consecutive DIVA runs is
    fixed by storing to 'costfinal' file.
  o Appropriate call of ctrl_unpack/_pack,grdchk_main at 
    beginning/end of adjoint integration is accounted for.
  The current changes apply to TAF-1.4.26.
  TAF has one remaining bug, requiring one manual change
  (see MITgcm manual).
o bug fix plus modif for ubar, vbar in cost_averagesfields
o cal: synchronized between MAIN and ecco-branch

icebear4
o Added cost_ice for sea-ice volume sensitivity experiment.
o ecco_the_model_main.F: SEAICE_WRITE_PICKUP must precede WRITE_CHECKPOINT
o Reduced derivative singularities in pkg/seaice.
o Updated verification/natl_box_adjoint

icebear3
o Removed spurious iikey and idkey
o pkg/exf
  - bug fix in treatment of downward radiation
o pkg/seaice
  - added initial sea-ice thickness parameter SEAICE_initialHEFF
o updated verification/natl_box_adjoint

icebear2
o Added missing /* */ to CPP comments in pkg/seaice, pkg/exf,
  kpp_transport_t.F,and ecco_the_main_loop.F
o adjoint-friendly modifications to pkg/seaice
o added verification/lab_sea as per release1_p12_pre

ecco_c44_e26
o Merging pkg/exf and pkg/seaice from cvs tag ecco_ice2
o exf: Modifications to correctly handle evap field for adjoint
o grdchk:
  Added code to perform gradient checks for bulk formulae/atmos. state
  (atemp, aqh, uwind, vwind).
  NOTE: 
  This package is out of synch with c48 package.
  The latter also has the tangent linear gradient checks.
  Need to be merged.
o verification/natl_box_adjoint:
  * added new setup: code_bulk/, input_bulk, results_bulk
    (Experiment 2, described in README)
    uses bulk formulae and atmos. state as control instead of
    air-sea fluxes.
    Performs gradient checks for first 4 elements of atemp control.
  * changed standard verification to perform
    gradient checks on first 4 elements on hflux control.
  * gmredi switched off (will come after merge with c48).

ecco_c44_e25
o Merging some GM changes from main trunk (c47) to ecco-branch.
o Updating verif. natl_box_adjoint with GMRedi.
o Adding setup with explicit differentiaton of pressure solver.
o Bug fix: missing OBCS_OPTIONS.h for sponge layer code.
o (Re-?) Commiting old bug fixes in kpp to ecco-branch
  (kpp_calc.F, kpp_routines.F)
o exf:
  updated external forcing package
  - cleaned old exfa stuff
  - bug fixes
    (missing OBCS_OPTIONS.h in two routines)
  - enable easy to use "no forcing".
  - added exf I/O for atmospheric loading
  - added exf I/O for runoff data
  - transfered scaling between exf <-> MITgcm to exf namelist

ecco_c44_e24
o modifications to gradient check package (Martin Losch)
  - enable centered differences
  - modified format of standard output
o bug fix for nwettile contents
  so far assumed global sum  in first entry (1,1,k),
  needed for global control vector
  -> introduced new variable nwet[c/w/s]global(nr)
o shifts of calls to cal/exf package to be accessible
  in MITgcm stand-alone
o shifted packages_init_variables before convective_adjustment_ini
  (corresponding update of TAF tape initialisation).
o removed auxiliary field in impldiff
  (caused numerical differences for GMRedi cases)
o updated obcs control part (G. Gebbie)
o removed some f90 comments ("!")
o Bug fixes and updates in cost package
 * cost_final: correct multiplier mult_tauv, mult_sflux
 * cost_hyd: added call cost_ssh
 * cost_init_barfiles.F: replaced arrays by tmpfld's
 * cost_readtopexmean.F: ersmask -> tpmeanmask
 * cost_weights.F: corrected wtheta[2], wsalt[2]
o cleaned exchanges in cg2d.F

ecco_c44_e23
merged patches between release1_p1 and release1_p2:
o fixed array boundary problem for adjoint
  (related to partial recomputation within subroutine
  related to dynamics -> calc_viscosity -> mom_...
o fixed recomputation in thermodynamics
o prepare (but not complete) recomputation problem in impldiff
o fixed problem for adjoint of global_max
o switched off sponge layer code in external_forcing
Bug fix in ctrl_mask_set_yz (spotted by G. Gebbie)

ecco_c44_e22
o Finally, the merges with the Scripps cost function terms:
  Various additions, modifications, quality checks.
o Plus: Included switch ALLOW_AUTODIFF_MONITOR to handle
  monitoring of adjoint state.
o Plus: removed comm_stats, ini_communication_patterns from diff. list
  (no more need to "keep" MPI headers for adjoint generation)
o Plus: exf changes:
  o added run-off routine
  o additional storing needed for ustress,vstess
    because of state-dependent quality check
  o added missing initialisations
o Plus: genmake with MAKEDEPEND variable was still missing in ecco-branch
NB: - verification/natl_box_adjoint/ 240 steps run
      * looks ok under Linux (twain.lcs.mit.edu)
      * looks ok on MIT SUN's (fjord.mit.edu)
      * NaN in reverse mode on Scripps SUN's at iter=214
      * NaN in reverse mode on IBM SP3 (BlueHorizon) at iter=204
    - 1 year forward int. global 2x2 deg. produces similar cost functions
      * all cost terms of new code are slightly smaller (0.5 to 3%).

ecco_c44_e21
o reversed order of ctrl/cost initialisation
o gmredi_slope_psi.F: Inconsistent types in MIN/MAX expressions
o modified to enable ctrl field swapping
o bug fix for global sum of ncvarlength in ctrl_init
o no more call to ctrl_unpack from ctrl_init
o no more write of ctrl vector in ctrl_pack
  however, init. of control vector from ctrl_unpack
o various bug fixes & consistent nobcs handling in 
  ctrl_pack/unpack routines (by G. Gebbie)
o optim package: Added obcs control part for lsopt I/O
  (by G. Gebbie)
o missing call to obcs_diags
o moved calls in packages_init_fixed to packages_readparms
  because some quantities are needed earlier.

ecco_c44_e20
o before major merges from the Scripps setup
  here are two small updates:
  - field swapping for surface flux controls enabled
    (remains t.b.d. for atmos. state plus obcs)
  - bug fix in active_file.F for xz-/yz- routines
  - added missing xz-/yz- routines to active_file_ad.F

ecco_c44_e19
o merged necessary patches:
  - AD-related changes for GMRedi
  - fixes i KPP (delZ -> drF)
  - hook to OBCS songe layer code in external_forcing
  - errorMessageUnit non-zero in eeboot.F
  - included GMREDI, EXACT_CONSERV to natl_box_adjoint verif.

ecco_c44_e18
o sponge layer code for obcs was missing
  - added hook in external_forcing.F
  - added storing for TAF
o new routine cost_init_barfiles to initialise
  adjoint fields adtbar, adsbar, adpsbar
  (needed in conjunction with corrected ladinit for active I/O)
o cleaned up and corrected order in packages_readparms, ecco_readparms
o corrected and simplified weights for obcs controls
  - weight fields simplified
  - bug fix in ctrl_pack
  - no more write of control vector in ctrl_pack
o i/j index bug fixes in cost_ssh_mean

ecco_c44_e17
o bug fixes in cost package
  * wrong identifier for active I/O of monthly mean psbar
    (cost_averagesfields, cost_ssh) xx_psbar_dummy
  * cleaned all identifier for active I/O of monthly fields
  * wrong ladinit in various cost routines
o merge with interval (chkpt44c_post - chkpt44d_post)
  * added missing EXCLUDE_MONITOR flags
  * changed "e" to "_d" in gmredi_slope_limit, gmredi_slope_psi
    (incompatible typ in MIN/MAX expressions caused problems
    on IBM SP3)
  * in genmake added variable MAKEDEPEND
    plus resetting for case SunOS
    added timer_stats.c routine for IBM SP3
  * removed variables in dynamics

ecco_c44_e16
o new ECCO checkpoint, the first since ecco_c43_e15
  which is branched from MITgcm.
  All changes were merged in between (see ecco-branch-mod? tags).
o last changes:
  * assuming path for TAF and TAMC are known (e.g. in $path)
  * genmake:
    - added tools/xmakedepend to circumvene shortcoming of
      SUN's makedepend (size too small)
    - invoking ../tools/xmakedepend instead of makedepend
    - changed compiler flags for case SunOS

ecco-branch-mod5
o mod's to reproduce open boundary run
o enable field swapping for OB's and climatology
o update store directives for OB control
o added option ALLOW_OBCS_PRESCRIBE
o call of getobcs now out of obcs_calc (param. list modified)

ecco-branch-mod4
o this is the second part of changes necessary to reconcile
  the natl_box_adjoint verification (with and without grdchk).
  >>>!!! CHANGES BETWEEN THE TAGS ecco-branch-mod3 !!!<<<
  >>>!!!                      AND ecco-branch-mod4 !!!<<<
  >>>!!! SHOULD BE MERGED INTO THE MAIN TRUNK      !!!<<<
  - genmake: removed $S64 overwrite for case SunOS
  - pkg/exf: update and corrections for field swapping and obcs
  - pkg/ecco: parameter lists for the_model_main, the_main_loop
              harmonized between ECCO and MITgcm
  - pkg/autodiff: added flow directives for obcs, mdsio_gl_slice
                  updated checkpointing_lev... lists for obcs
  - model/src: minor changes in forward_step, plot_field
  - pkg/mdsio: added mdsio_gl_slice

ecco-branch-mod3
o this is the first part of changes necessary to reconcile
  natl_box_adjoint verification (with and without grdchk).
  This set of changes is relevant for ECCO only.
  The next set/tag of changes (ecco-branch-mod4)
  should be merged into the main trunk.
  - update some options
  - parameter lists of ecco_the_model_main and ecco_the_main_loop
    differed from those of the MITgcm counterparts.

ecco-branch-mod2
o update ecco-branch-mod1 to checkpoint44
o exclude from updates:
  - verification/
  - adjoint/
  - pkg/cost
  - pkg/ctrl
  - pkg/ecco
  - pkg/obcs
  - model/src/the_model_main.F
  - model/src/the_main_loop.F

checkpoint44
o apply Shapiro filter on T&S before calc_PhiHyd (stagger time stepping)
o fix bug in mom_vi_del2uv
o added some stuff for AD

ecco-branch-mod1
o based on c43
o replaced packages cost, ctrl, ecco, obcs
o removed MITgcm verif.'s, added ECCO verif.'s
o added lsopt, optim for line search optimization.

checkpoint43
o added two new advection tests
o added global 4x4 degree ocean test
o added test of H&S94 with free surface on cube
o some final mods for gradient check, adjoint,...

checkpoint42
  Fixed AD-related problems:
o Store directives up-to-date with re-arranged Adams-Bashforth
  (mainly thermodynamics.F)
o New store directives for multi-dim. advection schemes
  * new CPP flag ALLOW_MULTI_DIM_ADVECTION
  * new common block and key passkey
  (mainly gad_advection.F)
o Modified store directives for split of dynamics/thermodynamics
  for the case ALLOW_KPP
o Cleaned argument list for timestep_tracer.F

checkpoint41
o re-formatted/added comments in prologues of key subroutines
  to work with protex

checkpoint40
o moved calc_gs, calc_gt and calc_tr1 back to model/src
o added FLT (floats) package from Arne along with demo. experiment
o re-arranged Adams-Bashforth scheme for tracers to allow easier
  implementation of forward-in-time forcing terms
o more mods for non-linear free-surface including new variable
o modified multi-dim method to work on cube
o bug fix in KPP (from DM)

checkpoint40pre9
o added DST advection schemes
o fix MPI bug on SGI's
o modifications for non-linear free-surface
o fixed conditionals for fixed flow/passive tracer only mode
o added tension/strain form of stress tensor
o changes to commenting of arguments for TAF/TAMC
o added/updated many matlab scripts
o added multi-dimensional advection method for tracers
  
checkpoint40pre8
o new package rw/
  Added method for dumping intermediate local arrays:
  mdsio_writetile - same as mdsio_writefield except works from inside
                    bi,bj loop
  mdsio_writelocal - same as mdsio_writetile except works for local
                     arrays
  write_local_r? - higher-level wrapper for mdsio_writelocal
  Controlled by diagFreq. Defaults to zero (ie. no dumps)
  Example given at end of mom_vecinv.F that dumps some local arrays.
o replaced calc_mom_rhs.F by mom_fluxform.F/mom_vecinc.F to
  control flux-form versus vector invariant code.
  Switch is runtime flag vectorInvariantMomentum (defaults to false)
  or genmake -DISABLE ...
o TAMC-related update to cope with mom_fluxform.F/mom_vecinc.F
  (additional storing is now needed for case vecinv;
  currently nothing implemented to switch this storing off
  in case fluxform is used since no CPP flag available).

checkpoint40pre7
o bug fix in dynamics.F
  calc_viscosity called before k=1,Nr loop.
o added some #ifdef's ALLOW_PASSIVE_TRACER
o cleaned initialisations in ctrl_map_ini
  related to TAF

checkpoint40pre6
o split dynamics into thermodynamics & dynamics
o corresponding split of calc_diffusivity into
  calc_diffusivity, calc_viscosity
  (kpp_calc_diff, kpp_calc_visc).
o Added diffkr, kapgm to control variables
o bug fix in gmredi_slope_limit for ldd97

checkpoint40pre5
o proper initialization of Adams-Bashforth time stepping
  + uses forward step for very first step of model (iter=0)
o re-generated *all* output since almost all output is modified by this
  change (sorry but we've been putting this one off for about 2 years)
  + natl_box, aim.5l_Equatorial_Channel and aim.5l_zon-ave were
    *not* regenerated since they are already out of date and I don't
    want to create the impression that they are suddenly working.
o removed KAP stuff for DEC's
o modified/added many .cvsignore files in */code and */input
o added new expt "solid-body.cs-32x32x1"
  + this uses an alternative form of ini_curvilinear_grid.F which
    is not necessarily any better than the current one...

checkpoint40pre4
o added re-initialisations of utrans,vtrans,rtrans in
  calc_common_factors which are crucial for TAF.
o extended iMin,jMin range for calc_common_factors,
  calc_diffusivity
o added option ALLOW_PASSIVE_TRACER
o a few minor updates and fixes

checkpoint40pre3
o created calc_gtr1.F for gad package
o split the_main_loop and re-introduced forward_step
o some recomputations of nIter0 for TAMC

checkpoint40pre2
o Updated to latest branch of AJA, JMC
o Added gradient check package
o Added routines for passive tracer handling
o Added carbon sequestration sensitivity experiment

checkpoint39
 o Modifications and fixes to support TAMC
   (mainly missing or wrong directives)
 o Corrected common blocks when fooling TAMC to produce adjoint I/O
   in addummy_in_stepping
 o Updated verification/vero/ (bug fixes in code/, correct pickups in input/)
 o Enabled "sliced" (xz-,yz-) exchanges, needed for obcs.
 o Included following packages:
   cal: calendar
   exf: external forcing
   ecco: essential routines to control use of cal, exf
         (NB: this is not the full ECCO environment)
 o disabled some packages by default in genmake

checkpoint38
 o see notes_c37_adj.txt
 o corrected wrong layer index in external_forcing_t
 o replaced the_main_loop/forward_step by the_main_loop
 o removed forceoutput from write_state
   (replaced criteria for initial/final state)
 o added runtime flag for pre-C35 pickups: usePickupBeforeC35

checkpoint37
 o mdsio.F routine split and packaged in pkg/mdsio
   (mdsio.F and mdsio_gl.F still exist in eesupp/src but are not
    used unless genmake -disable=mdsio)
 o allow a more precise surface-geopotential gradient for the atmosphere
   taking into account the change in space of Alpha (=1/rho) at the surface.
 o variable "etaN" (replace cg2d_x) is the surface R-anomaly [r unit]
   (ocean: sea surface height [m] / atmos: surface pressure anomaly [Pa])
 o Change units: Phi_Hydrostatic (=phiHyd), Phi_Surface(=cg2d_x) and
   Phi_NonHydrostatic (=cg3d_x), all have now the dimension of a potential
   [m2/s2] (pressure/rhoConst in the ocean ; Geo-Potential in the atmosphere).
 o Time-Average diagnostics defined as a pseudo package "timeave".
 o pickup files : old pickup (before c35) did not work with new code (c35
   and after) unless activating 2 commented lines in initialise-varia.
 o Non-Hydrostatic pickup file Pb fixed.
 o bug with Rigid-lid version (since c35) fixed.  

checkpoint36
 o implement Crank-Nickelson barotropic time-stepping
 o recover Time-Average diagnostics
 o fix Pb in checkpoint (PR#19) 
 o AIM become a standard package ; clean unused CPP_kees

checkpoint35
 o subtantial rewrite of dynamics.f
 o allows staggered time-stepping
 o packaged obcs, aim (Atmospheric Physics), zonal_filt, shap_filt
 o added bottom drag (linear + quadratic)

checkpoint34
 o Modified exchange routines for correct reverse simulation.
 o Added verification output to comply with bug fix in impldiff.F
   as of c33 (exp2, natl_box).
 o Corrected store directives in dynamics.F
 o Corrected array boundaries in impldiff.F
 o Corrected array dimensions in gmredi.
   Added temporary scalars to avoid storage by TAMC (gmredi, kpp).
 o Added routine GLOBAL_SUM_INT to global_sum.F
 o Added mdsio_gl.F for ECCO purposes.

checkpoint33
 o Fixed bug in lower BC in impldiff.F
 o Fixed confusion about units of forcing arrays in FFIELDS.h
   namely Fu,Fv,Qnet,Qsw,EmPmR:
   - Removed verification/natl_box/code/external_fields_scale.F
     (did not differ from that in model/src)
   - Changed units of fu,fv,Qnet,Qsw,EmPmR back to proper units
     (see FFIELDS.h for description)
   - Scale fu,fv,Qnet,Qsw,EmPmR when used in external_forcing_surf.F,
     kpp_calc.F and kpp_transport_t.F
   - Removed model/src/external_fields_scale.F and calls to it
   - verification/natl_box uses flux data with "atmospheric" sign so
     a special version of external_fields_load.F is used to
     change the data as it's read in. This way, the arrays
     have the right units and signs at all times tha a user could
     possibly use them.
 o Corrected genmake to delete a temporary file during configuration

checkpoint32
 o Scaling of forcing fields moved from external_forcing.F to
   external_fields_scale.F, called directly after loading fields.
 o Surface relaxation terms added to surface tendency fields in
   extra subroutine.
 o impldiff.F changed to avoid storing by TAMC of huge intermediate
   fields.
 o Changes in GMRedi to comply with packaging structure.
 o Modifications and bug fixes in KPP package.
 o Verification experiment for KPP added (verification/nat_box/)

checkpoint31
 o Packages interface brought in line with defined standard
   -> new routines packages_...F
   -> changes in initialise_fixed.F, initialise_varia.F
   -> enables initialisation interface for ECCO package
 o Rescaling of external forcing fields immediately after read
   (removed from external_forcing.F) 
   -> new: surface_fields_scale.F
   -> affects ini_foorcing.F, external_fields_load.F
 o Computation of surface tendencies before tendency updates.
   -> new: external_forcing_surf.F
 o Change of variable names useGMRedi, useKPP, useECCO
 o Further changes in dynamics.F, impldiff.F for TAMC
 o Tested for experiments 0, 2, 4.
   - not yet tested for GMRedi.
   - not yet tested for KPP.

checkpoint30
 o Updates for OBCs
 o New experiment for test OBCs (internal_wave)
 o New output.txt in verification/exp4/results/
 o Updates for KPP: calculation of viscosity corrected, new variables
   kpp_dumpFreq and kpp_taveFreq
 o CPP'd calls to system routines for TARGET_CRAY_VECTOR (P.H.)
   and entry for T90 in genmake

checkpoint29
 o packaged KPP and GM/Redi

checkpoint28
 o Corrected initialization of hFacMin for difference vertical coordinates
 o Modified calculation of partial cell thickness to more robust algorithm
 o config_summary.F: replaced write_1D_... by write_0D_...
   read_write.F: added subroutines write_0D_...
 o routines calc_common_factors, calc_gs, calc_gt, calc_phi_hyd, find_rho:
   included some initialisations required for TAMC.
 o routine calc_isoslopes: modified sqrt computation to make it 
   differentiable for zero argument.
 o routines dynamics, impldiff:
   included store directives and tape key computations required for TAMC.
 o ALL TAMC related changes are between ifdef ALLOW_AUTODIFF_TAMC

checkpoint27
 o fixed calc_isoslopes() to so that cancellation of terms in tensor
   formulation works properly with variable resolution.
 o restructured the calling tree between the_model_main() and dynamics()
 o split initialise() into initialise_fixed() and initialise_varia()
 o introduced initialization file pSurfInitFile for free surface (cg2d_x)
   in new routine ini_psurf()

checkpoint26
 o moved some #ifdef in optional routines to encompass everything
   except the argument declarations. This was using up some memory.
 o fixed macros like _ADT to work with both versions of Linux cpp
 o cleaned up some unused and uninitialized variables
   (helps when debugging with strict compile options)
 o split up CPP_EEOPTIONS.h into options and macros
   (macros are now in eesupp/inc/CPP_EEMACROS.h)
 o patch for 2 processor JAM mode

checkpoint25
 o updates for OBCs and NH
 o dramatically reduced memory usage
 o added "JAM" routines for use on Artic network
 o parameterization of convection by implicit vertical diffusion
 o added a diagnostic of convective index
 o moved call to calc_divg_hat() from dynamics() to solve_for_pressure()
   (this is was partly for OBCs and NH but also in anticipation of
    an explicit free-surface option)
 o initial state input files for U and V

checkpoint24
 o Removed some spurious "REAL"s
 o Updated KPP to latest version from JPL
 o Added a COS(latitude) in horizontal viscosity

checkpoint23
 o Added del^4 diffusion for salt and temperature
 o Multiple minor fixes (implicit none's, arguments to global_sum, etc.)

checkpoint22
 o Made many small changes: implicit none, format(i5), etc...
 o Introduced KPP mixing scheme (compiles and runs but *not* tested)

checkpoint21
 o Introduced new I/O package that supports direct-access records (mdsio.F)
 o Split-up mid-level I/O routines
 o Updated input data for experiments 0,1,2,4 and 5
 o Finally removed the genmake.* scripts (everyone seems happy with genmake)

checkpoint20
 o Tidied up open-boundaries some more
 o Added non-hydrostatic code
 o Fixed some input data
 o Modified MPI start-up to work in "coupled" context.

checkpoint19
 o Tidied up directory structure for verification experiments.
 o Added new code for open boundaries.
 o Corrected advective terms near boundaries.
 o Added CPP flag for "old UV" geometry and corrected spherical geometry.
 o Implemented free-slip/no-slip BCs and del^4 dissipation.
 o Split default parameters out of ini_parms.F into set_defaults.F.

checkpoint18
 o Further changes for optional code generation with 
   CPP - ugh!

checkpoint17
 o Beginning to incorporating modularity
   for supporting atmos. and ocean configs.
 o Small changes for TAMC complinace
 o New ultra simple test case. Barotropic box
   configuration "exp0".

checkpoint16
 o Minor changes to exchange routines to support 
   accumulation in reverse mode. Adjoint of an
   assignment is an addition.
 o Changes to support compilation by TAMC (LR(1) 
   syntax) and by g77 under Linux ( 72 character
   limit ).

checkpoint15
 Rewrote exchange routines to allow
 o General tile <-> tile connectivity.
 o TAMC reverse mode flag ( is this really needed? )
 o Variable width overlap and exchange region widths.
 o Hooks for sharing data via DMA, Arctic, Memory Channel, 
   shmput/shmget, VIA, SYSV shmem and every other cool 
   communication method.

checkpoint14
 Consistent isomorphism chages made. These allow dynamical core
 to support both pressure and meters as a vertical coordinate.

checkpoint13
 Release which corrects global_max problem and a couple
 of KGM time-averaging diagnostic errors. Also contains
 a double-gyre experiment setup as well as the baseline
 4 degree global template. The double gyre template is
 organised to allow it to be applied automatically to
 the baseline configuration.

branch-point-rdot
 A few tidy-ups have been made bt the real point of this
 check-point (excuse the pun) is to allow a branch to be
 made for the purposes of adding the rDot alterations.
 I don't want to commit the rDot to the main-trunk until
 we've actually tested it...

checkpoint12
 Tidy up and added generic genmake script (formerly
 configure script). 
 Released to testers.

checkpoint11
 Re-arranged initialise() and introduced ini_vertical_grid()
 and ini_masks_etc().

checkpoint10
 Introduced the configure script.
 Separated out the diags package.
 Added template for writing time-averages of tile/intermediate quantities.
 Updated SIZE.h in exp2 and made the data big-endian.

checkpoint9
 MPI fix. Filename changes (meta/data). salbin*y stuff.
 General tidy-up.
 SST.bin SSS.bin added to verification/exp2

checkpoint8
 Inludes time-dependant forcing and time-averaging.
 Works at 4x4 and 2.8125x2.8125 global

checkpoint7-4degree-ref
 Branch from checkpoint7. Released for application to
 global modeling and general modeling - process studies, regional
 model etc.. 
 Configured for verification/exp2 - 4 degree global, two process.

checkpoint7
 Created by cnh
 Simple 4 degree global simulation 
 configuration.
 Includes climatological wind, 
 hydrography, bathymetry etc
 Does not include Heat Flux and E-P

checkpoint6
 Created by cnh
 merged checkpoint5 with CD and 
 spherical polar code. 
 Still some problems with GM Redi
 abd full topography.

checkpoint5
 Created by AJA
 contains updates to GM Redi
 and reordered timestepping loop
 for Implicit Diffusion.

checkpoint4
 Created by cnh
 Contains memory saving macros ( _rdxc etc..) for when
 grid variations are limited.
 Contains polynomial coeffs for EOS and knudsen program
 for generation.

checkpoint3
 Created by cnh
 Added extra flags for runtime options
 Added this file
 Added implicit free-surface
 Added pre-conditioner
 Put compare01 into repository ( compare01/... )
 Put data and eedata into repository ( verification/exp1 )

checkpoint2
 Created by AJA
 Added GM/Redi

checkpoint1
 Created by AJA
 Restructured kloop in dynamics.F
 Added non-linear EOS

baseline
 Original checked in code

